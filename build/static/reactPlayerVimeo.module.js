(window["__LOADABLE_LOADED_CHUNKS__"] = window["__LOADABLE_LOADED_CHUNKS__"] || []).push([["reactPlayerVimeo"],{

/***/ "./node_modules/react-player/lazy/players/Vimeo.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-player/lazy/players/Vimeo.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}__webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");__webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");__webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");__webpack_require__(/*! core-js/modules/es.string.replace.js */ \"./node_modules/core-js/modules/es.string.replace.js\");var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __defNormalProp=(obj,key,value)=>key in obj?__defProp(obj,key,{enumerable:true,configurable:true,writable:true,value}):obj[key]=value;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true});};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});}return to;};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var __publicField=(obj,key,value)=>{__defNormalProp(obj,typeof key!==\"symbol\"?key+\"\":key,value);return value;};var Vimeo_exports={};__export(Vimeo_exports,{default:()=>Vimeo});module.exports=__toCommonJS(Vimeo_exports);var import_react=__toESM(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));var import_utils=__webpack_require__(/*! ../utils */ \"./node_modules/react-player/lazy/utils.js\");var import_patterns=__webpack_require__(/*! ../patterns */ \"./node_modules/react-player/lazy/patterns.js\");const SDK_URL=\"https://player.vimeo.com/api/player.js\";const SDK_GLOBAL=\"Vimeo\";const cleanUrl=url=>{return url.replace(\"/manage/videos\",\"\");};class Vimeo extends import_react.Component{constructor(){super(...arguments);// Prevent checking isLoading when URL changes\n__publicField(this,\"callPlayer\",import_utils.callPlayer);__publicField(this,\"duration\",null);__publicField(this,\"currentTime\",null);__publicField(this,\"secondsLoaded\",null);__publicField(this,\"mute\",()=>{this.setMuted(true);});__publicField(this,\"unmute\",()=>{this.setMuted(false);});__publicField(this,\"ref\",container=>{this.container=container;});}componentDidMount(){this.props.onMount&&this.props.onMount(this);}load(url){this.duration=null;(0,import_utils.getSDK)(SDK_URL,SDK_GLOBAL).then(Vimeo2=>{if(!this.container)return;const{playerOptions,title}=this.props.config;this.player=new Vimeo2.Player(this.container,_objectSpread({url:cleanUrl(url),autoplay:this.props.playing,muted:this.props.muted,loop:this.props.loop,playsinline:this.props.playsinline,controls:this.props.controls},playerOptions));this.player.ready().then(()=>{const iframe=this.container.querySelector(\"iframe\");iframe.style.width=\"100%\";iframe.style.height=\"100%\";if(title){iframe.title=title;}}).catch(this.props.onError);this.player.on(\"loaded\",()=>{this.props.onReady();this.refreshDuration();});this.player.on(\"play\",()=>{this.props.onPlay();this.refreshDuration();});this.player.on(\"pause\",this.props.onPause);this.player.on(\"seeked\",e=>this.props.onSeek(e.seconds));this.player.on(\"ended\",this.props.onEnded);this.player.on(\"error\",this.props.onError);this.player.on(\"timeupdate\",({seconds})=>{this.currentTime=seconds;});this.player.on(\"progress\",({seconds})=>{this.secondsLoaded=seconds;});this.player.on(\"bufferstart\",this.props.onBuffer);this.player.on(\"bufferend\",this.props.onBufferEnd);this.player.on(\"playbackratechange\",e=>this.props.onPlaybackRateChange(e.playbackRate));},this.props.onError);}refreshDuration(){this.player.getDuration().then(duration=>{this.duration=duration;});}play(){const promise=this.callPlayer(\"play\");if(promise){promise.catch(this.props.onError);}}pause(){this.callPlayer(\"pause\");}stop(){this.callPlayer(\"unload\");}seekTo(seconds,keepPlaying=true){this.callPlayer(\"setCurrentTime\",seconds);if(!keepPlaying){this.pause();}}setVolume(fraction){this.callPlayer(\"setVolume\",fraction);}setMuted(muted){this.callPlayer(\"setMuted\",muted);}setLoop(loop){this.callPlayer(\"setLoop\",loop);}setPlaybackRate(rate){this.callPlayer(\"setPlaybackRate\",rate);}getDuration(){return this.duration;}getCurrentTime(){return this.currentTime;}getSecondsLoaded(){return this.secondsLoaded;}render(){const{display}=this.props;const style={width:\"100%\",height:\"100%\",overflow:\"hidden\",display};return/* @__PURE__ */import_react.default.createElement(\"div\",{key:this.props.url,ref:this.ref,style});}}__publicField(Vimeo,\"displayName\",\"Vimeo\");__publicField(Vimeo,\"canPlay\",import_patterns.canPlay.vimeo);__publicField(Vimeo,\"forceLoad\",true);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-player/lazy/players/Vimeo.js\n");

/***/ })

}]);