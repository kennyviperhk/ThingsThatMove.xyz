(window["__LOADABLE_LOADED_CHUNKS__"] = window["__LOADABLE_LOADED_CHUNKS__"] || []).push([["triangle-landing"],{

/***/ "./packages/twentytwenty-theme/src/components/triangle-landing/triangle-landing.js":
/*!*****************************************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/triangle-landing/triangle-landing.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.split.js */ \"./node_modules/core-js/modules/es.string.split.js\");\n/* harmony import */ var core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../link */ \"./packages/twentytwenty-theme/src/components/link.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../loading */ \"./packages/twentytwenty-theme/src/components/loading.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers */ \"./packages/twentytwenty-theme/src/helpers/index.js\");\n/* harmony import */ var react_animated_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-animated-css */ \"./node_modules/react-animated-css/lib/index.js\");\n/* harmony import */ var react_animated_css__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_animated_css__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nlet _=t=>t,_t,_t2,_t3;function _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}//import TextLoop from \"react-text-loop\";\n//import { Player, ControlBar, Shortcut } from 'video-react';\n//import externalCSS from \"../styles/video-react.css\"; // import css\n//import { VideoPlayer } from \"../video-player\";\nconst sectionHeight='calc(100vw / 2.2)';const sectionHeightPortrait='calc(100vw * 1.42)';let subMenuTop='calc('+sectionHeight+' - 8vh)';let subMenuOpacity=1.0;let subMenuActiveBackgroundArtwork='black';let subMenuActiveBackgroundDesign='black';let subMenuActiveBackgroundTech='black';let subMenuActiveTextArtwork='white';let subMenuActiveTextDesign='white';let subMenuActiveTextTech='white';let nameTextShadowOn='-1px -1px 100px rgba(255,255,255,0.3),1px -1px 100px rgba(255,255,255,0.3),-1px 1px 100px rgba(255,255,255,0.3),1px 1px 100px rgba(255,255,255,0.3);';let frontImageOpacity=1.0;const subMenuFontSize='20px';var _ref= false?undefined:{name:\"1bralef-TriangleLanding\",styles:\"opacity:0;label:TriangleLanding;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref2= false?undefined:{name:\"1wzjk41-TriangleLanding\",styles:\"opacity:1;label:TriangleLanding;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const TriangleLanding=({state,actions})=>{let isBioPage;let isKineticsRoboticsPage;let isInteractiveDigitalPage;let isTechResearchPage;let isProjectsPage;let isHomePage;let isPost;let landingData;function changePage(e){e.preventDefault();landingData=state.source.get(extraPostLink);}const size=Object(_helpers__WEBPACK_IMPORTED_MODULE_6__[\"useWindowSize\"])();const p=\"landings/\";const extraPostLink=`/${p}`;landingData=state.source.get(extraPostLink);Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(()=>{actions.source.fetch(extraPostLink);},[]);const data=state.source.get(state.router.link);isBioPage=state.router.link==='/bio/'?true:false;isKineticsRoboticsPage=state.router.link==='/category/projects/kinetics-robotics/'?true:false;isInteractiveDigitalPage=state.router.link==='/category/projects/interactive-digital/'?true:false;isTechResearchPage=state.router.link==='/category/projects/tech-research/'?true:false;isProjectsPage=state.router.link==='/category/projects/'?true:false;isHomePage=data.isHome?true:false;isPost=data.isPost?true:false;let postTitle=\"\";let postTitleChinese=\"\";let postMedia=\"\";let mainName=\"\";let foregroundMedia;let backgroundMedia;if(isPost&&data.isReady){const post=state.source[data.type][data.id];let featureMediaURL=post.jetpack_featured_media_url;let n=featureMediaURL.indexOf('?');let ss=featureMediaURL.substring(0,n!=-1?n:featureMediaURL.length);postTitle=post.title.rendered;postTitleChinese=post.chinese_title;postMedia=post.background_media.guid?post.background_media.guid:ss;}if(landingData.isReady){let landingURL,item;if(isBioPage){landingURL=\"/landings/bio/\";}else if(isKineticsRoboticsPage){landingURL=\"/landings/kinetics-robotics/\";}else if(isInteractiveDigitalPage){landingURL=\"/landings/interactive-digital/\";}else if(isTechResearchPage){landingURL=\"/landings/tech-research/\";}else if(isProjectsPage){landingURL=\"/landings/kinetics-robotics/\";}else if(isHomePage){landingURL=\"/landings/home/\";}else if(isPost){//HOME\nlandingURL=\"/landings/home/\";//TODO\n}else{landingURL=\"/landings/home/\";//TODO\n}console.log(landingURL);var items=landingData.items.map(({type,id,link},index)=>{if(link===landingURL){item=state.source[type][id];}});const foregroundBlackDiv=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BlackDiv,{});const backgroundWhiteDiv=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BackgroundImageDiv,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(WhiteDiv,{})});const handleLoadedData=type=>{console.log(`${type} video loaded`);};const foregroundVideo=item.foreground_media[0]&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(VideoPlayerNative,{playsInline:true,autoPlay:true,muted:true,loop:true,onLoadedData:()=>handleLoadedData(\"Foreground\"),children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"source\",{src:item.foreground_media[0].guid+\"#t=0.1\",type:\"video/mp4\"},item.foreground_media[0].guid)})},item.foreground_media[0].guid);const backgroundVideo=item.background_media[0]&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BackgroundImageDiv,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(VideoPlayerNative,{playsInline:true,autoPlay:true,muted:true,loop:true,onLoadedData:()=>handleLoadedData(\"Background\"),children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"source\",{src:item.background_media[0].guid+\"#t=0.1\",type:\"video/mp4\"},item.background_media[0].guid)})},item.background_media[0].guid)});if(isBioPage){foregroundMedia=foregroundBlackDiv;backgroundMedia=backgroundWhiteDiv;subMenuTop='-100px';subMenuOpacity=0;subMenuActiveBackgroundArtwork='none';subMenuActiveBackgroundDesign='none';subMenuActiveBackgroundTech='none';subMenuActiveTextArtwork='black';subMenuActiveTextDesign='black';subMenuActiveTextTech='black';frontImageOpacity=1.0;mainName=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(MyName,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{})]});}else if(isHomePage){foregroundMedia=foregroundVideo;backgroundMedia=backgroundVideo;subMenuTop=size.width<=900&&isHomePage?'-100px':'calc('+sectionHeight+' - 8vh)';subMenuOpacity=size.width<=900&&isHomePage?0:1.0;subMenuActiveBackgroundArtwork='none';subMenuActiveBackgroundDesign='none';subMenuActiveBackgroundTech='none';subMenuActiveTextArtwork='black';subMenuActiveTextDesign='black';subMenuActiveTextTech='black';frontImageOpacity=1.0;mainName=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(MyName,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(react_animated_css__WEBPACK_IMPORTED_MODULE_7__[\"Animated\"],{animationIn:\"fadeIn\",animationInDuration:5000,animationInDelay:0,animationOut:\"fadeOut\",isVisible:true,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{children:\"THINGS THAT MOVE\"})})});/*\n        const playerOptions = {\n        sources: [\n          {\n            src: item.foreground_media[0].guid\n          },\n        ],\n        loop: true,\n        preload: \"auto\"\n        };\n      */}else if(isPost){foregroundMedia=foregroundBlackDiv;var imgs=[\"jpg\",\"jpeg\",\"gif\",\"tiff\",\"png\",\"webp\"];var vids=[\"mp4\",\"webm\"];if(imgs.indexOf(postMedia.split('.').pop())>=0){backgroundMedia=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BackgroundImageDivDarken,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(Img,{src:postMedia,alt:postTitle})});}else if(vids.indexOf(postMedia.split('.').pop())>=0){backgroundMedia=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BackgroundImageDivDarken,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(VideoPlayerNative,{playsInline:true,autoPlay:true,muted:true,loop:true,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"source\",{src:postMedia,type:\"video/mp4\"})})},postMedia)});}//  subMenuTop = '-100px';\nsubMenuOpacity=0;subMenuActiveBackgroundArtwork='none';subMenuActiveBackgroundDesign='none';subMenuActiveBackgroundTech='none';subMenuActiveTextArtwork='black';subMenuActiveTextDesign='black';subMenuActiveTextTech='black';frontImageOpacity=0;mainName=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(MyName,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{})]});}else if(isKineticsRoboticsPage){foregroundMedia=foregroundVideo;backgroundMedia=backgroundWhiteDiv;subMenuTop='10vh';subMenuOpacity=1.0;subMenuActiveBackgroundArtwork='black';subMenuActiveBackgroundDesign='none';subMenuActiveBackgroundTech='none';subMenuActiveTextArtwork='white';subMenuActiveTextDesign='black';subMenuActiveTextTech='black';frontImageOpacity=1.0;mainName=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(MyName,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"color:Black;text-shadow:\",nameTextShadowOn,\";\"+( false?undefined:\";label:mainName;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),children:\"Physical\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{})]});}else if(isInteractiveDigitalPage){foregroundMedia=foregroundVideo;backgroundMedia=backgroundWhiteDiv;subMenuTop='10vh';subMenuOpacity=1.0;subMenuActiveBackgroundArtwork='none';subMenuActiveBackgroundDesign='black';subMenuActiveBackgroundTech='none';subMenuActiveTextArtwork='black';subMenuActiveTextDesign='white';subMenuActiveTextTech='black';frontImageOpacity=1.0;mainName=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(MyName,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"color:Black;text-shadow:\",nameTextShadowOn,\";\"+( false?undefined:\";label:mainName;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),children:\"Digital\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{})]});}else if(isTechResearchPage){foregroundMedia=foregroundVideo;backgroundMedia=backgroundWhiteDiv;subMenuTop='10vh';subMenuOpacity=1.0;subMenuActiveBackgroundArtwork='none';subMenuActiveBackgroundDesign='none';subMenuActiveBackgroundTech='black';subMenuActiveTextArtwork='black';subMenuActiveTextDesign='black';subMenuActiveTextTech='white';frontImageOpacity=1.0;mainName=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(MyName,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"color:Black;text-shadow:\",nameTextShadowOn,\";\"+( false?undefined:\";label:mainName;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),children:\"Art and Technology\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{})]});}else if(isProjectsPage){foregroundMedia=foregroundVideo;backgroundMedia=backgroundWhiteDiv;subMenuTop='10vh';subMenuOpacity=1.0;subMenuActiveBackgroundArtwork='none';subMenuActiveBackgroundDesign='none';subMenuActiveBackgroundTech='none';subMenuActiveTextArtwork='black';subMenuActiveTextDesign='black';subMenuActiveTextTech='black';frontImageOpacity=1.0;mainName=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(MyName,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"color:Black;text-shadow:\",nameTextShadowOn,\";\"+( false?undefined:\";label:mainName;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{})]});}else{foregroundMedia=foregroundBlackDiv;backgroundMedia=backgroundWhiteDiv;subMenuTop='calc('+sectionHeight+' - 8vh)';subMenuOpacity=1.0;subMenuActiveBackgroundArtwork='none';subMenuActiveBackgroundDesign='none';subMenuActiveBackgroundTech='none';subMenuActiveTextArtwork='black';subMenuActiveTextDesign='black';subMenuActiveTextTech='black';frontImageOpacity=1.0;mainName=Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(MyName,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(BgH1Span,{children:\"THINGS THAT MOVE\"})});}}return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(TriangleSection,{className:\"container\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(TextLoopDiv,{children:mainName}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(PostTitleDiv,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(PostTitle,{children:postTitle}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(PostTitleChinese,{children:postTitleChinese})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(NumbersDeco,{css:isHomePage||isTechResearchPage?_ref2:_ref,children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"span\",{children:\"01\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"span\",{children:\"02\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"span\",{children:\"03\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"span\",{children:\"04\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"span\",{children:\"05\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"span\",{children:\"06\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"span\",{children:\"07\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"span\",{children:\"08\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"span\",{children:\"09\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(\"span\",{children:\"10\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(MyNameBottomLine,{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(DecoCircle,{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(SubMenu,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"top:\",subMenuTop,\";opacity:\",subMenuOpacity,\";\"+( false?undefined:\";label:TriangleLanding;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(SubMenuTitleDiv,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"background:\",subMenuActiveBackgroundArtwork,\";\"+( false?undefined:\";label:TriangleLanding;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(TitleLink,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"color:\",subMenuActiveTextArtwork,\";\"+( false?undefined:\";label:TriangleLanding;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Vb0ciLCJmaWxlIjoiQzpcXEdpdGh1YlxcVGhpbmdzVGhhdE1vdmUueHl6XFxwYWNrYWdlc1xcdHdlbnR5dHdlbnR5LXRoZW1lXFxzcmNcXGNvbXBvbmVudHNcXHRyaWFuZ2xlLWxhbmRpbmdcXHRyaWFuZ2xlLWxhbmRpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25uZWN0LCBHbG9iYWwsIGNzcywgc3R5bGVkLCBrZXlmcmFtZXMgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgTGluayBmcm9tIFwiLi4vbGlua1wiO1xuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4uL2xvYWRpbmdcIjtcbi8vaW1wb3J0IFRleHRMb29wIGZyb20gXCJyZWFjdC10ZXh0LWxvb3BcIjtcbmltcG9ydCB7IHVzZVdpbmRvd1NpemUgfSBmcm9tICcuLi8uLi9oZWxwZXJzJ1xuaW1wb3J0IHtBbmltYXRlZH0gZnJvbSBcInJlYWN0LWFuaW1hdGVkLWNzc1wiO1xuXG4vL2ltcG9ydCB7IFBsYXllciwgQ29udHJvbEJhciwgU2hvcnRjdXQgfSBmcm9tICd2aWRlby1yZWFjdCc7XG4vL2ltcG9ydCBleHRlcm5hbENTUyBmcm9tIFwiLi4vc3R5bGVzL3ZpZGVvLXJlYWN0LmNzc1wiOyAvLyBpbXBvcnQgY3NzXG4vL2ltcG9ydCB7IFZpZGVvUGxheWVyIH0gZnJvbSBcIi4uL3ZpZGVvLXBsYXllclwiO1xuXG5jb25zdCBzZWN0aW9uSGVpZ2h0ID0gJ2NhbGMoMTAwdncgLyAyLjIpJztcbmNvbnN0IHNlY3Rpb25IZWlnaHRQb3J0cmFpdCA9ICdjYWxjKDEwMHZ3ICogMS40MiknO1xubGV0IHN1Yk1lbnVUb3AgPSAnY2FsYygnICsgc2VjdGlvbkhlaWdodCArICcgLSA4dmgpJztcbmxldCBzdWJNZW51T3BhY2l0eSA9IDEuMDtcblxubGV0IHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdibGFjayc7XG5sZXQgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnYmxhY2snO1xubGV0IHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdibGFjayc7XG5cbmxldCBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnd2hpdGUnO1xubGV0IHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ3doaXRlJztcbmxldCBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnd2hpdGUnO1xuXG5sZXQgbmFtZVRleHRTaGFkb3dPbiA9ICctMXB4IC0xcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSwtMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyk7JztcblxuXG5sZXQgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbmNvbnN0IHN1Yk1lbnVGb250U2l6ZSA9ICcyMHB4JztcblxuY29uc3QgVHJpYW5nbGVMYW5kaW5nID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xuXG4gIGxldCBpc0Jpb1BhZ2U7XG4gIGxldCBpc0tpbmV0aWNzUm9ib3RpY3NQYWdlO1xuICBsZXQgaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlO1xuICBsZXQgaXNUZWNoUmVzZWFyY2hQYWdlO1xuICBsZXQgaXNQcm9qZWN0c1BhZ2U7XG4gIGxldCBpc0hvbWVQYWdlO1xuICBsZXQgaXNQb3N0O1xuICBsZXQgbGFuZGluZ0RhdGE7XG4gIGZ1bmN0aW9uIGNoYW5nZVBhZ2UoZSl7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGxhbmRpbmdEYXRhID0gc3RhdGUuc291cmNlLmdldChleHRyYVBvc3RMaW5rKTtcbiAgfVxuXG4gIGNvbnN0IHNpemUgPSB1c2VXaW5kb3dTaXplKCk7XG4gIGNvbnN0IHAgPSBcImxhbmRpbmdzL1wiO1xuICBjb25zdCBleHRyYVBvc3RMaW5rID0gYC8ke3B9YDtcbiAgbGFuZGluZ0RhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KGV4dHJhUG9zdExpbmspO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGFjdGlvbnMuc291cmNlLmZldGNoKGV4dHJhUG9zdExpbmspO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuXG4gIGlzQmlvUGFnZSA9IChzdGF0ZS5yb3V0ZXIubGluayA9PT0gJy9iaW8vJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzS2luZXRpY3NSb2JvdGljc1BhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMva2luZXRpY3Mtcm9ib3RpY3MvJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzSW50ZXJhY3RpdmVEaWdpdGFsUGFnZSA9IChzdGF0ZS5yb3V0ZXIubGluayA9PT0gJy9jYXRlZ29yeS9wcm9qZWN0cy9pbnRlcmFjdGl2ZS1kaWdpdGFsLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc1RlY2hSZXNlYXJjaFBhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMvdGVjaC1yZXNlYXJjaC8nKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNQcm9qZWN0c1BhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMvJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzSG9tZVBhZ2UgPSAoZGF0YS5pc0hvbWUpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc1Bvc3QgPSAoZGF0YS5pc1Bvc3QpID8gdHJ1ZSA6IGZhbHNlO1xuXG4gIGxldCBwb3N0VGl0bGUgPSBcIlwiO1xuICBsZXQgcG9zdFRpdGxlQ2hpbmVzZSA9IFwiXCI7XG4gIGxldCBwb3N0TWVkaWEgPSBcIlwiO1xuICBsZXQgbWFpbk5hbWUgPSBcIlwiXG4gIGxldCBmb3JlZ3JvdW5kTWVkaWE7XG4gIGxldCBiYWNrZ3JvdW5kTWVkaWE7XG5cbiAgaWYgKGlzUG9zdCAmJiBkYXRhLmlzUmVhZHkpIHtcblxuICAgIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICBsZXQgZmVhdHVyZU1lZGlhVVJMID0gcG9zdC5qZXRwYWNrX2ZlYXR1cmVkX21lZGlhX3VybDtcbiAgICBsZXQgbiA9IGZlYXR1cmVNZWRpYVVSTC5pbmRleE9mKCc/Jyk7XG4gICAgbGV0IHNzID0gZmVhdHVyZU1lZGlhVVJMLnN1YnN0cmluZygwLCBuICE9IC0xID8gbiA6IGZlYXR1cmVNZWRpYVVSTC5sZW5ndGgpO1xuICAgIHBvc3RUaXRsZSA9IHBvc3QudGl0bGUucmVuZGVyZWQ7XG4gICAgcG9zdFRpdGxlQ2hpbmVzZSA9IHBvc3QuY2hpbmVzZV90aXRsZTtcbiAgICBwb3N0TWVkaWEgPSBwb3N0LmJhY2tncm91bmRfbWVkaWEuZ3VpZCA/IHBvc3QuYmFja2dyb3VuZF9tZWRpYS5ndWlkIDogc3M7XG5cbiAgfVxuXG5cbiAgaWYgKGxhbmRpbmdEYXRhLmlzUmVhZHkpIHtcblxuICAgIGxldCBsYW5kaW5nVVJMLCBpdGVtO1xuICAgIGlmIChpc0Jpb1BhZ2UpIHtcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9iaW8vXCI7XG4gICAgfSBlbHNlIGlmIChpc0tpbmV0aWNzUm9ib3RpY3NQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3Mva2luZXRpY3Mtcm9ib3RpY3MvXCI7XG4gICAgfSBlbHNlIGlmIChpc0ludGVyYWN0aXZlRGlnaXRhbFBhZ2UpIHtcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9pbnRlcmFjdGl2ZS1kaWdpdGFsL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNUZWNoUmVzZWFyY2hQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvdGVjaC1yZXNlYXJjaC9cIjtcbiAgICB9IGVsc2UgaWYgKGlzUHJvamVjdHNQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3Mva2luZXRpY3Mtcm9ib3RpY3MvXCI7XG4gICAgfSBlbHNlIGlmIChpc0hvbWVQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaG9tZS9cIjtcbiAgICB9IGVsc2UgaWYgKGlzUG9zdCkgeyAvL0hPTUVcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9ob21lL1wiOyAvL1RPRE9cbiAgICB9IGVsc2Uge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2hvbWUvXCI7IC8vVE9ET1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhsYW5kaW5nVVJMKVxuICAgIHZhciBpdGVtcyA9IGxhbmRpbmdEYXRhLml0ZW1zLm1hcCgoeyB0eXBlLCBpZCwgbGluayB9LCBpbmRleCkgPT4ge1xuICAgICAgaWYgKGxpbmsgPT09IGxhbmRpbmdVUkwpIHtcbiAgICAgICAgaXRlbSA9IHN0YXRlLnNvdXJjZVt0eXBlXVtpZF07XG4gICAgICB9XG4gICAgfSlcblxuICAgIGNvbnN0IGZvcmVncm91bmRCbGFja0RpdiA9IDxCbGFja0Rpdj48L0JsYWNrRGl2PjtcbiAgICBjb25zdCBiYWNrZ3JvdW5kV2hpdGVEaXYgPSA8QmFja2dyb3VuZEltYWdlRGl2PjxXaGl0ZURpdj48L1doaXRlRGl2PjwvQmFja2dyb3VuZEltYWdlRGl2PjtcblxuICAgIGNvbnN0IGhhbmRsZUxvYWRlZERhdGEgPSAodHlwZSkgPT4ge1xuICAgICAgY29uc29sZS5sb2coYCR7dHlwZX0gdmlkZW8gbG9hZGVkYCk7XG4gICAgfTtcbiAgICBcbiAgICBjb25zdCBmb3JlZ3JvdW5kVmlkZW8gPSBpdGVtLmZvcmVncm91bmRfbWVkaWFbMF0gJiYgKFxuICAgICAgPFJlYWN0LkZyYWdtZW50IGtleT17aXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdLmd1aWR9PlxuICAgICAgICA8VmlkZW9QbGF5ZXJOYXRpdmVcbiAgICAgICAgICBwbGF5c0lubGluZVxuICAgICAgICAgIGF1dG9QbGF5XG4gICAgICAgICAgbXV0ZWRcbiAgICAgICAgICBsb29wXG4gICAgICAgICAgb25Mb2FkZWREYXRhPXsoKSA9PiBoYW5kbGVMb2FkZWREYXRhKFwiRm9yZWdyb3VuZFwiKX1cbiAgICAgICAgPlxuICAgICAgICAgIDxzb3VyY2VcbiAgICAgICAgICAgIHNyYz17aXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdLmd1aWQgKyBcIiN0PTAuMVwifVxuICAgICAgICAgICAgdHlwZT17XCJ2aWRlby9tcDRcIn1cbiAgICAgICAgICAgIGtleT17aXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdLmd1aWR9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9WaWRlb1BsYXllck5hdGl2ZT5cbiAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgKTtcbiAgICBjb25zdCBiYWNrZ3JvdW5kVmlkZW8gPSBpdGVtLmJhY2tncm91bmRfbWVkaWFbMF0gJiYgKFxuICAgICAgPEJhY2tncm91bmRJbWFnZURpdj5cbiAgICAgICAgPFJlYWN0LkZyYWdtZW50IGtleT17aXRlbS5iYWNrZ3JvdW5kX21lZGlhWzBdLmd1aWR9PlxuICAgICAgICAgIDxWaWRlb1BsYXllck5hdGl2ZVxuICAgICAgICAgICAgcGxheXNJbmxpbmVcbiAgICAgICAgICAgIGF1dG9QbGF5XG4gICAgICAgICAgICBtdXRlZFxuICAgICAgICAgICAgbG9vcFxuICAgICAgICAgICAgb25Mb2FkZWREYXRhPXsoKSA9PiBoYW5kbGVMb2FkZWREYXRhKFwiQmFja2dyb3VuZFwiKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8c291cmNlXG4gICAgICAgICAgICAgIHNyYz17aXRlbS5iYWNrZ3JvdW5kX21lZGlhWzBdLmd1aWQgKyBcIiN0PTAuMVwifVxuICAgICAgICAgICAgICB0eXBlPXtcInZpZGVvL21wNFwifVxuICAgICAgICAgICAgICBrZXk9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L1ZpZGVvUGxheWVyTmF0aXZlPlxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgPC9CYWNrZ3JvdW5kSW1hZ2VEaXY+XG4gICAgKTtcblxuICAgIGlmIChpc0Jpb1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZEJsYWNrRGl2O1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuXG4gICAgICBzdWJNZW51VG9wID0gJy0xMDBweCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG4gICAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfSBlbHNlIGlmIChpc0hvbWVQYWdlKSB7XG5cbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRWaWRlbztcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRWaWRlbztcblxuICAgICAgc3ViTWVudVRvcCA9IChzaXplLndpZHRoIDw9IDkwMCAmJiBpc0hvbWVQYWdlID8gJy0xMDBweCcgOiAnY2FsYygnICsgc2VjdGlvbkhlaWdodCArICcgLSA4dmgpJyk7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IChzaXplLndpZHRoIDw9IDkwMCAmJiBpc0hvbWVQYWdlID8gMCA6IDEuMCk7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QW5pbWF0ZWQgYW5pbWF0aW9uSW49XCJmYWRlSW5cIiBhbmltYXRpb25JbkR1cmF0aW9uPXs1MDAwfSBhbmltYXRpb25JbkRlbGF5PXswfSBhbmltYXRpb25PdXQ9XCJmYWRlT3V0XCIgaXNWaXNpYmxlPXt0cnVlfT48QmdIMVNwYW4+VEhJTkdTIFRIQVQgTU9WRTwvQmdIMVNwYW4+PC9BbmltYXRlZD48L015TmFtZT47XG5cbiAgICAgIC8qXG4gICAgICAgIGNvbnN0IHBsYXllck9wdGlvbnMgPSB7XG4gICAgICAgIHNvdXJjZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzcmM6IGl0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbG9vcDogdHJ1ZSxcbiAgICAgICAgcHJlbG9hZDogXCJhdXRvXCJcbiAgICAgICAgfTtcbiAgICAgICovXG5cbiAgICB9IGVsc2UgaWYgKGlzUG9zdCkge1xuXG4gICAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRCbGFja0RpdjtcblxuICAgICAgICB2YXIgaW1ncyA9W1wianBnXCIsIFwianBlZ1wiLCBcImdpZlwiLCBcInRpZmZcIiwgXCJwbmdcIiwgXCJ3ZWJwXCJdO1xuICAgICAgICB2YXIgdmlkcyA9IFtcIm1wNFwiLCBcIndlYm1cIl07XG5cbiAgICAgICAgaWYoIGltZ3MuaW5kZXhPZihwb3N0TWVkaWEuc3BsaXQoJy4nKS5wb3AoKSkgPj0gMCApXG4gICAgICAgIHtcbiAgICAgICAgICAgIGJhY2tncm91bmRNZWRpYSA9IDxCYWNrZ3JvdW5kSW1hZ2VEaXZEYXJrZW4+PEltZyBzcmM9e3Bvc3RNZWRpYX0gYWx0PXtwb3N0VGl0bGV9IC8+PC9CYWNrZ3JvdW5kSW1hZ2VEaXZEYXJrZW4+O1xuICAgICAgICB9IGVsc2UgaWYgKCB2aWRzLmluZGV4T2YocG9zdE1lZGlhLnNwbGl0KCcuJykucG9wKCkpID49IDAgKVxuICAgICAgICB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kTWVkaWEgPSA8QmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjxSZWFjdC5GcmFnbWVudCBrZXk9e3Bvc3RNZWRpYX0+PFZpZGVvUGxheWVyTmF0aXZlIHBsYXlzSW5saW5lPXt0cnVlfSBhdXRvUGxheT17dHJ1ZX0gbXV0ZWQ9e3RydWV9IGxvb3A9e3RydWV9ID5cbiAgICAgICAgICAgICAgPHNvdXJjZSBzcmM9e3Bvc3RNZWRpYX0gdHlwZT1cInZpZGVvL21wNFwiIC8+XG4gICAgICAgICAgICAgIDwvVmlkZW9QbGF5ZXJOYXRpdmU+PC9SZWFjdC5GcmFnbWVudD48L0JhY2tncm91bmRJbWFnZURpdkRhcmtlbj47XG4gICAgICAgIH1cblxuICAgIC8vICBzdWJNZW51VG9wID0gJy0xMDBweCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAwO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNLaW5ldGljc1JvYm90aWNzUGFnZSkge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJzEwdmgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnd2hpdGUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT5QaHlzaWNhbDwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuXG4gICAgfSBlbHNlIGlmIChpc0ludGVyYWN0aXZlRGlnaXRhbFBhZ2UpIHtcbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRWaWRlbztcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcbiAgICAgIHN1Yk1lbnVUb3AgPSAnMTB2aCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDEuMDtcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICd3aGl0ZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4gY3NzPXtjc3NgY29sb3I6QmxhY2s7dGV4dC1zaGFkb3c6JHtuYW1lVGV4dFNoYWRvd09ufWB9PkRpZ2l0YWw8L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcbiAgICB9IGVsc2UgaWYgKGlzVGVjaFJlc2VhcmNoUGFnZSkge1xuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0VGVjaCA9ICd3aGl0ZSc7XG4gICAgICBmcm9udEltYWdlT3BhY2l0eSA9IDEuMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3BhbiBjc3M9e2Nzc2Bjb2xvcjpCbGFjazt0ZXh0LXNoYWRvdzoke25hbWVUZXh0U2hhZG93T259YH0+QXJ0IGFuZCBUZWNobm9sb2d5PC9CZ0gxU3Bhbj48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfSBlbHNlIGlmIChpc1Byb2plY3RzUGFnZSkge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJzEwdmgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4gY3NzPXtjc3NgY29sb3I6QmxhY2s7dGV4dC1zaGFkb3c6JHtuYW1lVGV4dFNoYWRvd09ufWB9PjwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuXG4gICAgfVxuICAgIGVsc2Uge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kQmxhY2tEaXY7XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKSc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDEuMDtcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0VGVjaCA9ICdibGFjayc7XG4gICAgICBmcm9udEltYWdlT3BhY2l0eSA9IDEuMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3Bhbj5USElOR1MgVEhBVCBNT1ZFPC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfVxuXG4gIH1cblxuICByZXR1cm4gKDxUcmlhbmdsZVNlY3Rpb24gY2xhc3NOYW1lPVwiY29udGFpbmVyXCIgPlxuXG4gICAgPFRleHRMb29wRGl2PlxuICAgICAgICB7Lyo8VGhpbmdzVGhhdE1vdmU+VEhJTkdTIFRIQVQgTU9WRTwvVGhpbmdzVGhhdE1vdmU+Ki99XG4gICAgICAgIHttYWluTmFtZX1cbiAgICA8L1RleHRMb29wRGl2PlxuXG4gICAgPFBvc3RUaXRsZURpdj48UG9zdFRpdGxlPntwb3N0VGl0bGV9PC9Qb3N0VGl0bGU+PFBvc3RUaXRsZUNoaW5lc2U+e3Bvc3RUaXRsZUNoaW5lc2V9PC9Qb3N0VGl0bGVDaGluZXNlPjwvUG9zdFRpdGxlRGl2PlxuXG4gICAgPE51bWJlcnNEZWNvIGNzcz17aXNIb21lUGFnZSB8fCBpc1RlY2hSZXNlYXJjaFBhZ2UgPyBjc3Ngb3BhY2l0eTogMTtgOmNzc2BvcGFjaXR5OiAwO2B9PjxzcGFuPjAxPC9zcGFuPjxzcGFuPjAyPC9zcGFuPjxzcGFuPjAzPC9zcGFuPjxzcGFuPjA0PC9zcGFuPjxzcGFuPjA1PC9zcGFuPjxzcGFuPjA2PC9zcGFuPjxzcGFuPjA3PC9zcGFuPjxzcGFuPjA4PC9zcGFuPjxzcGFuPjA5PC9zcGFuPjxzcGFuPjEwPC9zcGFuPjwvTnVtYmVyc0RlY28+XG4gICAgPE15TmFtZUJvdHRvbUxpbmU+PC9NeU5hbWVCb3R0b21MaW5lPlxuICAgIDxEZWNvQ2lyY2xlPjwvRGVjb0NpcmNsZT5cbiAgICB7Lypjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kfTtgfSovfVxuXG4gICAgPFN1Yk1lbnUgY3NzPXtjc3NgdG9wOiAke3N1Yk1lbnVUb3B9OyBvcGFjaXR5OiAke3N1Yk1lbnVPcGFjaXR5fWB9PlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29ya307YH0+PFRpdGxlTGluayBjc3M9e2Nzc2Bjb2xvcjogJHtzdWJNZW51QWN0aXZlVGV4dEFydHdvcmt9O2B9IGxpbms9XCIvY2F0ZWdvcnkvcHJvamVjdHMva2luZXRpY3Mtcm9ib3RpY3NcIiBvbkNsaWNrPXtlID0+IGNoYW5nZVBhZ2UoZSl9PktpbmV0aWNzIGFuZCBSb2JvdGljczwvVGl0bGVMaW5rPjwvU3ViTWVudVRpdGxlRGl2PlxuICAgICAgPFRpdGxlRGl2SHI+PEhyTGluZT48L0hyTGluZT48L1RpdGxlRGl2SHI+XG4gICAgICA8U3ViTWVudVRpdGxlRGl2IGNzcz17Y3NzYGJhY2tncm91bmQ6ICR7c3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ259O2B9PjxUaXRsZUxpbmsgY3NzPXtjc3NgY29sb3I6ICR7c3ViTWVudUFjdGl2ZVRleHREZXNpZ259O2B9IGxpbms9XCIvY2F0ZWdvcnkvcHJvamVjdHMvaW50ZXJhY3RpdmUtZGlnaXRhbFwiIG9uQ2xpY2s9e2UgPT4gY2hhbmdlUGFnZShlKX0+SW50ZXJhdGl2ZSBhbmQgRGlnaXRhbDwvVGl0bGVMaW5rPjwvU3ViTWVudVRpdGxlRGl2PlxuICAgICAgPFRpdGxlRGl2SHI+PEhyTGluZT48L0hyTGluZT48L1RpdGxlRGl2SHI+XG4gICAgICA8U3ViTWVudVRpdGxlRGl2IGNzcz17Y3NzYGJhY2tncm91bmQ6ICR7c3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNofTtgfT48VGl0bGVMaW5rIGNzcz17Y3NzYGNvbG9yOiAke3N1Yk1lbnVBY3RpdmVUZXh0VGVjaH07YH0gbGluaz1cIi9jYXRlZ29yeS9wcm9qZWN0cy90ZWNoLXJlc2VhcmNoXCIgb25DbGljaz17ZSA9PiBjaGFuZ2VQYWdlKGUpfT5UZWNoIGFuZCBSZXNlYXJjaDwvVGl0bGVMaW5rPjwvU3ViTWVudVRpdGxlRGl2PlxuICAgIDwvU3ViTWVudT5cbiAgICA8RnJvbnRJbWFnZURpdiBjc3M9e2Nzc2BvcGFjaXR5OiAke2Zyb250SW1hZ2VPcGFjaXR5fTtgfT5cbiAgICAgIDxGcm9udEltYWdlUG9seWdvbk91dERpdj5cbiAgICAgICAgPEFuaW1hdGVkIGFuaW1hdGlvbkluPVwiZmFkZUluXCIgYW5pbWF0aW9uSW5EdXJhdGlvbj17NDAwMH0gYW5pbWF0aW9uSW5EZWxheT17MjAwMH0gYW5pbWF0aW9uT3V0PVwiZmFkZU91dFwiIGlzVmlzaWJsZT17dHJ1ZX0+XG4gICAgICAgIDxGcm9udEltYWdlUG9seWdvbkRpdiA+XG4gICAgICAgICAge2ZvcmVncm91bmRNZWRpYX1cbiAgICAgICAgPC9Gcm9udEltYWdlUG9seWdvbkRpdj5cbiAgICAgICAgPC9BbmltYXRlZD5cbiAgICAgIDwvRnJvbnRJbWFnZVBvbHlnb25PdXREaXY+XG4gICAgPC9Gcm9udEltYWdlRGl2PlxuICAgIHtiYWNrZ3JvdW5kTWVkaWF9XG4gIDwvVHJpYW5nbGVTZWN0aW9uPlxuICApO1xuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoVHJpYW5nbGVMYW5kaW5nKTtcblxuY29uc3QgVHJpYW5nbGVTZWN0aW9uID0gc3R5bGVkLnNlY3Rpb25gXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG5jb25zdCBUZXh0TG9vcERpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOmFic29sdXRlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIHRvcDowO1xuICBsZWZ0OjA7XG4gIHdpZHRoOjEwMCU7XG4gIHotaW5kZXg6MztcbiAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KSB7XG4gICAgICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fTtcbiAgfVxuICAmIGRpdntcbiAgICAmIGRpdntcbiAgICAgIHdpZHRoOjEwMHZ3O1xuICAgIH1cbiAgfVxuYFxuXG4vKlxudGV4dC1zaGFkb3c6XG4gLTFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSxcbiAgMXB4IC0xcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLFxuICAtMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksXG4gICAxcHggMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKTtcbiovXG5cbmNvbnN0IE15TmFtZSA9IHN0eWxlZC5oMWBcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBcIkFyY2hpdiBHcm90ZXNrXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJIZWx2ZXRpY2EgTmV1ZVwiLFxuICBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogNy41dnc7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgei1pbmRleDozO1xuICBsZXR0ZXItc3BhY2luZzogMC4zdnc7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIGRpc3BsYXk6ZmxleDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgZm9udC1zaXplOiAxNS41dnc7XG4gICAgcGFkZGluZy10b3A6MTUwcHg7XG4gIH1cbmA7XG5cblxuXG5jb25zdCBCZ0gxU3BhbiA9IHN0eWxlZC5kaXZgXG5wYWRkaW5nOiAwIDUwcHg7XG50cmFuc2l0aW9uOiBhbGwgMS4wcztcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgIHBhZGRpbmc6IDAgMDtcbiAgfVxuYFxuXG5jb25zdCBOdW1iZXJzRGVjbyA9IHN0eWxlZC5zcGFuYFxuICBjb2xvcjojNzA3MDcwO1xuICB3aWR0aDoxMDAlO1xuICB6LWluZGV4OjE7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjIyKTtcbiAgZGlzcGxheTpmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZmxleC13cmFwOiBub3dyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAmIHNwYW57XG4gICAgZm9udC13ZWlnaHQ6MjAwO1xuICB9XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH0gKiAwLjM1KTtcbiAgfVxuYFxuXG5jb25zdCBNeU5hbWVCb3R0b21MaW5lID0gc3R5bGVkLnNwYW5gXG4gIGJvcmRlci1ib3R0b206IDFweCAjNzA3MDcwIHNvbGlkO1xuICB3aWR0aDoxMDAlO1xuICB6LWluZGV4OjI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjc1KTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgICB0b3A6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC44MCk7XG4gIH1cbmBcblxuY29uc3QgY2lyY2xlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAzMyUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDIwJSwtMTAlKSBzY2FsZSgxLjIpO1xuICB9XG4gIDY2JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTIwJSwxMCUpIHNjYWxlKDAuOCk7XG4gIH1cbmBcblxuY29uc3QgRGVjb0NpcmNsZSA9IHN0eWxlZC5zcGFuYFxuICBib3JkZXI6IDFweCAjNzA3MDcwIHNvbGlkO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHdpZHRoOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjYpO1xuICBoZWlnaHQ6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0fSAqIDAuNik7XG4gIHotaW5kZXg6IDI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjIwKTtcbiAgbGVmdDo4JTtcbiAgYW5pbWF0aW9uOiAke2NpcmNsZUFuaW1hdGlvbn0gMTIwcyBlYXNlIGluZmluaXRlO1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIEBtZWRpYShvcmllbnRhdGlvbjpwb3J0cmFpdCl7XG4gICAgd2lkdGg6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC40KTtcbiAgICBoZWlnaHQ6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC40KTtcbiAgICB0b3A6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC4yMik7XG4gIH1cbmBcblxuY29uc3QgQmFja2dyb3VuZEltYWdlRGl2ID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogLTE7XG4gICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgJjphZnRlcntcbiAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgIHdpZHRoOjEwMCU7IGhlaWdodDoxMDAlO1xuICAgICAgdG9wOjA7IGxlZnQ6MDtcbiAgICAgIGJhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjYpO1xuICAgICAgb3BhY2l0eTowO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgfVxuYDtcblxuY29uc3QgQmFja2dyb3VuZEltYWdlRGl2RGFya2VuID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogLTE7XG4gICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgJjphZnRlcntcbiAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgIHdpZHRoOjEwMCU7IGhlaWdodDoxMDAlO1xuICAgICAgdG9wOjA7IGxlZnQ6MDtcbiAgICAgIGJhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjYpO1xuICAgICAgb3BhY2l0eToxO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgfVxuYDtcblxuXG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZSA9IHN0eWxlZC5pbWdgXG4gIG1pbi13aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbmA7XG5cblxuY29uc3QgRnJvbnRJbWFnZURpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gIHRvcDowO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KSB7XG4gICAgICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fTtcbiAgfVxuYDtcbi8qLy9odHRwczovL2Jlbm5ldHRmZWVseS5jb20vY2xpcHB5LyovXG5jb25zdCB0cmlhbmdsZUFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMzMlIHtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oNTAlIDE1JSwgMzElIDg4JSwgNzclIDYwJSk7XG4gIH1cbiAgNjYlIHtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oNzIlIDE5JSwgMjklIDM5JSwgNjAlIDk0JSk7XG4gIH1cbmBcblxuY29uc3QgdHJpYW5nbGVBbmltYXRpb25Nb2JpbGUgPSBrZXlmcmFtZXNgXG4gIDMzJSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDczJSAxMyUsIDglIDU4JSwgOTUlIDkxJSk7XG4gIH1cbiAgNjYlIHtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMTAwJSAxOSUsIDAgMzclLCA1OSUgODYlKTtcbiAgfVxuYFxuXG5jb25zdCBGcm9udEltYWdlUG9seWdvbk91dERpdiA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIGJhY2tncm91bmQ6ICM3MDcwNzA7XG4gIGFuaW1hdGlvbjogJHt0cmlhbmdsZUFuaW1hdGlvbn0gMTIwcyBlYXNlIGluZmluaXRlO1xuICBjbGlwLXBhdGg6IHBvbHlnb24oNjMlIDEwJSwgMjglIDY1JSwgNzIlIDkyJSk7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGNsaXAtcGF0aDogcG9seWdvbigzNSUgMTglLCA0JSA4OSUsIDEyMCUgNjYlKTtcbiAgICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb25Nb2JpbGV9IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fTtcbiAgfVxuYDtcblxuLyogdHJhbnNpdGlvbjogMC40cyBjdWJpYy1iZXppZXIoMCwgMSwgMC42NSwgMC45NCk7ICovXG5jb25zdCBGcm9udEltYWdlUG9seWdvbkRpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAzcHg7XG4gIGxlZnQ6IDNweDtcbiAgcmlnaHQ6IDNweDtcbiAgYm90dG9tOiAzcHg7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGFuaW1hdGlvbjogJHt0cmlhbmdsZUFuaW1hdGlvbn0gMTIwcyBlYXNlIGluZmluaXRlO1xuICBjbGlwLXBhdGg6IHBvbHlnb24oNjMlIDEwJSwgMjglIDY1JSwgNzIlIDkyJSk7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGNsaXAtcGF0aDogcG9seWdvbigzNSUgMTglLCA0JSA4OSUsIDEyMCUgNjYlKTtcbiAgICAgICAgYW5pbWF0aW9uOiAke3RyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlfSAxMjBzIGVhc2UgaW5maW5pdGU7XG4gIH1cbmA7XG5cbmNvbnN0IEZyb250SW1hZ2UgPSBzdHlsZWQuaW1nYFxuICB3aWR0aDogMTAwJTtcbiAgbWF4LWhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbmA7XG5cbi8qICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTsqL1xuY29uc3QgU3ViTWVudSA9IHN0eWxlZC5kaXZgXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA2MHB4O1xuICB6LWluZGV4OiAzO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgcGFkZGluZzogMTBweCAxNXB4IDEwcHggMTVweDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZmxleC1mbG93OmNvbHVtbjtcbiAgICBoZWlnaHQ6IDE4MHB4O1xuICB9XG4gIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuYDtcblxuXG5jb25zdCBTdWJNZW51VGl0bGVEaXYgPSBzdHlsZWQuZGl2YFxuICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgd2lkdGg6MjUwcHg7XG4gICY6bnRoLW9mLXR5cGUoMSl7XG4gICAgdGV4dC1hbGlnbjpsZWZ0O1xuICB9XG4gICY6bnRoLW9mLXR5cGUoMyl7XG4gICAgd2lkdGg6MzAwcHg7XG4gIH1cbiAgJjpudGgtb2YtdHlwZSg1KXtcbiAgICB0ZXh0LWFsaWduOnJpZ2h0O1xuICB9XG4gIHRleHQtc2hhZG93OiAtMXB4IC0xcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4wKSwxcHggLTFweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjApLC0xcHggMXB4IDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMCksMXB4IDFweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjIpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBoZWlnaHQ6MzhweDtcbiAgICAmOm50aC1vZi10eXBlKDEpe1xuICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgfVxuICAgICY6bnRoLW9mLXR5cGUoMyl7XG4gICAgICB3aWR0aDoyNzBweDtcbiAgICB9XG4gICAgJjpudGgtb2YtdHlwZSg1KXtcbiAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIH1cbiAgfVxuYDtcblxuY29uc3QgVGl0bGVEaXZIciA9IHN0eWxlZC5kaXZgXG4gIGZsZXgtZ3JvdzoxO1xuICBtYXJnaW4tdG9wOiAtMjBweDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCBibGFjaztcbiAgICBsZWZ0OjUwJTtcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICB9XG5gO1xuXG5jb25zdCBIckxpbmUgPSBzdHlsZWQuaHJgXG4gIGJvcmRlcjogbm9uZTtcbiAgaGVpZ2h0OiAxcHg7XG4gIC8qIFNldCB0aGUgaHIgY29sb3IgKi9cbiAgY29sb3I6IGJsYWNrOyAvKiBvbGQgSUUgKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IC8qIE1vZGVybiBCcm93c2VycyAqL1xuICAgIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgICAgZGlzcGxheTpub25lO1xuICAgIH1cbmA7XG5cbmNvbnN0IFRpdGxlTGluayA9IHN0eWxlZChMaW5rKWBcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBtaXgtYmxlbmQtbW9kZTogbm9ybWFsO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAke3N1Yk1lbnVGb250U2l6ZX07XG4gIGZvbnQtd2VpZ2h0OjUwMDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgcGFkZGluZzo1cHggNDVweCAxNXB4IDQ1cHg7XG4gICY6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG4gICY6YWN0aXZle1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBwYWRkaW5nOiAycHggMTVweCAwcHggMTVweDtcbiAgfVxuYDtcblxuY29uc3QgQmxhY2tEaXYgPSBzdHlsZWQuZGl2YFxuICBiYWNrZ3JvdW5kOmJsYWNrO1xuICB3aWR0aDoxMDAlO1xuICBoZWlnaHQ6MTAwJTtcbmA7XG5cbmNvbnN0IFdoaXRlRGl2ID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZDp3aGl0ZTtcbiAgd2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG5gO1xuXG5jb25zdCBQb3N0VGl0bGVEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDoxMDAlO1xuICBwYWRkaW5nLWxlZnQ6IDQ1cHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgfVxuYDtcblxuY29uc3QgUG9zdFRpdGxlID0gc3R5bGVkLmgxYFxuICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgYm90dG9tOjEuM2VtO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBmb250LXNpemU6IDMuNWVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBmb250LXNpemU6IDh2dztcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICB9XG5gO1xuY29uc3QgUG9zdFRpdGxlQ2hpbmVzZSA9IHN0eWxlZC5oMWBcbiAgcG9zaXRpb246YWJzb2x1dGU7XG4gIGJvdHRvbTowO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBmb250LXNpemU6IDMuMWVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBmb250LXNpemU6IDh2dztcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICB9XG5gO1xuXG5cbmNvbnN0IFZpZGVvUGxheWVyTmF0aXZlID0gc3R5bGVkLnZpZGVvYFxuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1hc3BlY3QtcmF0aW86IDE5MjAvMTA4MCkge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4tYXNwZWN0LXJhdGlvOiAxOTIwLzEwODApIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICB9XG5gO1xuXG5cbmNvbnN0IEltZyA9IHN0eWxlZC5pbWdgXG4gIGRpc3BsYXk6YmxvY2s7XG4gIG1pbi13aWR0aDoxMDAlO1xuICBoZWlnaHQ6MTAwJTtcbiAgb2JqZWN0LWZpdDpjb3ZlcjtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBoZWlnaHQ6MTAwJTtcbiAgfVxuYFxuIl19 */\"),link:\"/category/projects/kinetics-robotics\",onClick:e=>changePage(e),children:\"Kinetics and Robotics\"})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(TitleDivHr,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(HrLine,{})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(SubMenuTitleDiv,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"background:\",subMenuActiveBackgroundDesign,\";\"+( false?undefined:\";label:TriangleLanding;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(TitleLink,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"color:\",subMenuActiveTextDesign,\";\"+( false?undefined:\";label:TriangleLanding;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),link:\"/category/projects/interactive-digital\",onClick:e=>changePage(e),children:\"Interative and Digital\"})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(TitleDivHr,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(HrLine,{})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(SubMenuTitleDiv,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"background:\",subMenuActiveBackgroundTech,\";\"+( false?undefined:\";label:TriangleLanding;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(TitleLink,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"color:\",subMenuActiveTextTech,\";\"+( false?undefined:\";label:TriangleLanding;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),link:\"/category/projects/tech-research\",onClick:e=>changePage(e),children:\"Tech and Research\"})})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(FrontImageDiv,{css:/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"opacity:\",frontImageOpacity,\";\"+( false?undefined:\";label:TriangleLanding;\"), false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlVMkIiLCJmaWxlIjoiQzpcXEdpdGh1YlxcVGhpbmdzVGhhdE1vdmUueHl6XFxwYWNrYWdlc1xcdHdlbnR5dHdlbnR5LXRoZW1lXFxzcmNcXGNvbXBvbmVudHNcXHRyaWFuZ2xlLWxhbmRpbmdcXHRyaWFuZ2xlLWxhbmRpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25uZWN0LCBHbG9iYWwsIGNzcywgc3R5bGVkLCBrZXlmcmFtZXMgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgTGluayBmcm9tIFwiLi4vbGlua1wiO1xuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4uL2xvYWRpbmdcIjtcbi8vaW1wb3J0IFRleHRMb29wIGZyb20gXCJyZWFjdC10ZXh0LWxvb3BcIjtcbmltcG9ydCB7IHVzZVdpbmRvd1NpemUgfSBmcm9tICcuLi8uLi9oZWxwZXJzJ1xuaW1wb3J0IHtBbmltYXRlZH0gZnJvbSBcInJlYWN0LWFuaW1hdGVkLWNzc1wiO1xuXG4vL2ltcG9ydCB7IFBsYXllciwgQ29udHJvbEJhciwgU2hvcnRjdXQgfSBmcm9tICd2aWRlby1yZWFjdCc7XG4vL2ltcG9ydCBleHRlcm5hbENTUyBmcm9tIFwiLi4vc3R5bGVzL3ZpZGVvLXJlYWN0LmNzc1wiOyAvLyBpbXBvcnQgY3NzXG4vL2ltcG9ydCB7IFZpZGVvUGxheWVyIH0gZnJvbSBcIi4uL3ZpZGVvLXBsYXllclwiO1xuXG5jb25zdCBzZWN0aW9uSGVpZ2h0ID0gJ2NhbGMoMTAwdncgLyAyLjIpJztcbmNvbnN0IHNlY3Rpb25IZWlnaHRQb3J0cmFpdCA9ICdjYWxjKDEwMHZ3ICogMS40MiknO1xubGV0IHN1Yk1lbnVUb3AgPSAnY2FsYygnICsgc2VjdGlvbkhlaWdodCArICcgLSA4dmgpJztcbmxldCBzdWJNZW51T3BhY2l0eSA9IDEuMDtcblxubGV0IHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdibGFjayc7XG5sZXQgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnYmxhY2snO1xubGV0IHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdibGFjayc7XG5cbmxldCBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnd2hpdGUnO1xubGV0IHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ3doaXRlJztcbmxldCBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnd2hpdGUnO1xuXG5sZXQgbmFtZVRleHRTaGFkb3dPbiA9ICctMXB4IC0xcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSwtMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyk7JztcblxuXG5sZXQgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbmNvbnN0IHN1Yk1lbnVGb250U2l6ZSA9ICcyMHB4JztcblxuY29uc3QgVHJpYW5nbGVMYW5kaW5nID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xuXG4gIGxldCBpc0Jpb1BhZ2U7XG4gIGxldCBpc0tpbmV0aWNzUm9ib3RpY3NQYWdlO1xuICBsZXQgaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlO1xuICBsZXQgaXNUZWNoUmVzZWFyY2hQYWdlO1xuICBsZXQgaXNQcm9qZWN0c1BhZ2U7XG4gIGxldCBpc0hvbWVQYWdlO1xuICBsZXQgaXNQb3N0O1xuICBsZXQgbGFuZGluZ0RhdGE7XG4gIGZ1bmN0aW9uIGNoYW5nZVBhZ2UoZSl7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGxhbmRpbmdEYXRhID0gc3RhdGUuc291cmNlLmdldChleHRyYVBvc3RMaW5rKTtcbiAgfVxuXG4gIGNvbnN0IHNpemUgPSB1c2VXaW5kb3dTaXplKCk7XG4gIGNvbnN0IHAgPSBcImxhbmRpbmdzL1wiO1xuICBjb25zdCBleHRyYVBvc3RMaW5rID0gYC8ke3B9YDtcbiAgbGFuZGluZ0RhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KGV4dHJhUG9zdExpbmspO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGFjdGlvbnMuc291cmNlLmZldGNoKGV4dHJhUG9zdExpbmspO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuXG4gIGlzQmlvUGFnZSA9IChzdGF0ZS5yb3V0ZXIubGluayA9PT0gJy9iaW8vJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzS2luZXRpY3NSb2JvdGljc1BhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMva2luZXRpY3Mtcm9ib3RpY3MvJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzSW50ZXJhY3RpdmVEaWdpdGFsUGFnZSA9IChzdGF0ZS5yb3V0ZXIubGluayA9PT0gJy9jYXRlZ29yeS9wcm9qZWN0cy9pbnRlcmFjdGl2ZS1kaWdpdGFsLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc1RlY2hSZXNlYXJjaFBhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMvdGVjaC1yZXNlYXJjaC8nKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNQcm9qZWN0c1BhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMvJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzSG9tZVBhZ2UgPSAoZGF0YS5pc0hvbWUpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc1Bvc3QgPSAoZGF0YS5pc1Bvc3QpID8gdHJ1ZSA6IGZhbHNlO1xuXG4gIGxldCBwb3N0VGl0bGUgPSBcIlwiO1xuICBsZXQgcG9zdFRpdGxlQ2hpbmVzZSA9IFwiXCI7XG4gIGxldCBwb3N0TWVkaWEgPSBcIlwiO1xuICBsZXQgbWFpbk5hbWUgPSBcIlwiXG4gIGxldCBmb3JlZ3JvdW5kTWVkaWE7XG4gIGxldCBiYWNrZ3JvdW5kTWVkaWE7XG5cbiAgaWYgKGlzUG9zdCAmJiBkYXRhLmlzUmVhZHkpIHtcblxuICAgIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICBsZXQgZmVhdHVyZU1lZGlhVVJMID0gcG9zdC5qZXRwYWNrX2ZlYXR1cmVkX21lZGlhX3VybDtcbiAgICBsZXQgbiA9IGZlYXR1cmVNZWRpYVVSTC5pbmRleE9mKCc/Jyk7XG4gICAgbGV0IHNzID0gZmVhdHVyZU1lZGlhVVJMLnN1YnN0cmluZygwLCBuICE9IC0xID8gbiA6IGZlYXR1cmVNZWRpYVVSTC5sZW5ndGgpO1xuICAgIHBvc3RUaXRsZSA9IHBvc3QudGl0bGUucmVuZGVyZWQ7XG4gICAgcG9zdFRpdGxlQ2hpbmVzZSA9IHBvc3QuY2hpbmVzZV90aXRsZTtcbiAgICBwb3N0TWVkaWEgPSBwb3N0LmJhY2tncm91bmRfbWVkaWEuZ3VpZCA/IHBvc3QuYmFja2dyb3VuZF9tZWRpYS5ndWlkIDogc3M7XG5cbiAgfVxuXG5cbiAgaWYgKGxhbmRpbmdEYXRhLmlzUmVhZHkpIHtcblxuICAgIGxldCBsYW5kaW5nVVJMLCBpdGVtO1xuICAgIGlmIChpc0Jpb1BhZ2UpIHtcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9iaW8vXCI7XG4gICAgfSBlbHNlIGlmIChpc0tpbmV0aWNzUm9ib3RpY3NQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3Mva2luZXRpY3Mtcm9ib3RpY3MvXCI7XG4gICAgfSBlbHNlIGlmIChpc0ludGVyYWN0aXZlRGlnaXRhbFBhZ2UpIHtcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9pbnRlcmFjdGl2ZS1kaWdpdGFsL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNUZWNoUmVzZWFyY2hQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvdGVjaC1yZXNlYXJjaC9cIjtcbiAgICB9IGVsc2UgaWYgKGlzUHJvamVjdHNQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3Mva2luZXRpY3Mtcm9ib3RpY3MvXCI7XG4gICAgfSBlbHNlIGlmIChpc0hvbWVQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaG9tZS9cIjtcbiAgICB9IGVsc2UgaWYgKGlzUG9zdCkgeyAvL0hPTUVcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9ob21lL1wiOyAvL1RPRE9cbiAgICB9IGVsc2Uge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2hvbWUvXCI7IC8vVE9ET1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhsYW5kaW5nVVJMKVxuICAgIHZhciBpdGVtcyA9IGxhbmRpbmdEYXRhLml0ZW1zLm1hcCgoeyB0eXBlLCBpZCwgbGluayB9LCBpbmRleCkgPT4ge1xuICAgICAgaWYgKGxpbmsgPT09IGxhbmRpbmdVUkwpIHtcbiAgICAgICAgaXRlbSA9IHN0YXRlLnNvdXJjZVt0eXBlXVtpZF07XG4gICAgICB9XG4gICAgfSlcblxuICAgIGNvbnN0IGZvcmVncm91bmRCbGFja0RpdiA9IDxCbGFja0Rpdj48L0JsYWNrRGl2PjtcbiAgICBjb25zdCBiYWNrZ3JvdW5kV2hpdGVEaXYgPSA8QmFja2dyb3VuZEltYWdlRGl2PjxXaGl0ZURpdj48L1doaXRlRGl2PjwvQmFja2dyb3VuZEltYWdlRGl2PjtcblxuICAgIGNvbnN0IGhhbmRsZUxvYWRlZERhdGEgPSAodHlwZSkgPT4ge1xuICAgICAgY29uc29sZS5sb2coYCR7dHlwZX0gdmlkZW8gbG9hZGVkYCk7XG4gICAgfTtcbiAgICBcbiAgICBjb25zdCBmb3JlZ3JvdW5kVmlkZW8gPSBpdGVtLmZvcmVncm91bmRfbWVkaWFbMF0gJiYgKFxuICAgICAgPFJlYWN0LkZyYWdtZW50IGtleT17aXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdLmd1aWR9PlxuICAgICAgICA8VmlkZW9QbGF5ZXJOYXRpdmVcbiAgICAgICAgICBwbGF5c0lubGluZVxuICAgICAgICAgIGF1dG9QbGF5XG4gICAgICAgICAgbXV0ZWRcbiAgICAgICAgICBsb29wXG4gICAgICAgICAgb25Mb2FkZWREYXRhPXsoKSA9PiBoYW5kbGVMb2FkZWREYXRhKFwiRm9yZWdyb3VuZFwiKX1cbiAgICAgICAgPlxuICAgICAgICAgIDxzb3VyY2VcbiAgICAgICAgICAgIHNyYz17aXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdLmd1aWQgKyBcIiN0PTAuMVwifVxuICAgICAgICAgICAgdHlwZT17XCJ2aWRlby9tcDRcIn1cbiAgICAgICAgICAgIGtleT17aXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdLmd1aWR9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9WaWRlb1BsYXllck5hdGl2ZT5cbiAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgKTtcbiAgICBjb25zdCBiYWNrZ3JvdW5kVmlkZW8gPSBpdGVtLmJhY2tncm91bmRfbWVkaWFbMF0gJiYgKFxuICAgICAgPEJhY2tncm91bmRJbWFnZURpdj5cbiAgICAgICAgPFJlYWN0LkZyYWdtZW50IGtleT17aXRlbS5iYWNrZ3JvdW5kX21lZGlhWzBdLmd1aWR9PlxuICAgICAgICAgIDxWaWRlb1BsYXllck5hdGl2ZVxuICAgICAgICAgICAgcGxheXNJbmxpbmVcbiAgICAgICAgICAgIGF1dG9QbGF5XG4gICAgICAgICAgICBtdXRlZFxuICAgICAgICAgICAgbG9vcFxuICAgICAgICAgICAgb25Mb2FkZWREYXRhPXsoKSA9PiBoYW5kbGVMb2FkZWREYXRhKFwiQmFja2dyb3VuZFwiKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8c291cmNlXG4gICAgICAgICAgICAgIHNyYz17aXRlbS5iYWNrZ3JvdW5kX21lZGlhWzBdLmd1aWQgKyBcIiN0PTAuMVwifVxuICAgICAgICAgICAgICB0eXBlPXtcInZpZGVvL21wNFwifVxuICAgICAgICAgICAgICBrZXk9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L1ZpZGVvUGxheWVyTmF0aXZlPlxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgPC9CYWNrZ3JvdW5kSW1hZ2VEaXY+XG4gICAgKTtcblxuICAgIGlmIChpc0Jpb1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZEJsYWNrRGl2O1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuXG4gICAgICBzdWJNZW51VG9wID0gJy0xMDBweCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG4gICAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfSBlbHNlIGlmIChpc0hvbWVQYWdlKSB7XG5cbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRWaWRlbztcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRWaWRlbztcblxuICAgICAgc3ViTWVudVRvcCA9IChzaXplLndpZHRoIDw9IDkwMCAmJiBpc0hvbWVQYWdlID8gJy0xMDBweCcgOiAnY2FsYygnICsgc2VjdGlvbkhlaWdodCArICcgLSA4dmgpJyk7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IChzaXplLndpZHRoIDw9IDkwMCAmJiBpc0hvbWVQYWdlID8gMCA6IDEuMCk7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QW5pbWF0ZWQgYW5pbWF0aW9uSW49XCJmYWRlSW5cIiBhbmltYXRpb25JbkR1cmF0aW9uPXs1MDAwfSBhbmltYXRpb25JbkRlbGF5PXswfSBhbmltYXRpb25PdXQ9XCJmYWRlT3V0XCIgaXNWaXNpYmxlPXt0cnVlfT48QmdIMVNwYW4+VEhJTkdTIFRIQVQgTU9WRTwvQmdIMVNwYW4+PC9BbmltYXRlZD48L015TmFtZT47XG5cbiAgICAgIC8qXG4gICAgICAgIGNvbnN0IHBsYXllck9wdGlvbnMgPSB7XG4gICAgICAgIHNvdXJjZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzcmM6IGl0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbG9vcDogdHJ1ZSxcbiAgICAgICAgcHJlbG9hZDogXCJhdXRvXCJcbiAgICAgICAgfTtcbiAgICAgICovXG5cbiAgICB9IGVsc2UgaWYgKGlzUG9zdCkge1xuXG4gICAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRCbGFja0RpdjtcblxuICAgICAgICB2YXIgaW1ncyA9W1wianBnXCIsIFwianBlZ1wiLCBcImdpZlwiLCBcInRpZmZcIiwgXCJwbmdcIiwgXCJ3ZWJwXCJdO1xuICAgICAgICB2YXIgdmlkcyA9IFtcIm1wNFwiLCBcIndlYm1cIl07XG5cbiAgICAgICAgaWYoIGltZ3MuaW5kZXhPZihwb3N0TWVkaWEuc3BsaXQoJy4nKS5wb3AoKSkgPj0gMCApXG4gICAgICAgIHtcbiAgICAgICAgICAgIGJhY2tncm91bmRNZWRpYSA9IDxCYWNrZ3JvdW5kSW1hZ2VEaXZEYXJrZW4+PEltZyBzcmM9e3Bvc3RNZWRpYX0gYWx0PXtwb3N0VGl0bGV9IC8+PC9CYWNrZ3JvdW5kSW1hZ2VEaXZEYXJrZW4+O1xuICAgICAgICB9IGVsc2UgaWYgKCB2aWRzLmluZGV4T2YocG9zdE1lZGlhLnNwbGl0KCcuJykucG9wKCkpID49IDAgKVxuICAgICAgICB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kTWVkaWEgPSA8QmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjxSZWFjdC5GcmFnbWVudCBrZXk9e3Bvc3RNZWRpYX0+PFZpZGVvUGxheWVyTmF0aXZlIHBsYXlzSW5saW5lPXt0cnVlfSBhdXRvUGxheT17dHJ1ZX0gbXV0ZWQ9e3RydWV9IGxvb3A9e3RydWV9ID5cbiAgICAgICAgICAgICAgPHNvdXJjZSBzcmM9e3Bvc3RNZWRpYX0gdHlwZT1cInZpZGVvL21wNFwiIC8+XG4gICAgICAgICAgICAgIDwvVmlkZW9QbGF5ZXJOYXRpdmU+PC9SZWFjdC5GcmFnbWVudD48L0JhY2tncm91bmRJbWFnZURpdkRhcmtlbj47XG4gICAgICAgIH1cblxuICAgIC8vICBzdWJNZW51VG9wID0gJy0xMDBweCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAwO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNLaW5ldGljc1JvYm90aWNzUGFnZSkge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJzEwdmgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnd2hpdGUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT5QaHlzaWNhbDwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuXG4gICAgfSBlbHNlIGlmIChpc0ludGVyYWN0aXZlRGlnaXRhbFBhZ2UpIHtcbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRWaWRlbztcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcbiAgICAgIHN1Yk1lbnVUb3AgPSAnMTB2aCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDEuMDtcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICd3aGl0ZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4gY3NzPXtjc3NgY29sb3I6QmxhY2s7dGV4dC1zaGFkb3c6JHtuYW1lVGV4dFNoYWRvd09ufWB9PkRpZ2l0YWw8L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcbiAgICB9IGVsc2UgaWYgKGlzVGVjaFJlc2VhcmNoUGFnZSkge1xuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0VGVjaCA9ICd3aGl0ZSc7XG4gICAgICBmcm9udEltYWdlT3BhY2l0eSA9IDEuMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3BhbiBjc3M9e2Nzc2Bjb2xvcjpCbGFjazt0ZXh0LXNoYWRvdzoke25hbWVUZXh0U2hhZG93T259YH0+QXJ0IGFuZCBUZWNobm9sb2d5PC9CZ0gxU3Bhbj48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfSBlbHNlIGlmIChpc1Byb2plY3RzUGFnZSkge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJzEwdmgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4gY3NzPXtjc3NgY29sb3I6QmxhY2s7dGV4dC1zaGFkb3c6JHtuYW1lVGV4dFNoYWRvd09ufWB9PjwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuXG4gICAgfVxuICAgIGVsc2Uge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kQmxhY2tEaXY7XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKSc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDEuMDtcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0VGVjaCA9ICdibGFjayc7XG4gICAgICBmcm9udEltYWdlT3BhY2l0eSA9IDEuMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3Bhbj5USElOR1MgVEhBVCBNT1ZFPC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfVxuXG4gIH1cblxuICByZXR1cm4gKDxUcmlhbmdsZVNlY3Rpb24gY2xhc3NOYW1lPVwiY29udGFpbmVyXCIgPlxuXG4gICAgPFRleHRMb29wRGl2PlxuICAgICAgICB7Lyo8VGhpbmdzVGhhdE1vdmU+VEhJTkdTIFRIQVQgTU9WRTwvVGhpbmdzVGhhdE1vdmU+Ki99XG4gICAgICAgIHttYWluTmFtZX1cbiAgICA8L1RleHRMb29wRGl2PlxuXG4gICAgPFBvc3RUaXRsZURpdj48UG9zdFRpdGxlPntwb3N0VGl0bGV9PC9Qb3N0VGl0bGU+PFBvc3RUaXRsZUNoaW5lc2U+e3Bvc3RUaXRsZUNoaW5lc2V9PC9Qb3N0VGl0bGVDaGluZXNlPjwvUG9zdFRpdGxlRGl2PlxuXG4gICAgPE51bWJlcnNEZWNvIGNzcz17aXNIb21lUGFnZSB8fCBpc1RlY2hSZXNlYXJjaFBhZ2UgPyBjc3Ngb3BhY2l0eTogMTtgOmNzc2BvcGFjaXR5OiAwO2B9PjxzcGFuPjAxPC9zcGFuPjxzcGFuPjAyPC9zcGFuPjxzcGFuPjAzPC9zcGFuPjxzcGFuPjA0PC9zcGFuPjxzcGFuPjA1PC9zcGFuPjxzcGFuPjA2PC9zcGFuPjxzcGFuPjA3PC9zcGFuPjxzcGFuPjA4PC9zcGFuPjxzcGFuPjA5PC9zcGFuPjxzcGFuPjEwPC9zcGFuPjwvTnVtYmVyc0RlY28+XG4gICAgPE15TmFtZUJvdHRvbUxpbmU+PC9NeU5hbWVCb3R0b21MaW5lPlxuICAgIDxEZWNvQ2lyY2xlPjwvRGVjb0NpcmNsZT5cbiAgICB7Lypjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kfTtgfSovfVxuXG4gICAgPFN1Yk1lbnUgY3NzPXtjc3NgdG9wOiAke3N1Yk1lbnVUb3B9OyBvcGFjaXR5OiAke3N1Yk1lbnVPcGFjaXR5fWB9PlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29ya307YH0+PFRpdGxlTGluayBjc3M9e2Nzc2Bjb2xvcjogJHtzdWJNZW51QWN0aXZlVGV4dEFydHdvcmt9O2B9IGxpbms9XCIvY2F0ZWdvcnkvcHJvamVjdHMva2luZXRpY3Mtcm9ib3RpY3NcIiBvbkNsaWNrPXtlID0+IGNoYW5nZVBhZ2UoZSl9PktpbmV0aWNzIGFuZCBSb2JvdGljczwvVGl0bGVMaW5rPjwvU3ViTWVudVRpdGxlRGl2PlxuICAgICAgPFRpdGxlRGl2SHI+PEhyTGluZT48L0hyTGluZT48L1RpdGxlRGl2SHI+XG4gICAgICA8U3ViTWVudVRpdGxlRGl2IGNzcz17Y3NzYGJhY2tncm91bmQ6ICR7c3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ259O2B9PjxUaXRsZUxpbmsgY3NzPXtjc3NgY29sb3I6ICR7c3ViTWVudUFjdGl2ZVRleHREZXNpZ259O2B9IGxpbms9XCIvY2F0ZWdvcnkvcHJvamVjdHMvaW50ZXJhY3RpdmUtZGlnaXRhbFwiIG9uQ2xpY2s9e2UgPT4gY2hhbmdlUGFnZShlKX0+SW50ZXJhdGl2ZSBhbmQgRGlnaXRhbDwvVGl0bGVMaW5rPjwvU3ViTWVudVRpdGxlRGl2PlxuICAgICAgPFRpdGxlRGl2SHI+PEhyTGluZT48L0hyTGluZT48L1RpdGxlRGl2SHI+XG4gICAgICA8U3ViTWVudVRpdGxlRGl2IGNzcz17Y3NzYGJhY2tncm91bmQ6ICR7c3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNofTtgfT48VGl0bGVMaW5rIGNzcz17Y3NzYGNvbG9yOiAke3N1Yk1lbnVBY3RpdmVUZXh0VGVjaH07YH0gbGluaz1cIi9jYXRlZ29yeS9wcm9qZWN0cy90ZWNoLXJlc2VhcmNoXCIgb25DbGljaz17ZSA9PiBjaGFuZ2VQYWdlKGUpfT5UZWNoIGFuZCBSZXNlYXJjaDwvVGl0bGVMaW5rPjwvU3ViTWVudVRpdGxlRGl2PlxuICAgIDwvU3ViTWVudT5cbiAgICA8RnJvbnRJbWFnZURpdiBjc3M9e2Nzc2BvcGFjaXR5OiAke2Zyb250SW1hZ2VPcGFjaXR5fTtgfT5cbiAgICAgIDxGcm9udEltYWdlUG9seWdvbk91dERpdj5cbiAgICAgICAgPEFuaW1hdGVkIGFuaW1hdGlvbkluPVwiZmFkZUluXCIgYW5pbWF0aW9uSW5EdXJhdGlvbj17NDAwMH0gYW5pbWF0aW9uSW5EZWxheT17MjAwMH0gYW5pbWF0aW9uT3V0PVwiZmFkZU91dFwiIGlzVmlzaWJsZT17dHJ1ZX0+XG4gICAgICAgIDxGcm9udEltYWdlUG9seWdvbkRpdiA+XG4gICAgICAgICAge2ZvcmVncm91bmRNZWRpYX1cbiAgICAgICAgPC9Gcm9udEltYWdlUG9seWdvbkRpdj5cbiAgICAgICAgPC9BbmltYXRlZD5cbiAgICAgIDwvRnJvbnRJbWFnZVBvbHlnb25PdXREaXY+XG4gICAgPC9Gcm9udEltYWdlRGl2PlxuICAgIHtiYWNrZ3JvdW5kTWVkaWF9XG4gIDwvVHJpYW5nbGVTZWN0aW9uPlxuICApO1xuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoVHJpYW5nbGVMYW5kaW5nKTtcblxuY29uc3QgVHJpYW5nbGVTZWN0aW9uID0gc3R5bGVkLnNlY3Rpb25gXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG5jb25zdCBUZXh0TG9vcERpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOmFic29sdXRlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIHRvcDowO1xuICBsZWZ0OjA7XG4gIHdpZHRoOjEwMCU7XG4gIHotaW5kZXg6MztcbiAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KSB7XG4gICAgICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fTtcbiAgfVxuICAmIGRpdntcbiAgICAmIGRpdntcbiAgICAgIHdpZHRoOjEwMHZ3O1xuICAgIH1cbiAgfVxuYFxuXG4vKlxudGV4dC1zaGFkb3c6XG4gLTFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSxcbiAgMXB4IC0xcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLFxuICAtMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksXG4gICAxcHggMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKTtcbiovXG5cbmNvbnN0IE15TmFtZSA9IHN0eWxlZC5oMWBcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBcIkFyY2hpdiBHcm90ZXNrXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJIZWx2ZXRpY2EgTmV1ZVwiLFxuICBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogNy41dnc7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgei1pbmRleDozO1xuICBsZXR0ZXItc3BhY2luZzogMC4zdnc7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIGRpc3BsYXk6ZmxleDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgZm9udC1zaXplOiAxNS41dnc7XG4gICAgcGFkZGluZy10b3A6MTUwcHg7XG4gIH1cbmA7XG5cblxuXG5jb25zdCBCZ0gxU3BhbiA9IHN0eWxlZC5kaXZgXG5wYWRkaW5nOiAwIDUwcHg7XG50cmFuc2l0aW9uOiBhbGwgMS4wcztcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgIHBhZGRpbmc6IDAgMDtcbiAgfVxuYFxuXG5jb25zdCBOdW1iZXJzRGVjbyA9IHN0eWxlZC5zcGFuYFxuICBjb2xvcjojNzA3MDcwO1xuICB3aWR0aDoxMDAlO1xuICB6LWluZGV4OjE7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjIyKTtcbiAgZGlzcGxheTpmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZmxleC13cmFwOiBub3dyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAmIHNwYW57XG4gICAgZm9udC13ZWlnaHQ6MjAwO1xuICB9XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH0gKiAwLjM1KTtcbiAgfVxuYFxuXG5jb25zdCBNeU5hbWVCb3R0b21MaW5lID0gc3R5bGVkLnNwYW5gXG4gIGJvcmRlci1ib3R0b206IDFweCAjNzA3MDcwIHNvbGlkO1xuICB3aWR0aDoxMDAlO1xuICB6LWluZGV4OjI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjc1KTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgICB0b3A6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC44MCk7XG4gIH1cbmBcblxuY29uc3QgY2lyY2xlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAzMyUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDIwJSwtMTAlKSBzY2FsZSgxLjIpO1xuICB9XG4gIDY2JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTIwJSwxMCUpIHNjYWxlKDAuOCk7XG4gIH1cbmBcblxuY29uc3QgRGVjb0NpcmNsZSA9IHN0eWxlZC5zcGFuYFxuICBib3JkZXI6IDFweCAjNzA3MDcwIHNvbGlkO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHdpZHRoOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjYpO1xuICBoZWlnaHQ6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0fSAqIDAuNik7XG4gIHotaW5kZXg6IDI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjIwKTtcbiAgbGVmdDo4JTtcbiAgYW5pbWF0aW9uOiAke2NpcmNsZUFuaW1hdGlvbn0gMTIwcyBlYXNlIGluZmluaXRlO1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIEBtZWRpYShvcmllbnRhdGlvbjpwb3J0cmFpdCl7XG4gICAgd2lkdGg6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC40KTtcbiAgICBoZWlnaHQ6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC40KTtcbiAgICB0b3A6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC4yMik7XG4gIH1cbmBcblxuY29uc3QgQmFja2dyb3VuZEltYWdlRGl2ID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogLTE7XG4gICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgJjphZnRlcntcbiAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgIHdpZHRoOjEwMCU7IGhlaWdodDoxMDAlO1xuICAgICAgdG9wOjA7IGxlZnQ6MDtcbiAgICAgIGJhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjYpO1xuICAgICAgb3BhY2l0eTowO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgfVxuYDtcblxuY29uc3QgQmFja2dyb3VuZEltYWdlRGl2RGFya2VuID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogLTE7XG4gICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgJjphZnRlcntcbiAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgIHdpZHRoOjEwMCU7IGhlaWdodDoxMDAlO1xuICAgICAgdG9wOjA7IGxlZnQ6MDtcbiAgICAgIGJhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjYpO1xuICAgICAgb3BhY2l0eToxO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgfVxuYDtcblxuXG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZSA9IHN0eWxlZC5pbWdgXG4gIG1pbi13aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbmA7XG5cblxuY29uc3QgRnJvbnRJbWFnZURpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gIHRvcDowO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KSB7XG4gICAgICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fTtcbiAgfVxuYDtcbi8qLy9odHRwczovL2Jlbm5ldHRmZWVseS5jb20vY2xpcHB5LyovXG5jb25zdCB0cmlhbmdsZUFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMzMlIHtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oNTAlIDE1JSwgMzElIDg4JSwgNzclIDYwJSk7XG4gIH1cbiAgNjYlIHtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oNzIlIDE5JSwgMjklIDM5JSwgNjAlIDk0JSk7XG4gIH1cbmBcblxuY29uc3QgdHJpYW5nbGVBbmltYXRpb25Nb2JpbGUgPSBrZXlmcmFtZXNgXG4gIDMzJSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDczJSAxMyUsIDglIDU4JSwgOTUlIDkxJSk7XG4gIH1cbiAgNjYlIHtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMTAwJSAxOSUsIDAgMzclLCA1OSUgODYlKTtcbiAgfVxuYFxuXG5jb25zdCBGcm9udEltYWdlUG9seWdvbk91dERpdiA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIGJhY2tncm91bmQ6ICM3MDcwNzA7XG4gIGFuaW1hdGlvbjogJHt0cmlhbmdsZUFuaW1hdGlvbn0gMTIwcyBlYXNlIGluZmluaXRlO1xuICBjbGlwLXBhdGg6IHBvbHlnb24oNjMlIDEwJSwgMjglIDY1JSwgNzIlIDkyJSk7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGNsaXAtcGF0aDogcG9seWdvbigzNSUgMTglLCA0JSA4OSUsIDEyMCUgNjYlKTtcbiAgICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb25Nb2JpbGV9IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fTtcbiAgfVxuYDtcblxuLyogdHJhbnNpdGlvbjogMC40cyBjdWJpYy1iZXppZXIoMCwgMSwgMC42NSwgMC45NCk7ICovXG5jb25zdCBGcm9udEltYWdlUG9seWdvbkRpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAzcHg7XG4gIGxlZnQ6IDNweDtcbiAgcmlnaHQ6IDNweDtcbiAgYm90dG9tOiAzcHg7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGFuaW1hdGlvbjogJHt0cmlhbmdsZUFuaW1hdGlvbn0gMTIwcyBlYXNlIGluZmluaXRlO1xuICBjbGlwLXBhdGg6IHBvbHlnb24oNjMlIDEwJSwgMjglIDY1JSwgNzIlIDkyJSk7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGNsaXAtcGF0aDogcG9seWdvbigzNSUgMTglLCA0JSA4OSUsIDEyMCUgNjYlKTtcbiAgICAgICAgYW5pbWF0aW9uOiAke3RyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlfSAxMjBzIGVhc2UgaW5maW5pdGU7XG4gIH1cbmA7XG5cbmNvbnN0IEZyb250SW1hZ2UgPSBzdHlsZWQuaW1nYFxuICB3aWR0aDogMTAwJTtcbiAgbWF4LWhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbmA7XG5cbi8qICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTsqL1xuY29uc3QgU3ViTWVudSA9IHN0eWxlZC5kaXZgXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA2MHB4O1xuICB6LWluZGV4OiAzO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgcGFkZGluZzogMTBweCAxNXB4IDEwcHggMTVweDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZmxleC1mbG93OmNvbHVtbjtcbiAgICBoZWlnaHQ6IDE4MHB4O1xuICB9XG4gIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuYDtcblxuXG5jb25zdCBTdWJNZW51VGl0bGVEaXYgPSBzdHlsZWQuZGl2YFxuICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgd2lkdGg6MjUwcHg7XG4gICY6bnRoLW9mLXR5cGUoMSl7XG4gICAgdGV4dC1hbGlnbjpsZWZ0O1xuICB9XG4gICY6bnRoLW9mLXR5cGUoMyl7XG4gICAgd2lkdGg6MzAwcHg7XG4gIH1cbiAgJjpudGgtb2YtdHlwZSg1KXtcbiAgICB0ZXh0LWFsaWduOnJpZ2h0O1xuICB9XG4gIHRleHQtc2hhZG93OiAtMXB4IC0xcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4wKSwxcHggLTFweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjApLC0xcHggMXB4IDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMCksMXB4IDFweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjIpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBoZWlnaHQ6MzhweDtcbiAgICAmOm50aC1vZi10eXBlKDEpe1xuICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgfVxuICAgICY6bnRoLW9mLXR5cGUoMyl7XG4gICAgICB3aWR0aDoyNzBweDtcbiAgICB9XG4gICAgJjpudGgtb2YtdHlwZSg1KXtcbiAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIH1cbiAgfVxuYDtcblxuY29uc3QgVGl0bGVEaXZIciA9IHN0eWxlZC5kaXZgXG4gIGZsZXgtZ3JvdzoxO1xuICBtYXJnaW4tdG9wOiAtMjBweDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCBibGFjaztcbiAgICBsZWZ0OjUwJTtcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICB9XG5gO1xuXG5jb25zdCBIckxpbmUgPSBzdHlsZWQuaHJgXG4gIGJvcmRlcjogbm9uZTtcbiAgaGVpZ2h0OiAxcHg7XG4gIC8qIFNldCB0aGUgaHIgY29sb3IgKi9cbiAgY29sb3I6IGJsYWNrOyAvKiBvbGQgSUUgKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IC8qIE1vZGVybiBCcm93c2VycyAqL1xuICAgIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgICAgZGlzcGxheTpub25lO1xuICAgIH1cbmA7XG5cbmNvbnN0IFRpdGxlTGluayA9IHN0eWxlZChMaW5rKWBcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBtaXgtYmxlbmQtbW9kZTogbm9ybWFsO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAke3N1Yk1lbnVGb250U2l6ZX07XG4gIGZvbnQtd2VpZ2h0OjUwMDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgcGFkZGluZzo1cHggNDVweCAxNXB4IDQ1cHg7XG4gICY6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG4gICY6YWN0aXZle1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBwYWRkaW5nOiAycHggMTVweCAwcHggMTVweDtcbiAgfVxuYDtcblxuY29uc3QgQmxhY2tEaXYgPSBzdHlsZWQuZGl2YFxuICBiYWNrZ3JvdW5kOmJsYWNrO1xuICB3aWR0aDoxMDAlO1xuICBoZWlnaHQ6MTAwJTtcbmA7XG5cbmNvbnN0IFdoaXRlRGl2ID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZDp3aGl0ZTtcbiAgd2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG5gO1xuXG5jb25zdCBQb3N0VGl0bGVEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDoxMDAlO1xuICBwYWRkaW5nLWxlZnQ6IDQ1cHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgfVxuYDtcblxuY29uc3QgUG9zdFRpdGxlID0gc3R5bGVkLmgxYFxuICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgYm90dG9tOjEuM2VtO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBmb250LXNpemU6IDMuNWVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBmb250LXNpemU6IDh2dztcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICB9XG5gO1xuY29uc3QgUG9zdFRpdGxlQ2hpbmVzZSA9IHN0eWxlZC5oMWBcbiAgcG9zaXRpb246YWJzb2x1dGU7XG4gIGJvdHRvbTowO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBmb250LXNpemU6IDMuMWVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBmb250LXNpemU6IDh2dztcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICB9XG5gO1xuXG5cbmNvbnN0IFZpZGVvUGxheWVyTmF0aXZlID0gc3R5bGVkLnZpZGVvYFxuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1hc3BlY3QtcmF0aW86IDE5MjAvMTA4MCkge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4tYXNwZWN0LXJhdGlvOiAxOTIwLzEwODApIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICB9XG5gO1xuXG5cbmNvbnN0IEltZyA9IHN0eWxlZC5pbWdgXG4gIGRpc3BsYXk6YmxvY2s7XG4gIG1pbi13aWR0aDoxMDAlO1xuICBoZWlnaHQ6MTAwJTtcbiAgb2JqZWN0LWZpdDpjb3ZlcjtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBoZWlnaHQ6MTAwJTtcbiAgfVxuYFxuIl19 */\"),children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(FrontImagePolygonOutDiv,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(react_animated_css__WEBPACK_IMPORTED_MODULE_7__[\"Animated\"],{animationIn:\"fadeIn\",animationInDuration:4000,animationInDelay:2000,animationOut:\"fadeOut\",isVisible:true,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(FrontImagePolygonDiv,{children:foregroundMedia})})})}),backgroundMedia]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(TriangleLanding));const TriangleSection=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"section\", false?undefined:{target:\"e1649dpy25\",label:\"TriangleSection\"})(\"width:100%;height:\",sectionHeight,\";overflow:hidden;@media(orientation: portrait){height:\",sectionHeightPortrait,\";}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const TextLoopDiv=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy24\",label:\"TextLoopDiv\"})(\"position:absolute;display:flex;justify-content:center;align-items:center;text-align:center;height:\",sectionHeight,\";top:0;left:0;width:100%;z-index:3;mix-blend-mode:normal;overflow:hidden;@media(orientation: portrait){height:\",sectionHeightPortrait,\";}& div{}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));/*\ntext-shadow:\n -1px -1px 100px rgba(255,255,255,0.3),\n  1px -1px 100px rgba(255,255,255,0.3),\n  -1px 1px 100px rgba(255,255,255,0.3),\n   1px 1px 100px rgba(255,255,255,0.3);\n*/const MyName=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"h1\", false?undefined:{target:\"e1649dpy23\",label:\"MyName\"})( false?undefined:{name:\"1hfl3cl\",styles:\"justify-content:center;align-items:center;font-family:\\\"Archiv Grotesk\\\",-apple-system,BlinkMacSystemFont,\\\"Helvetica Neue\\\",Helvetica,sans-serif;font-size:7.5vw;text-align:center;z-index:3;letter-spacing:0.3vw;mix-blend-mode:normal;display:flex;@media(orientation: portrait){display:block;font-size:15.5vw;padding-top:150px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const BgH1Span=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy22\",label:\"BgH1Span\"})( false?undefined:{name:\"1w044hv\",styles:\"padding:0 50px;transition:all 1.0s;@media(orientation: portrait){padding:0 0;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const NumbersDeco=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"span\", false?undefined:{target:\"e1649dpy21\",label:\"NumbersDeco\"})(\"color:#707070;width:100%;z-index:1;position:absolute;top:calc(\",sectionHeight,\" * 0.22);display:flex;align-items:flex-start;flex-wrap:nowrap;justify-content:space-evenly;transition:all 1.0s;& span{font-weight:200;}@media(orientation: portrait){display:none;top:calc(\",sectionHeightPortrait,\" * 0.35);}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const MyNameBottomLine=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"span\", false?undefined:{target:\"e1649dpy20\",label:\"MyNameBottomLine\"})(\"border-bottom:1px #707070 solid;width:100%;z-index:2;position:absolute;top:calc(\",sectionHeight,\" * 0.75);@media(orientation: portrait){top:calc(\",sectionHeightPortrait,\" * 0.80);}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const circleAnimation=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"keyframes\"])(_t||(_t=_`\n  33% {\n    transform: translate(20%,-10%) scale(1.2);\n  }\n  66% {\n    transform: translate(-20%,10%) scale(0.8);\n  }\n`));const DecoCircle=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"span\", false?undefined:{target:\"e1649dpy19\",label:\"DecoCircle\"})(\"border:1px #707070 solid;border-radius:50%;width:calc(\",sectionHeight,\" * 0.6);height:calc(\",sectionHeight,\" * 0.6);z-index:2;position:absolute;top:calc(\",sectionHeight,\" * 0.20);left:8%;animation:\",circleAnimation,\" 120s ease infinite;overflow:hidden;@media(orientation:portrait){width:calc(\",sectionHeightPortrait,\" * 0.4);height:calc(\",sectionHeightPortrait,\" * 0.4);top:calc(\",sectionHeightPortrait,\" * 0.22);}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const BackgroundImageDiv=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy18\",label:\"BackgroundImageDiv\"})( false?undefined:{name:\"1kes1q6\",styles:\"position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:-1;transition:all 1.0s;&:after{content:'';position:absolute;width:100%;height:100%;top:0;left:0;background:rgba(0,0,0,0.6);opacity:0;transition:all 1.0s;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const BackgroundImageDivDarken=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy17\",label:\"BackgroundImageDivDarken\"})( false?undefined:{name:\"1bcxl7o\",styles:\"position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:-1;transition:all 1.0s;&:after{content:'';position:absolute;width:100%;height:100%;top:0;left:0;background:rgba(0,0,0,0.6);opacity:1;transition:all 1.0s;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const BackgroundImage=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"img\", false?undefined:{target:\"e1649dpy16\",label:\"BackgroundImage\"})( false?undefined:{name:\"keruvm\",styles:\"min-width:100%;min-height:100%;object-fit:cover;display:block;margin:0 auto\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStma0MiLCJmaWxlIjoiQzpcXEdpdGh1YlxcVGhpbmdzVGhhdE1vdmUueHl6XFxwYWNrYWdlc1xcdHdlbnR5dHdlbnR5LXRoZW1lXFxzcmNcXGNvbXBvbmVudHNcXHRyaWFuZ2xlLWxhbmRpbmdcXHRyaWFuZ2xlLWxhbmRpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25uZWN0LCBHbG9iYWwsIGNzcywgc3R5bGVkLCBrZXlmcmFtZXMgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgTGluayBmcm9tIFwiLi4vbGlua1wiO1xuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4uL2xvYWRpbmdcIjtcbi8vaW1wb3J0IFRleHRMb29wIGZyb20gXCJyZWFjdC10ZXh0LWxvb3BcIjtcbmltcG9ydCB7IHVzZVdpbmRvd1NpemUgfSBmcm9tICcuLi8uLi9oZWxwZXJzJ1xuaW1wb3J0IHtBbmltYXRlZH0gZnJvbSBcInJlYWN0LWFuaW1hdGVkLWNzc1wiO1xuXG4vL2ltcG9ydCB7IFBsYXllciwgQ29udHJvbEJhciwgU2hvcnRjdXQgfSBmcm9tICd2aWRlby1yZWFjdCc7XG4vL2ltcG9ydCBleHRlcm5hbENTUyBmcm9tIFwiLi4vc3R5bGVzL3ZpZGVvLXJlYWN0LmNzc1wiOyAvLyBpbXBvcnQgY3NzXG4vL2ltcG9ydCB7IFZpZGVvUGxheWVyIH0gZnJvbSBcIi4uL3ZpZGVvLXBsYXllclwiO1xuXG5jb25zdCBzZWN0aW9uSGVpZ2h0ID0gJ2NhbGMoMTAwdncgLyAyLjIpJztcbmNvbnN0IHNlY3Rpb25IZWlnaHRQb3J0cmFpdCA9ICdjYWxjKDEwMHZ3ICogMS40MiknO1xubGV0IHN1Yk1lbnVUb3AgPSAnY2FsYygnICsgc2VjdGlvbkhlaWdodCArICcgLSA4dmgpJztcbmxldCBzdWJNZW51T3BhY2l0eSA9IDEuMDtcblxubGV0IHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdibGFjayc7XG5sZXQgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnYmxhY2snO1xubGV0IHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdibGFjayc7XG5cbmxldCBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnd2hpdGUnO1xubGV0IHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ3doaXRlJztcbmxldCBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnd2hpdGUnO1xuXG5sZXQgbmFtZVRleHRTaGFkb3dPbiA9ICctMXB4IC0xcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSwtMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyk7JztcblxuXG5sZXQgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbmNvbnN0IHN1Yk1lbnVGb250U2l6ZSA9ICcyMHB4JztcblxuY29uc3QgVHJpYW5nbGVMYW5kaW5nID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xuXG4gIGxldCBpc0Jpb1BhZ2U7XG4gIGxldCBpc0tpbmV0aWNzUm9ib3RpY3NQYWdlO1xuICBsZXQgaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlO1xuICBsZXQgaXNUZWNoUmVzZWFyY2hQYWdlO1xuICBsZXQgaXNQcm9qZWN0c1BhZ2U7XG4gIGxldCBpc0hvbWVQYWdlO1xuICBsZXQgaXNQb3N0O1xuICBsZXQgbGFuZGluZ0RhdGE7XG4gIGZ1bmN0aW9uIGNoYW5nZVBhZ2UoZSl7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGxhbmRpbmdEYXRhID0gc3RhdGUuc291cmNlLmdldChleHRyYVBvc3RMaW5rKTtcbiAgfVxuXG4gIGNvbnN0IHNpemUgPSB1c2VXaW5kb3dTaXplKCk7XG4gIGNvbnN0IHAgPSBcImxhbmRpbmdzL1wiO1xuICBjb25zdCBleHRyYVBvc3RMaW5rID0gYC8ke3B9YDtcbiAgbGFuZGluZ0RhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KGV4dHJhUG9zdExpbmspO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGFjdGlvbnMuc291cmNlLmZldGNoKGV4dHJhUG9zdExpbmspO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuXG4gIGlzQmlvUGFnZSA9IChzdGF0ZS5yb3V0ZXIubGluayA9PT0gJy9iaW8vJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzS2luZXRpY3NSb2JvdGljc1BhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMva2luZXRpY3Mtcm9ib3RpY3MvJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzSW50ZXJhY3RpdmVEaWdpdGFsUGFnZSA9IChzdGF0ZS5yb3V0ZXIubGluayA9PT0gJy9jYXRlZ29yeS9wcm9qZWN0cy9pbnRlcmFjdGl2ZS1kaWdpdGFsLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc1RlY2hSZXNlYXJjaFBhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMvdGVjaC1yZXNlYXJjaC8nKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNQcm9qZWN0c1BhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMvJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzSG9tZVBhZ2UgPSAoZGF0YS5pc0hvbWUpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc1Bvc3QgPSAoZGF0YS5pc1Bvc3QpID8gdHJ1ZSA6IGZhbHNlO1xuXG4gIGxldCBwb3N0VGl0bGUgPSBcIlwiO1xuICBsZXQgcG9zdFRpdGxlQ2hpbmVzZSA9IFwiXCI7XG4gIGxldCBwb3N0TWVkaWEgPSBcIlwiO1xuICBsZXQgbWFpbk5hbWUgPSBcIlwiXG4gIGxldCBmb3JlZ3JvdW5kTWVkaWE7XG4gIGxldCBiYWNrZ3JvdW5kTWVkaWE7XG5cbiAgaWYgKGlzUG9zdCAmJiBkYXRhLmlzUmVhZHkpIHtcblxuICAgIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgICBsZXQgZmVhdHVyZU1lZGlhVVJMID0gcG9zdC5qZXRwYWNrX2ZlYXR1cmVkX21lZGlhX3VybDtcbiAgICBsZXQgbiA9IGZlYXR1cmVNZWRpYVVSTC5pbmRleE9mKCc/Jyk7XG4gICAgbGV0IHNzID0gZmVhdHVyZU1lZGlhVVJMLnN1YnN0cmluZygwLCBuICE9IC0xID8gbiA6IGZlYXR1cmVNZWRpYVVSTC5sZW5ndGgpO1xuICAgIHBvc3RUaXRsZSA9IHBvc3QudGl0bGUucmVuZGVyZWQ7XG4gICAgcG9zdFRpdGxlQ2hpbmVzZSA9IHBvc3QuY2hpbmVzZV90aXRsZTtcbiAgICBwb3N0TWVkaWEgPSBwb3N0LmJhY2tncm91bmRfbWVkaWEuZ3VpZCA/IHBvc3QuYmFja2dyb3VuZF9tZWRpYS5ndWlkIDogc3M7XG5cbiAgfVxuXG5cbiAgaWYgKGxhbmRpbmdEYXRhLmlzUmVhZHkpIHtcblxuICAgIGxldCBsYW5kaW5nVVJMLCBpdGVtO1xuICAgIGlmIChpc0Jpb1BhZ2UpIHtcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9iaW8vXCI7XG4gICAgfSBlbHNlIGlmIChpc0tpbmV0aWNzUm9ib3RpY3NQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3Mva2luZXRpY3Mtcm9ib3RpY3MvXCI7XG4gICAgfSBlbHNlIGlmIChpc0ludGVyYWN0aXZlRGlnaXRhbFBhZ2UpIHtcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9pbnRlcmFjdGl2ZS1kaWdpdGFsL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNUZWNoUmVzZWFyY2hQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvdGVjaC1yZXNlYXJjaC9cIjtcbiAgICB9IGVsc2UgaWYgKGlzUHJvamVjdHNQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3Mva2luZXRpY3Mtcm9ib3RpY3MvXCI7XG4gICAgfSBlbHNlIGlmIChpc0hvbWVQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaG9tZS9cIjtcbiAgICB9IGVsc2UgaWYgKGlzUG9zdCkgeyAvL0hPTUVcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9ob21lL1wiOyAvL1RPRE9cbiAgICB9IGVsc2Uge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2hvbWUvXCI7IC8vVE9ET1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhsYW5kaW5nVVJMKVxuICAgIHZhciBpdGVtcyA9IGxhbmRpbmdEYXRhLml0ZW1zLm1hcCgoeyB0eXBlLCBpZCwgbGluayB9LCBpbmRleCkgPT4ge1xuICAgICAgaWYgKGxpbmsgPT09IGxhbmRpbmdVUkwpIHtcbiAgICAgICAgaXRlbSA9IHN0YXRlLnNvdXJjZVt0eXBlXVtpZF07XG4gICAgICB9XG4gICAgfSlcblxuICAgIGNvbnN0IGZvcmVncm91bmRCbGFja0RpdiA9IDxCbGFja0Rpdj48L0JsYWNrRGl2PjtcbiAgICBjb25zdCBiYWNrZ3JvdW5kV2hpdGVEaXYgPSA8QmFja2dyb3VuZEltYWdlRGl2PjxXaGl0ZURpdj48L1doaXRlRGl2PjwvQmFja2dyb3VuZEltYWdlRGl2PjtcblxuICAgIGNvbnN0IGhhbmRsZUxvYWRlZERhdGEgPSAodHlwZSkgPT4ge1xuICAgICAgY29uc29sZS5sb2coYCR7dHlwZX0gdmlkZW8gbG9hZGVkYCk7XG4gICAgfTtcbiAgICBcbiAgICBjb25zdCBmb3JlZ3JvdW5kVmlkZW8gPSBpdGVtLmZvcmVncm91bmRfbWVkaWFbMF0gJiYgKFxuICAgICAgPFJlYWN0LkZyYWdtZW50IGtleT17aXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdLmd1aWR9PlxuICAgICAgICA8VmlkZW9QbGF5ZXJOYXRpdmVcbiAgICAgICAgICBwbGF5c0lubGluZVxuICAgICAgICAgIGF1dG9QbGF5XG4gICAgICAgICAgbXV0ZWRcbiAgICAgICAgICBsb29wXG4gICAgICAgICAgb25Mb2FkZWREYXRhPXsoKSA9PiBoYW5kbGVMb2FkZWREYXRhKFwiRm9yZWdyb3VuZFwiKX1cbiAgICAgICAgPlxuICAgICAgICAgIDxzb3VyY2VcbiAgICAgICAgICAgIHNyYz17aXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdLmd1aWQgKyBcIiN0PTAuMVwifVxuICAgICAgICAgICAgdHlwZT17XCJ2aWRlby9tcDRcIn1cbiAgICAgICAgICAgIGtleT17aXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdLmd1aWR9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9WaWRlb1BsYXllck5hdGl2ZT5cbiAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgKTtcbiAgICBjb25zdCBiYWNrZ3JvdW5kVmlkZW8gPSBpdGVtLmJhY2tncm91bmRfbWVkaWFbMF0gJiYgKFxuICAgICAgPEJhY2tncm91bmRJbWFnZURpdj5cbiAgICAgICAgPFJlYWN0LkZyYWdtZW50IGtleT17aXRlbS5iYWNrZ3JvdW5kX21lZGlhWzBdLmd1aWR9PlxuICAgICAgICAgIDxWaWRlb1BsYXllck5hdGl2ZVxuICAgICAgICAgICAgcGxheXNJbmxpbmVcbiAgICAgICAgICAgIGF1dG9QbGF5XG4gICAgICAgICAgICBtdXRlZFxuICAgICAgICAgICAgbG9vcFxuICAgICAgICAgICAgb25Mb2FkZWREYXRhPXsoKSA9PiBoYW5kbGVMb2FkZWREYXRhKFwiQmFja2dyb3VuZFwiKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8c291cmNlXG4gICAgICAgICAgICAgIHNyYz17aXRlbS5iYWNrZ3JvdW5kX21lZGlhWzBdLmd1aWQgKyBcIiN0PTAuMVwifVxuICAgICAgICAgICAgICB0eXBlPXtcInZpZGVvL21wNFwifVxuICAgICAgICAgICAgICBrZXk9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L1ZpZGVvUGxheWVyTmF0aXZlPlxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgPC9CYWNrZ3JvdW5kSW1hZ2VEaXY+XG4gICAgKTtcblxuICAgIGlmIChpc0Jpb1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZEJsYWNrRGl2O1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuXG4gICAgICBzdWJNZW51VG9wID0gJy0xMDBweCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG4gICAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfSBlbHNlIGlmIChpc0hvbWVQYWdlKSB7XG5cbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRWaWRlbztcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRWaWRlbztcblxuICAgICAgc3ViTWVudVRvcCA9IChzaXplLndpZHRoIDw9IDkwMCAmJiBpc0hvbWVQYWdlID8gJy0xMDBweCcgOiAnY2FsYygnICsgc2VjdGlvbkhlaWdodCArICcgLSA4dmgpJyk7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IChzaXplLndpZHRoIDw9IDkwMCAmJiBpc0hvbWVQYWdlID8gMCA6IDEuMCk7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QW5pbWF0ZWQgYW5pbWF0aW9uSW49XCJmYWRlSW5cIiBhbmltYXRpb25JbkR1cmF0aW9uPXs1MDAwfSBhbmltYXRpb25JbkRlbGF5PXswfSBhbmltYXRpb25PdXQ9XCJmYWRlT3V0XCIgaXNWaXNpYmxlPXt0cnVlfT48QmdIMVNwYW4+VEhJTkdTIFRIQVQgTU9WRTwvQmdIMVNwYW4+PC9BbmltYXRlZD48L015TmFtZT47XG5cbiAgICAgIC8qXG4gICAgICAgIGNvbnN0IHBsYXllck9wdGlvbnMgPSB7XG4gICAgICAgIHNvdXJjZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBzcmM6IGl0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgbG9vcDogdHJ1ZSxcbiAgICAgICAgcHJlbG9hZDogXCJhdXRvXCJcbiAgICAgICAgfTtcbiAgICAgICovXG5cbiAgICB9IGVsc2UgaWYgKGlzUG9zdCkge1xuXG4gICAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRCbGFja0RpdjtcblxuICAgICAgICB2YXIgaW1ncyA9W1wianBnXCIsIFwianBlZ1wiLCBcImdpZlwiLCBcInRpZmZcIiwgXCJwbmdcIiwgXCJ3ZWJwXCJdO1xuICAgICAgICB2YXIgdmlkcyA9IFtcIm1wNFwiLCBcIndlYm1cIl07XG5cbiAgICAgICAgaWYoIGltZ3MuaW5kZXhPZihwb3N0TWVkaWEuc3BsaXQoJy4nKS5wb3AoKSkgPj0gMCApXG4gICAgICAgIHtcbiAgICAgICAgICAgIGJhY2tncm91bmRNZWRpYSA9IDxCYWNrZ3JvdW5kSW1hZ2VEaXZEYXJrZW4+PEltZyBzcmM9e3Bvc3RNZWRpYX0gYWx0PXtwb3N0VGl0bGV9IC8+PC9CYWNrZ3JvdW5kSW1hZ2VEaXZEYXJrZW4+O1xuICAgICAgICB9IGVsc2UgaWYgKCB2aWRzLmluZGV4T2YocG9zdE1lZGlhLnNwbGl0KCcuJykucG9wKCkpID49IDAgKVxuICAgICAgICB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kTWVkaWEgPSA8QmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjxSZWFjdC5GcmFnbWVudCBrZXk9e3Bvc3RNZWRpYX0+PFZpZGVvUGxheWVyTmF0aXZlIHBsYXlzSW5saW5lPXt0cnVlfSBhdXRvUGxheT17dHJ1ZX0gbXV0ZWQ9e3RydWV9IGxvb3A9e3RydWV9ID5cbiAgICAgICAgICAgICAgPHNvdXJjZSBzcmM9e3Bvc3RNZWRpYX0gdHlwZT1cInZpZGVvL21wNFwiIC8+XG4gICAgICAgICAgICAgIDwvVmlkZW9QbGF5ZXJOYXRpdmU+PC9SZWFjdC5GcmFnbWVudD48L0JhY2tncm91bmRJbWFnZURpdkRhcmtlbj47XG4gICAgICAgIH1cblxuICAgIC8vICBzdWJNZW51VG9wID0gJy0xMDBweCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAwO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNLaW5ldGljc1JvYm90aWNzUGFnZSkge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJzEwdmgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnd2hpdGUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT5QaHlzaWNhbDwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuXG4gICAgfSBlbHNlIGlmIChpc0ludGVyYWN0aXZlRGlnaXRhbFBhZ2UpIHtcbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRWaWRlbztcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcbiAgICAgIHN1Yk1lbnVUb3AgPSAnMTB2aCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDEuMDtcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICd3aGl0ZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4gY3NzPXtjc3NgY29sb3I6QmxhY2s7dGV4dC1zaGFkb3c6JHtuYW1lVGV4dFNoYWRvd09ufWB9PkRpZ2l0YWw8L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcbiAgICB9IGVsc2UgaWYgKGlzVGVjaFJlc2VhcmNoUGFnZSkge1xuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0VGVjaCA9ICd3aGl0ZSc7XG4gICAgICBmcm9udEltYWdlT3BhY2l0eSA9IDEuMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3BhbiBjc3M9e2Nzc2Bjb2xvcjpCbGFjazt0ZXh0LXNoYWRvdzoke25hbWVUZXh0U2hhZG93T259YH0+QXJ0IGFuZCBUZWNobm9sb2d5PC9CZ0gxU3Bhbj48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfSBlbHNlIGlmIChpc1Byb2plY3RzUGFnZSkge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJzEwdmgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4gY3NzPXtjc3NgY29sb3I6QmxhY2s7dGV4dC1zaGFkb3c6JHtuYW1lVGV4dFNoYWRvd09ufWB9PjwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuXG4gICAgfVxuICAgIGVsc2Uge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kQmxhY2tEaXY7XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKSc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDEuMDtcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0VGVjaCA9ICdibGFjayc7XG4gICAgICBmcm9udEltYWdlT3BhY2l0eSA9IDEuMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3Bhbj5USElOR1MgVEhBVCBNT1ZFPC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfVxuXG4gIH1cblxuICByZXR1cm4gKDxUcmlhbmdsZVNlY3Rpb24gY2xhc3NOYW1lPVwiY29udGFpbmVyXCIgPlxuXG4gICAgPFRleHRMb29wRGl2PlxuICAgICAgICB7Lyo8VGhpbmdzVGhhdE1vdmU+VEhJTkdTIFRIQVQgTU9WRTwvVGhpbmdzVGhhdE1vdmU+Ki99XG4gICAgICAgIHttYWluTmFtZX1cbiAgICA8L1RleHRMb29wRGl2PlxuXG4gICAgPFBvc3RUaXRsZURpdj48UG9zdFRpdGxlPntwb3N0VGl0bGV9PC9Qb3N0VGl0bGU+PFBvc3RUaXRsZUNoaW5lc2U+e3Bvc3RUaXRsZUNoaW5lc2V9PC9Qb3N0VGl0bGVDaGluZXNlPjwvUG9zdFRpdGxlRGl2PlxuXG4gICAgPE51bWJlcnNEZWNvIGNzcz17aXNIb21lUGFnZSB8fCBpc1RlY2hSZXNlYXJjaFBhZ2UgPyBjc3Ngb3BhY2l0eTogMTtgOmNzc2BvcGFjaXR5OiAwO2B9PjxzcGFuPjAxPC9zcGFuPjxzcGFuPjAyPC9zcGFuPjxzcGFuPjAzPC9zcGFuPjxzcGFuPjA0PC9zcGFuPjxzcGFuPjA1PC9zcGFuPjxzcGFuPjA2PC9zcGFuPjxzcGFuPjA3PC9zcGFuPjxzcGFuPjA4PC9zcGFuPjxzcGFuPjA5PC9zcGFuPjxzcGFuPjEwPC9zcGFuPjwvTnVtYmVyc0RlY28+XG4gICAgPE15TmFtZUJvdHRvbUxpbmU+PC9NeU5hbWVCb3R0b21MaW5lPlxuICAgIDxEZWNvQ2lyY2xlPjwvRGVjb0NpcmNsZT5cbiAgICB7Lypjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kfTtgfSovfVxuXG4gICAgPFN1Yk1lbnUgY3NzPXtjc3NgdG9wOiAke3N1Yk1lbnVUb3B9OyBvcGFjaXR5OiAke3N1Yk1lbnVPcGFjaXR5fWB9PlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29ya307YH0+PFRpdGxlTGluayBjc3M9e2Nzc2Bjb2xvcjogJHtzdWJNZW51QWN0aXZlVGV4dEFydHdvcmt9O2B9IGxpbms9XCIvY2F0ZWdvcnkvcHJvamVjdHMva2luZXRpY3Mtcm9ib3RpY3NcIiBvbkNsaWNrPXtlID0+IGNoYW5nZVBhZ2UoZSl9PktpbmV0aWNzIGFuZCBSb2JvdGljczwvVGl0bGVMaW5rPjwvU3ViTWVudVRpdGxlRGl2PlxuICAgICAgPFRpdGxlRGl2SHI+PEhyTGluZT48L0hyTGluZT48L1RpdGxlRGl2SHI+XG4gICAgICA8U3ViTWVudVRpdGxlRGl2IGNzcz17Y3NzYGJhY2tncm91bmQ6ICR7c3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ259O2B9PjxUaXRsZUxpbmsgY3NzPXtjc3NgY29sb3I6ICR7c3ViTWVudUFjdGl2ZVRleHREZXNpZ259O2B9IGxpbms9XCIvY2F0ZWdvcnkvcHJvamVjdHMvaW50ZXJhY3RpdmUtZGlnaXRhbFwiIG9uQ2xpY2s9e2UgPT4gY2hhbmdlUGFnZShlKX0+SW50ZXJhdGl2ZSBhbmQgRGlnaXRhbDwvVGl0bGVMaW5rPjwvU3ViTWVudVRpdGxlRGl2PlxuICAgICAgPFRpdGxlRGl2SHI+PEhyTGluZT48L0hyTGluZT48L1RpdGxlRGl2SHI+XG4gICAgICA8U3ViTWVudVRpdGxlRGl2IGNzcz17Y3NzYGJhY2tncm91bmQ6ICR7c3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNofTtgfT48VGl0bGVMaW5rIGNzcz17Y3NzYGNvbG9yOiAke3N1Yk1lbnVBY3RpdmVUZXh0VGVjaH07YH0gbGluaz1cIi9jYXRlZ29yeS9wcm9qZWN0cy90ZWNoLXJlc2VhcmNoXCIgb25DbGljaz17ZSA9PiBjaGFuZ2VQYWdlKGUpfT5UZWNoIGFuZCBSZXNlYXJjaDwvVGl0bGVMaW5rPjwvU3ViTWVudVRpdGxlRGl2PlxuICAgIDwvU3ViTWVudT5cbiAgICA8RnJvbnRJbWFnZURpdiBjc3M9e2Nzc2BvcGFjaXR5OiAke2Zyb250SW1hZ2VPcGFjaXR5fTtgfT5cbiAgICAgIDxGcm9udEltYWdlUG9seWdvbk91dERpdj5cbiAgICAgICAgPEFuaW1hdGVkIGFuaW1hdGlvbkluPVwiZmFkZUluXCIgYW5pbWF0aW9uSW5EdXJhdGlvbj17NDAwMH0gYW5pbWF0aW9uSW5EZWxheT17MjAwMH0gYW5pbWF0aW9uT3V0PVwiZmFkZU91dFwiIGlzVmlzaWJsZT17dHJ1ZX0+XG4gICAgICAgIDxGcm9udEltYWdlUG9seWdvbkRpdiA+XG4gICAgICAgICAge2ZvcmVncm91bmRNZWRpYX1cbiAgICAgICAgPC9Gcm9udEltYWdlUG9seWdvbkRpdj5cbiAgICAgICAgPC9BbmltYXRlZD5cbiAgICAgIDwvRnJvbnRJbWFnZVBvbHlnb25PdXREaXY+XG4gICAgPC9Gcm9udEltYWdlRGl2PlxuICAgIHtiYWNrZ3JvdW5kTWVkaWF9XG4gIDwvVHJpYW5nbGVTZWN0aW9uPlxuICApO1xuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoVHJpYW5nbGVMYW5kaW5nKTtcblxuY29uc3QgVHJpYW5nbGVTZWN0aW9uID0gc3R5bGVkLnNlY3Rpb25gXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG5jb25zdCBUZXh0TG9vcERpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOmFic29sdXRlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIHRvcDowO1xuICBsZWZ0OjA7XG4gIHdpZHRoOjEwMCU7XG4gIHotaW5kZXg6MztcbiAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KSB7XG4gICAgICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fTtcbiAgfVxuICAmIGRpdntcbiAgICAmIGRpdntcbiAgICAgIHdpZHRoOjEwMHZ3O1xuICAgIH1cbiAgfVxuYFxuXG4vKlxudGV4dC1zaGFkb3c6XG4gLTFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSxcbiAgMXB4IC0xcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLFxuICAtMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksXG4gICAxcHggMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKTtcbiovXG5cbmNvbnN0IE15TmFtZSA9IHN0eWxlZC5oMWBcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBcIkFyY2hpdiBHcm90ZXNrXCIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJIZWx2ZXRpY2EgTmV1ZVwiLFxuICBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogNy41dnc7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgei1pbmRleDozO1xuICBsZXR0ZXItc3BhY2luZzogMC4zdnc7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIGRpc3BsYXk6ZmxleDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgZm9udC1zaXplOiAxNS41dnc7XG4gICAgcGFkZGluZy10b3A6MTUwcHg7XG4gIH1cbmA7XG5cblxuXG5jb25zdCBCZ0gxU3BhbiA9IHN0eWxlZC5kaXZgXG5wYWRkaW5nOiAwIDUwcHg7XG50cmFuc2l0aW9uOiBhbGwgMS4wcztcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgIHBhZGRpbmc6IDAgMDtcbiAgfVxuYFxuXG5jb25zdCBOdW1iZXJzRGVjbyA9IHN0eWxlZC5zcGFuYFxuICBjb2xvcjojNzA3MDcwO1xuICB3aWR0aDoxMDAlO1xuICB6LWluZGV4OjE7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjIyKTtcbiAgZGlzcGxheTpmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZmxleC13cmFwOiBub3dyYXA7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAmIHNwYW57XG4gICAgZm9udC13ZWlnaHQ6MjAwO1xuICB9XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH0gKiAwLjM1KTtcbiAgfVxuYFxuXG5jb25zdCBNeU5hbWVCb3R0b21MaW5lID0gc3R5bGVkLnNwYW5gXG4gIGJvcmRlci1ib3R0b206IDFweCAjNzA3MDcwIHNvbGlkO1xuICB3aWR0aDoxMDAlO1xuICB6LWluZGV4OjI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjc1KTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgICB0b3A6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC44MCk7XG4gIH1cbmBcblxuY29uc3QgY2lyY2xlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAzMyUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDIwJSwtMTAlKSBzY2FsZSgxLjIpO1xuICB9XG4gIDY2JSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTIwJSwxMCUpIHNjYWxlKDAuOCk7XG4gIH1cbmBcblxuY29uc3QgRGVjb0NpcmNsZSA9IHN0eWxlZC5zcGFuYFxuICBib3JkZXI6IDFweCAjNzA3MDcwIHNvbGlkO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHdpZHRoOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjYpO1xuICBoZWlnaHQ6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0fSAqIDAuNik7XG4gIHotaW5kZXg6IDI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjIwKTtcbiAgbGVmdDo4JTtcbiAgYW5pbWF0aW9uOiAke2NpcmNsZUFuaW1hdGlvbn0gMTIwcyBlYXNlIGluZmluaXRlO1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIEBtZWRpYShvcmllbnRhdGlvbjpwb3J0cmFpdCl7XG4gICAgd2lkdGg6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC40KTtcbiAgICBoZWlnaHQ6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC40KTtcbiAgICB0b3A6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC4yMik7XG4gIH1cbmBcblxuY29uc3QgQmFja2dyb3VuZEltYWdlRGl2ID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogLTE7XG4gICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgJjphZnRlcntcbiAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgIHdpZHRoOjEwMCU7IGhlaWdodDoxMDAlO1xuICAgICAgdG9wOjA7IGxlZnQ6MDtcbiAgICAgIGJhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjYpO1xuICAgICAgb3BhY2l0eTowO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgfVxuYDtcblxuY29uc3QgQmFja2dyb3VuZEltYWdlRGl2RGFya2VuID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogLTE7XG4gICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgJjphZnRlcntcbiAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgIHdpZHRoOjEwMCU7IGhlaWdodDoxMDAlO1xuICAgICAgdG9wOjA7IGxlZnQ6MDtcbiAgICAgIGJhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjYpO1xuICAgICAgb3BhY2l0eToxO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gICAgfVxuYDtcblxuXG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZSA9IHN0eWxlZC5pbWdgXG4gIG1pbi13aWR0aDogMTAwJTtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbmA7XG5cblxuY29uc3QgRnJvbnRJbWFnZURpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgdHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gIHRvcDowO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KSB7XG4gICAgICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fTtcbiAgfVxuYDtcbi8qLy9odHRwczovL2Jlbm5ldHRmZWVseS5jb20vY2xpcHB5LyovXG5jb25zdCB0cmlhbmdsZUFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMzMlIHtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oNTAlIDE1JSwgMzElIDg4JSwgNzclIDYwJSk7XG4gIH1cbiAgNjYlIHtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oNzIlIDE5JSwgMjklIDM5JSwgNjAlIDk0JSk7XG4gIH1cbmBcblxuY29uc3QgdHJpYW5nbGVBbmltYXRpb25Nb2JpbGUgPSBrZXlmcmFtZXNgXG4gIDMzJSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDczJSAxMyUsIDglIDU4JSwgOTUlIDkxJSk7XG4gIH1cbiAgNjYlIHtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMTAwJSAxOSUsIDAgMzclLCA1OSUgODYlKTtcbiAgfVxuYFxuXG5jb25zdCBGcm9udEltYWdlUG9seWdvbk91dERpdiA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodH07XG4gIGJhY2tncm91bmQ6ICM3MDcwNzA7XG4gIGFuaW1hdGlvbjogJHt0cmlhbmdsZUFuaW1hdGlvbn0gMTIwcyBlYXNlIGluZmluaXRlO1xuICBjbGlwLXBhdGg6IHBvbHlnb24oNjMlIDEwJSwgMjglIDY1JSwgNzIlIDkyJSk7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGNsaXAtcGF0aDogcG9seWdvbigzNSUgMTglLCA0JSA4OSUsIDEyMCUgNjYlKTtcbiAgICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb25Nb2JpbGV9IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgICBoZWlnaHQ6ICR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fTtcbiAgfVxuYDtcblxuLyogdHJhbnNpdGlvbjogMC40cyBjdWJpYy1iZXppZXIoMCwgMSwgMC42NSwgMC45NCk7ICovXG5jb25zdCBGcm9udEltYWdlUG9seWdvbkRpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAzcHg7XG4gIGxlZnQ6IDNweDtcbiAgcmlnaHQ6IDNweDtcbiAgYm90dG9tOiAzcHg7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGFuaW1hdGlvbjogJHt0cmlhbmdsZUFuaW1hdGlvbn0gMTIwcyBlYXNlIGluZmluaXRlO1xuICBjbGlwLXBhdGg6IHBvbHlnb24oNjMlIDEwJSwgMjglIDY1JSwgNzIlIDkyJSk7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGNsaXAtcGF0aDogcG9seWdvbigzNSUgMTglLCA0JSA4OSUsIDEyMCUgNjYlKTtcbiAgICAgICAgYW5pbWF0aW9uOiAke3RyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlfSAxMjBzIGVhc2UgaW5maW5pdGU7XG4gIH1cbmA7XG5cbmNvbnN0IEZyb250SW1hZ2UgPSBzdHlsZWQuaW1nYFxuICB3aWR0aDogMTAwJTtcbiAgbWF4LWhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbmA7XG5cbi8qICBtaXgtYmxlbmQtbW9kZTogZGlmZmVyZW5jZTsqL1xuY29uc3QgU3ViTWVudSA9IHN0eWxlZC5kaXZgXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA2MHB4O1xuICB6LWluZGV4OiAzO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgcGFkZGluZzogMTBweCAxNXB4IDEwcHggMTVweDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZmxleC1mbG93OmNvbHVtbjtcbiAgICBoZWlnaHQ6IDE4MHB4O1xuICB9XG4gIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuYDtcblxuXG5jb25zdCBTdWJNZW51VGl0bGVEaXYgPSBzdHlsZWQuZGl2YFxuICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgd2lkdGg6MjUwcHg7XG4gICY6bnRoLW9mLXR5cGUoMSl7XG4gICAgdGV4dC1hbGlnbjpsZWZ0O1xuICB9XG4gICY6bnRoLW9mLXR5cGUoMyl7XG4gICAgd2lkdGg6MzAwcHg7XG4gIH1cbiAgJjpudGgtb2YtdHlwZSg1KXtcbiAgICB0ZXh0LWFsaWduOnJpZ2h0O1xuICB9XG4gIHRleHQtc2hhZG93OiAtMXB4IC0xcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4wKSwxcHggLTFweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjApLC0xcHggMXB4IDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMCksMXB4IDFweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjIpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBoZWlnaHQ6MzhweDtcbiAgICAmOm50aC1vZi10eXBlKDEpe1xuICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgfVxuICAgICY6bnRoLW9mLXR5cGUoMyl7XG4gICAgICB3aWR0aDoyNzBweDtcbiAgICB9XG4gICAgJjpudGgtb2YtdHlwZSg1KXtcbiAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIH1cbiAgfVxuYDtcblxuY29uc3QgVGl0bGVEaXZIciA9IHN0eWxlZC5kaXZgXG4gIGZsZXgtZ3JvdzoxO1xuICBtYXJnaW4tdG9wOiAtMjBweDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCBibGFjaztcbiAgICBsZWZ0OjUwJTtcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICB9XG5gO1xuXG5jb25zdCBIckxpbmUgPSBzdHlsZWQuaHJgXG4gIGJvcmRlcjogbm9uZTtcbiAgaGVpZ2h0OiAxcHg7XG4gIC8qIFNldCB0aGUgaHIgY29sb3IgKi9cbiAgY29sb3I6IGJsYWNrOyAvKiBvbGQgSUUgKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IC8qIE1vZGVybiBCcm93c2VycyAqL1xuICAgIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgICAgZGlzcGxheTpub25lO1xuICAgIH1cbmA7XG5cbmNvbnN0IFRpdGxlTGluayA9IHN0eWxlZChMaW5rKWBcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBtaXgtYmxlbmQtbW9kZTogbm9ybWFsO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAke3N1Yk1lbnVGb250U2l6ZX07XG4gIGZvbnQtd2VpZ2h0OjUwMDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgcGFkZGluZzo1cHggNDVweCAxNXB4IDQ1cHg7XG4gICY6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG4gICY6YWN0aXZle1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBwYWRkaW5nOiAycHggMTVweCAwcHggMTVweDtcbiAgfVxuYDtcblxuY29uc3QgQmxhY2tEaXYgPSBzdHlsZWQuZGl2YFxuICBiYWNrZ3JvdW5kOmJsYWNrO1xuICB3aWR0aDoxMDAlO1xuICBoZWlnaHQ6MTAwJTtcbmA7XG5cbmNvbnN0IFdoaXRlRGl2ID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZDp3aGl0ZTtcbiAgd2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG5gO1xuXG5jb25zdCBQb3N0VGl0bGVEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDoxMDAlO1xuICBwYWRkaW5nLWxlZnQ6IDQ1cHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgfVxuYDtcblxuY29uc3QgUG9zdFRpdGxlID0gc3R5bGVkLmgxYFxuICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgYm90dG9tOjEuM2VtO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBmb250LXNpemU6IDMuNWVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBmb250LXNpemU6IDh2dztcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICB9XG5gO1xuY29uc3QgUG9zdFRpdGxlQ2hpbmVzZSA9IHN0eWxlZC5oMWBcbiAgcG9zaXRpb246YWJzb2x1dGU7XG4gIGJvdHRvbTowO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBmb250LXNpemU6IDMuMWVtO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBmb250LXNpemU6IDh2dztcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICB9XG5gO1xuXG5cbmNvbnN0IFZpZGVvUGxheWVyTmF0aXZlID0gc3R5bGVkLnZpZGVvYFxuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC1hc3BlY3QtcmF0aW86IDE5MjAvMTA4MCkge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4tYXNwZWN0LXJhdGlvOiAxOTIwLzEwODApIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICB9XG5gO1xuXG5cbmNvbnN0IEltZyA9IHN0eWxlZC5pbWdgXG4gIGRpc3BsYXk6YmxvY2s7XG4gIG1pbi13aWR0aDoxMDAlO1xuICBoZWlnaHQ6MTAwJTtcbiAgb2JqZWN0LWZpdDpjb3ZlcjtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBoZWlnaHQ6MTAwJTtcbiAgfVxuYFxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const FrontImageDiv=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy15\",label:\"FrontImageDiv\"})(\"position:absolute;z-index:1;display:flex;justify-content:center;align-items:center;width:100%;height:\",sectionHeight,\";overflow:hidden;transition:all 1.0s;top:0;@media(orientation: portrait){height:\",sectionHeightPortrait,\";}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));/*//https://bennettfeely.com/clippy/*/const triangleAnimation=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"keyframes\"])(_t2||(_t2=_`\n  33% {\n    clip-path: polygon(50% 15%, 31% 88%, 77% 60%);\n  }\n  66% {\n    clip-path: polygon(72% 19%, 29% 39%, 60% 94%);\n  }\n`));const triangleAnimationMobile=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"keyframes\"])(_t3||(_t3=_`\n  33% {\n    clip-path: polygon(73% 13%, 8% 58%, 95% 91%);\n  }\n  66% {\n    clip-path: polygon(100% 19%, 0 37%, 59% 86%);\n  }\n`));const FrontImagePolygonOutDiv=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy14\",label:\"FrontImagePolygonOutDiv\"})(\"width:100%;height:\",sectionHeight,\";background:#707070;animation:\",triangleAnimation,\" 120s ease infinite;clip-path:polygon(63% 10%, 28% 65%, 72% 92%);@media(orientation: portrait){clip-path:polygon(35% 18%, 4% 89%, 120% 66%);animation:\",triangleAnimationMobile,\" 120s ease infinite;height:\",sectionHeightPortrait,\";}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));/* transition: 0.4s cubic-bezier(0, 1, 0.65, 0.94); */const FrontImagePolygonDiv=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy13\",label:\"FrontImagePolygonDiv\"})(\"position:absolute;top:3px;left:3px;right:3px;bottom:3px;background-size:cover;animation:\",triangleAnimation,\" 120s ease infinite;clip-path:polygon(63% 10%, 28% 65%, 72% 92%);@media(orientation: portrait){clip-path:polygon(35% 18%, 4% 89%, 120% 66%);animation:\",triangleAnimationMobile,\" 120s ease infinite;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const FrontImage=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"img\", false?undefined:{target:\"e1649dpy12\",label:\"FrontImage\"})( false?undefined:{name:\"838mgo\",styles:\"width:100%;max-height:100%;object-fit:cover;display:block;margin:0 auto\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVrQjZCIiwiZmlsZSI6IkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdCwgR2xvYmFsLCBjc3MsIHN0eWxlZCwga2V5ZnJhbWVzIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIi4uL2xpbmtcIjtcbmltcG9ydCBMb2FkaW5nIGZyb20gXCIuLi9sb2FkaW5nXCI7XG4vL2ltcG9ydCBUZXh0TG9vcCBmcm9tIFwicmVhY3QtdGV4dC1sb29wXCI7XG5pbXBvcnQgeyB1c2VXaW5kb3dTaXplIH0gZnJvbSAnLi4vLi4vaGVscGVycydcbmltcG9ydCB7QW5pbWF0ZWR9IGZyb20gXCJyZWFjdC1hbmltYXRlZC1jc3NcIjtcblxuLy9pbXBvcnQgeyBQbGF5ZXIsIENvbnRyb2xCYXIsIFNob3J0Y3V0IH0gZnJvbSAndmlkZW8tcmVhY3QnO1xuLy9pbXBvcnQgZXh0ZXJuYWxDU1MgZnJvbSBcIi4uL3N0eWxlcy92aWRlby1yZWFjdC5jc3NcIjsgLy8gaW1wb3J0IGNzc1xuLy9pbXBvcnQgeyBWaWRlb1BsYXllciB9IGZyb20gXCIuLi92aWRlby1wbGF5ZXJcIjtcblxuY29uc3Qgc2VjdGlvbkhlaWdodCA9ICdjYWxjKDEwMHZ3IC8gMi4yKSc7XG5jb25zdCBzZWN0aW9uSGVpZ2h0UG9ydHJhaXQgPSAnY2FsYygxMDB2dyAqIDEuNDIpJztcbmxldCBzdWJNZW51VG9wID0gJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKSc7XG5sZXQgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG5cbmxldCBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnYmxhY2snO1xubGV0IHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ2JsYWNrJztcbmxldCBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnYmxhY2snO1xuXG5sZXQgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ3doaXRlJztcbmxldCBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICd3aGl0ZSc7XG5sZXQgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ3doaXRlJztcblxubGV0IG5hbWVUZXh0U2hhZG93T24gPSAnLTFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSwxcHggLTFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksLTFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpOyc7XG5cblxubGV0IGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG5jb25zdCBzdWJNZW51Rm9udFNpemUgPSAnMjBweCc7XG5cbmNvbnN0IFRyaWFuZ2xlTGFuZGluZyA9ICh7IHN0YXRlLCBhY3Rpb25zIH0pID0+IHtcblxuICBsZXQgaXNCaW9QYWdlO1xuICBsZXQgaXNLaW5ldGljc1JvYm90aWNzUGFnZTtcbiAgbGV0IGlzSW50ZXJhY3RpdmVEaWdpdGFsUGFnZTtcbiAgbGV0IGlzVGVjaFJlc2VhcmNoUGFnZTtcbiAgbGV0IGlzUHJvamVjdHNQYWdlO1xuICBsZXQgaXNIb21lUGFnZTtcbiAgbGV0IGlzUG9zdDtcbiAgbGV0IGxhbmRpbmdEYXRhO1xuICBmdW5jdGlvbiBjaGFuZ2VQYWdlKGUpe1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBsYW5kaW5nRGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoZXh0cmFQb3N0TGluayk7XG4gIH1cblxuICBjb25zdCBzaXplID0gdXNlV2luZG93U2l6ZSgpO1xuICBjb25zdCBwID0gXCJsYW5kaW5ncy9cIjtcbiAgY29uc3QgZXh0cmFQb3N0TGluayA9IGAvJHtwfWA7XG4gIGxhbmRpbmdEYXRhID0gc3RhdGUuc291cmNlLmdldChleHRyYVBvc3RMaW5rKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChleHRyYVBvc3RMaW5rKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcblxuICBpc0Jpb1BhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvYmlvLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0tpbmV0aWNzUm9ib3RpY3NQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzL2tpbmV0aWNzLXJvYm90aWNzLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0ludGVyYWN0aXZlRGlnaXRhbFBhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMvaW50ZXJhY3RpdmUtZGlnaXRhbC8nKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNUZWNoUmVzZWFyY2hQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzL3RlY2gtcmVzZWFyY2gvJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzUHJvamVjdHNQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0hvbWVQYWdlID0gKGRhdGEuaXNIb21lKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNQb3N0ID0gKGRhdGEuaXNQb3N0KSA/IHRydWUgOiBmYWxzZTtcblxuICBsZXQgcG9zdFRpdGxlID0gXCJcIjtcbiAgbGV0IHBvc3RUaXRsZUNoaW5lc2UgPSBcIlwiO1xuICBsZXQgcG9zdE1lZGlhID0gXCJcIjtcbiAgbGV0IG1haW5OYW1lID0gXCJcIlxuICBsZXQgZm9yZWdyb3VuZE1lZGlhO1xuICBsZXQgYmFja2dyb3VuZE1lZGlhO1xuXG4gIGlmIChpc1Bvc3QgJiYgZGF0YS5pc1JlYWR5KSB7XG5cbiAgICBjb25zdCBwb3N0ID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gICAgbGV0IGZlYXR1cmVNZWRpYVVSTCA9IHBvc3QuamV0cGFja19mZWF0dXJlZF9tZWRpYV91cmw7XG4gICAgbGV0IG4gPSBmZWF0dXJlTWVkaWFVUkwuaW5kZXhPZignPycpO1xuICAgIGxldCBzcyA9IGZlYXR1cmVNZWRpYVVSTC5zdWJzdHJpbmcoMCwgbiAhPSAtMSA/IG4gOiBmZWF0dXJlTWVkaWFVUkwubGVuZ3RoKTtcbiAgICBwb3N0VGl0bGUgPSBwb3N0LnRpdGxlLnJlbmRlcmVkO1xuICAgIHBvc3RUaXRsZUNoaW5lc2UgPSBwb3N0LmNoaW5lc2VfdGl0bGU7XG4gICAgcG9zdE1lZGlhID0gcG9zdC5iYWNrZ3JvdW5kX21lZGlhLmd1aWQgPyBwb3N0LmJhY2tncm91bmRfbWVkaWEuZ3VpZCA6IHNzO1xuXG4gIH1cblxuXG4gIGlmIChsYW5kaW5nRGF0YS5pc1JlYWR5KSB7XG5cbiAgICBsZXQgbGFuZGluZ1VSTCwgaXRlbTtcbiAgICBpZiAoaXNCaW9QYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvYmlvL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNLaW5ldGljc1JvYm90aWNzUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2tpbmV0aWNzLXJvYm90aWNzL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaW50ZXJhY3RpdmUtZGlnaXRhbC9cIjtcbiAgICB9IGVsc2UgaWYgKGlzVGVjaFJlc2VhcmNoUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL3RlY2gtcmVzZWFyY2gvXCI7XG4gICAgfSBlbHNlIGlmIChpc1Byb2plY3RzUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2tpbmV0aWNzLXJvYm90aWNzL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNIb21lUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2hvbWUvXCI7XG4gICAgfSBlbHNlIGlmIChpc1Bvc3QpIHsgLy9IT01FXG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaG9tZS9cIjsgLy9UT0RPXG4gICAgfSBlbHNlIHtcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9ob21lL1wiOyAvL1RPRE9cbiAgICB9XG4gICAgY29uc29sZS5sb2cobGFuZGluZ1VSTClcbiAgICB2YXIgaXRlbXMgPSBsYW5kaW5nRGF0YS5pdGVtcy5tYXAoKHsgdHlwZSwgaWQsIGxpbmsgfSwgaW5kZXgpID0+IHtcbiAgICAgIGlmIChsaW5rID09PSBsYW5kaW5nVVJMKSB7XG4gICAgICAgIGl0ZW0gPSBzdGF0ZS5zb3VyY2VbdHlwZV1baWRdO1xuICAgICAgfVxuICAgIH0pXG5cbiAgICBjb25zdCBmb3JlZ3JvdW5kQmxhY2tEaXYgPSA8QmxhY2tEaXY+PC9CbGFja0Rpdj47XG4gICAgY29uc3QgYmFja2dyb3VuZFdoaXRlRGl2ID0gPEJhY2tncm91bmRJbWFnZURpdj48V2hpdGVEaXY+PC9XaGl0ZURpdj48L0JhY2tncm91bmRJbWFnZURpdj47XG5cbiAgICBjb25zdCBoYW5kbGVMb2FkZWREYXRhID0gKHR5cGUpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGAke3R5cGV9IHZpZGVvIGxvYWRlZGApO1xuICAgIH07XG4gICAgXG4gICAgY29uc3QgZm9yZWdyb3VuZFZpZGVvID0gaXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdICYmIChcbiAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkfT5cbiAgICAgICAgPFZpZGVvUGxheWVyTmF0aXZlXG4gICAgICAgICAgcGxheXNJbmxpbmVcbiAgICAgICAgICBhdXRvUGxheVxuICAgICAgICAgIG11dGVkXG4gICAgICAgICAgbG9vcFxuICAgICAgICAgIG9uTG9hZGVkRGF0YT17KCkgPT4gaGFuZGxlTG9hZGVkRGF0YShcIkZvcmVncm91bmRcIil9XG4gICAgICAgID5cbiAgICAgICAgICA8c291cmNlXG4gICAgICAgICAgICBzcmM9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkICsgXCIjdD0wLjFcIn1cbiAgICAgICAgICAgIHR5cGU9e1widmlkZW8vbXA0XCJ9XG4gICAgICAgICAgICBrZXk9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvVmlkZW9QbGF5ZXJOYXRpdmU+XG4gICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICk7XG4gICAgY29uc3QgYmFja2dyb3VuZFZpZGVvID0gaXRlbS5iYWNrZ3JvdW5kX21lZGlhWzBdICYmIChcbiAgICAgIDxCYWNrZ3JvdW5kSW1hZ2VEaXY+XG4gICAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkfT5cbiAgICAgICAgICA8VmlkZW9QbGF5ZXJOYXRpdmVcbiAgICAgICAgICAgIHBsYXlzSW5saW5lXG4gICAgICAgICAgICBhdXRvUGxheVxuICAgICAgICAgICAgbXV0ZWRcbiAgICAgICAgICAgIGxvb3BcbiAgICAgICAgICAgIG9uTG9hZGVkRGF0YT17KCkgPT4gaGFuZGxlTG9hZGVkRGF0YShcIkJhY2tncm91bmRcIil9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPHNvdXJjZVxuICAgICAgICAgICAgICBzcmM9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkICsgXCIjdD0wLjFcIn1cbiAgICAgICAgICAgICAgdHlwZT17XCJ2aWRlby9tcDRcIn1cbiAgICAgICAgICAgICAga2V5PXtpdGVtLmJhY2tncm91bmRfbWVkaWFbMF0uZ3VpZH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9WaWRlb1BsYXllck5hdGl2ZT5cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgIDwvQmFja2dyb3VuZEltYWdlRGl2PlxuICAgICk7XG5cbiAgICBpZiAoaXNCaW9QYWdlKSB7XG5cbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRCbGFja0RpdjtcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcblxuICAgICAgc3ViTWVudVRvcCA9ICctMTAwcHgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAwO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuICAgICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNIb21lUGFnZSkge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kVmlkZW87XG5cbiAgICAgIHN1Yk1lbnVUb3AgPSAoc2l6ZS53aWR0aCA8PSA5MDAgJiYgaXNIb21lUGFnZSA/ICctMTAwcHgnIDogJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKScpO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAoc2l6ZS53aWR0aCA8PSA5MDAgJiYgaXNIb21lUGFnZSA/IDAgOiAxLjApO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEFuaW1hdGVkIGFuaW1hdGlvbkluPVwiZmFkZUluXCIgYW5pbWF0aW9uSW5EdXJhdGlvbj17NTAwMH0gYW5pbWF0aW9uSW5EZWxheT17MH0gYW5pbWF0aW9uT3V0PVwiZmFkZU91dFwiIGlzVmlzaWJsZT17dHJ1ZX0+PEJnSDFTcGFuPlRISU5HUyBUSEFUIE1PVkU8L0JnSDFTcGFuPjwvQW5pbWF0ZWQ+PC9NeU5hbWU+O1xuXG4gICAgICAvKlxuICAgICAgICBjb25zdCBwbGF5ZXJPcHRpb25zID0ge1xuICAgICAgICBzb3VyY2VzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc3JjOiBpdGVtLmZvcmVncm91bmRfbWVkaWFbMF0uZ3VpZFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGxvb3A6IHRydWUsXG4gICAgICAgIHByZWxvYWQ6IFwiYXV0b1wiXG4gICAgICAgIH07XG4gICAgICAqL1xuXG4gICAgfSBlbHNlIGlmIChpc1Bvc3QpIHtcblxuICAgICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kQmxhY2tEaXY7XG5cbiAgICAgICAgdmFyIGltZ3MgPVtcImpwZ1wiLCBcImpwZWdcIiwgXCJnaWZcIiwgXCJ0aWZmXCIsIFwicG5nXCIsIFwid2VicFwiXTtcbiAgICAgICAgdmFyIHZpZHMgPSBbXCJtcDRcIiwgXCJ3ZWJtXCJdO1xuXG4gICAgICAgIGlmKCBpbWdzLmluZGV4T2YocG9zdE1lZGlhLnNwbGl0KCcuJykucG9wKCkpID49IDAgKVxuICAgICAgICB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kTWVkaWEgPSA8QmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjxJbWcgc3JjPXtwb3N0TWVkaWF9IGFsdD17cG9zdFRpdGxlfSAvPjwvQmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjtcbiAgICAgICAgfSBlbHNlIGlmICggdmlkcy5pbmRleE9mKHBvc3RNZWRpYS5zcGxpdCgnLicpLnBvcCgpKSA+PSAwIClcbiAgICAgICAge1xuICAgICAgICAgICAgYmFja2dyb3VuZE1lZGlhID0gPEJhY2tncm91bmRJbWFnZURpdkRhcmtlbj48UmVhY3QuRnJhZ21lbnQga2V5PXtwb3N0TWVkaWF9PjxWaWRlb1BsYXllck5hdGl2ZSBwbGF5c0lubGluZT17dHJ1ZX0gYXV0b1BsYXk9e3RydWV9IG11dGVkPXt0cnVlfSBsb29wPXt0cnVlfSA+XG4gICAgICAgICAgICAgIDxzb3VyY2Ugc3JjPXtwb3N0TWVkaWF9IHR5cGU9XCJ2aWRlby9tcDRcIiAvPlxuICAgICAgICAgICAgICA8L1ZpZGVvUGxheWVyTmF0aXZlPjwvUmVhY3QuRnJhZ21lbnQ+PC9CYWNrZ3JvdW5kSW1hZ2VEaXZEYXJrZW4+O1xuICAgICAgICB9XG5cbiAgICAvLyAgc3ViTWVudVRvcCA9ICctMTAwcHgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAwO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcbiAgICB9IGVsc2UgaWYgKGlzS2luZXRpY3NSb2JvdGljc1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ3doaXRlJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0VGVjaCA9ICdibGFjayc7XG4gICAgICBmcm9udEltYWdlT3BhY2l0eSA9IDEuMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3BhbiBjc3M9e2Nzc2Bjb2xvcjpCbGFjazt0ZXh0LXNoYWRvdzoke25hbWVUZXh0U2hhZG93T259YH0+UGh5c2ljYWw8L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcblxuICAgIH0gZWxzZSBpZiAoaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlKSB7XG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJzEwdmgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnd2hpdGUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT5EaWdpdGFsPC9CZ0gxU3Bhbj48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfSBlbHNlIGlmIChpc1RlY2hSZXNlYXJjaFBhZ2UpIHtcbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRWaWRlbztcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcbiAgICAgIHN1Yk1lbnVUb3AgPSAnMTB2aCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDEuMDtcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnd2hpdGUnO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4gY3NzPXtjc3NgY29sb3I6QmxhY2s7dGV4dC1zaGFkb3c6JHtuYW1lVGV4dFNoYWRvd09ufWB9PkFydCBhbmQgVGVjaG5vbG9neTwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNQcm9qZWN0c1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT48L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcblxuICAgIH1cbiAgICBlbHNlIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZEJsYWNrRGl2O1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICdjYWxjKCcgKyBzZWN0aW9uSGVpZ2h0ICsgJyAtIDh2aCknO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4+VEhJTkdTIFRIQVQgTU9WRTwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH1cblxuICB9XG5cbiAgcmV0dXJuICg8VHJpYW5nbGVTZWN0aW9uIGNsYXNzTmFtZT1cImNvbnRhaW5lclwiID5cblxuICAgIDxUZXh0TG9vcERpdj5cbiAgICAgICAgey8qPFRoaW5nc1RoYXRNb3ZlPlRISU5HUyBUSEFUIE1PVkU8L1RoaW5nc1RoYXRNb3ZlPiovfVxuICAgICAgICB7bWFpbk5hbWV9XG4gICAgPC9UZXh0TG9vcERpdj5cblxuICAgIDxQb3N0VGl0bGVEaXY+PFBvc3RUaXRsZT57cG9zdFRpdGxlfTwvUG9zdFRpdGxlPjxQb3N0VGl0bGVDaGluZXNlPntwb3N0VGl0bGVDaGluZXNlfTwvUG9zdFRpdGxlQ2hpbmVzZT48L1Bvc3RUaXRsZURpdj5cblxuICAgIDxOdW1iZXJzRGVjbyBjc3M9e2lzSG9tZVBhZ2UgfHwgaXNUZWNoUmVzZWFyY2hQYWdlID8gY3NzYG9wYWNpdHk6IDE7YDpjc3Ngb3BhY2l0eTogMDtgfT48c3Bhbj4wMTwvc3Bhbj48c3Bhbj4wMjwvc3Bhbj48c3Bhbj4wMzwvc3Bhbj48c3Bhbj4wNDwvc3Bhbj48c3Bhbj4wNTwvc3Bhbj48c3Bhbj4wNjwvc3Bhbj48c3Bhbj4wNzwvc3Bhbj48c3Bhbj4wODwvc3Bhbj48c3Bhbj4wOTwvc3Bhbj48c3Bhbj4xMDwvc3Bhbj48L051bWJlcnNEZWNvPlxuICAgIDxNeU5hbWVCb3R0b21MaW5lPjwvTXlOYW1lQm90dG9tTGluZT5cbiAgICA8RGVjb0NpcmNsZT48L0RlY29DaXJjbGU+XG4gICAgey8qY3NzPXtjc3NgYmFja2dyb3VuZDogJHtzdWJNZW51QWN0aXZlQmFja2dyb3VuZH07YH0qL31cblxuICAgIDxTdWJNZW51IGNzcz17Y3NzYHRvcDogJHtzdWJNZW51VG9wfTsgb3BhY2l0eTogJHtzdWJNZW51T3BhY2l0eX1gfT5cbiAgICAgIDxTdWJNZW51VGl0bGVEaXYgY3NzPXtjc3NgYmFja2dyb3VuZDogJHtzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmt9O2B9PjxUaXRsZUxpbmsgY3NzPXtjc3NgY29sb3I6ICR7c3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrfTtgfSBsaW5rPVwiL2NhdGVnb3J5L3Byb2plY3RzL2tpbmV0aWNzLXJvYm90aWNzXCIgb25DbGljaz17ZSA9PiBjaGFuZ2VQYWdlKGUpfT5LaW5ldGljcyBhbmQgUm9ib3RpY3M8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICAgIDxUaXRsZURpdkhyPjxIckxpbmU+PC9IckxpbmU+PC9UaXRsZURpdkhyPlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWdufTtgfT48VGl0bGVMaW5rIGNzcz17Y3NzYGNvbG9yOiAke3N1Yk1lbnVBY3RpdmVUZXh0RGVzaWdufTtgfSBsaW5rPVwiL2NhdGVnb3J5L3Byb2plY3RzL2ludGVyYWN0aXZlLWRpZ2l0YWxcIiBvbkNsaWNrPXtlID0+IGNoYW5nZVBhZ2UoZSl9PkludGVyYXRpdmUgYW5kIERpZ2l0YWw8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICAgIDxUaXRsZURpdkhyPjxIckxpbmU+PC9IckxpbmU+PC9UaXRsZURpdkhyPlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaH07YH0+PFRpdGxlTGluayBjc3M9e2Nzc2Bjb2xvcjogJHtzdWJNZW51QWN0aXZlVGV4dFRlY2h9O2B9IGxpbms9XCIvY2F0ZWdvcnkvcHJvamVjdHMvdGVjaC1yZXNlYXJjaFwiIG9uQ2xpY2s9e2UgPT4gY2hhbmdlUGFnZShlKX0+VGVjaCBhbmQgUmVzZWFyY2g8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICA8L1N1Yk1lbnU+XG4gICAgPEZyb250SW1hZ2VEaXYgY3NzPXtjc3Ngb3BhY2l0eTogJHtmcm9udEltYWdlT3BhY2l0eX07YH0+XG4gICAgICA8RnJvbnRJbWFnZVBvbHlnb25PdXREaXY+XG4gICAgICAgIDxBbmltYXRlZCBhbmltYXRpb25Jbj1cImZhZGVJblwiIGFuaW1hdGlvbkluRHVyYXRpb249ezQwMDB9IGFuaW1hdGlvbkluRGVsYXk9ezIwMDB9IGFuaW1hdGlvbk91dD1cImZhZGVPdXRcIiBpc1Zpc2libGU9e3RydWV9PlxuICAgICAgICA8RnJvbnRJbWFnZVBvbHlnb25EaXYgPlxuICAgICAgICAgIHtmb3JlZ3JvdW5kTWVkaWF9XG4gICAgICAgIDwvRnJvbnRJbWFnZVBvbHlnb25EaXY+XG4gICAgICAgIDwvQW5pbWF0ZWQ+XG4gICAgICA8L0Zyb250SW1hZ2VQb2x5Z29uT3V0RGl2PlxuICAgIDwvRnJvbnRJbWFnZURpdj5cbiAgICB7YmFja2dyb3VuZE1lZGlhfVxuICA8L1RyaWFuZ2xlU2VjdGlvbj5cbiAgKTtcblxufVxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFRyaWFuZ2xlTGFuZGluZyk7XG5cbmNvbnN0IFRyaWFuZ2xlU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICAgIGhlaWdodDogJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9O1xuICB9XG5gO1xuY29uc3QgVGV4dExvb3BEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICB0b3A6MDtcbiAgbGVmdDowO1xuICB3aWR0aDoxMDAlO1xuICB6LWluZGV4OjM7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbiAgJiBkaXZ7XG4gICAgJiBkaXZ7XG4gICAgICB3aWR0aDoxMDB2dztcbiAgICB9XG4gIH1cbmBcblxuLypcbnRleHQtc2hhZG93OlxuIC0xcHggLTFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksXG4gIDFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSxcbiAgLTFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLFxuICAgMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyk7XG4qL1xuXG5jb25zdCBNeU5hbWUgPSBzdHlsZWQuaDFgXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LWZhbWlseTogXCJBcmNoaXYgR3JvdGVza1wiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiSGVsdmV0aWNhIE5ldWVcIixcbiAgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDcuNXZ3O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHotaW5kZXg6MztcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3Z3O1xuICBtaXgtYmxlbmQtbW9kZTogbm9ybWFsO1xuICBkaXNwbGF5OmZsZXg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTUuNXZ3O1xuICAgIHBhZGRpbmctdG9wOjE1MHB4O1xuICB9XG5gO1xuXG5cblxuY29uc3QgQmdIMVNwYW4gPSBzdHlsZWQuZGl2YFxucGFkZGluZzogMCA1MHB4O1xudHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICBwYWRkaW5nOiAwIDA7XG4gIH1cbmBcblxuY29uc3QgTnVtYmVyc0RlY28gPSBzdHlsZWQuc3BhbmBcbiAgY29sb3I6IzcwNzA3MDtcbiAgd2lkdGg6MTAwJTtcbiAgei1pbmRleDoxO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC4yMik7XG4gIGRpc3BsYXk6ZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGZsZXgtd3JhcDogbm93cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMS4wcztcbiAgJiBzcGFue1xuICAgIGZvbnQtd2VpZ2h0OjIwMDtcbiAgfVxuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBkaXNwbGF5Om5vbmU7XG4gICAgICB0b3A6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC4zNSk7XG4gIH1cbmBcblxuY29uc3QgTXlOYW1lQm90dG9tTGluZSA9IHN0eWxlZC5zcGFuYFxuICBib3JkZXItYm90dG9tOiAxcHggIzcwNzA3MCBzb2xpZDtcbiAgd2lkdGg6MTAwJTtcbiAgei1pbmRleDoyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC43NSk7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgICAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuODApO1xuICB9XG5gXG5cbmNvbnN0IGNpcmNsZUFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMzMlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgyMCUsLTEwJSkgc2NhbGUoMS4yKTtcbiAgfVxuICA2NiUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0yMCUsMTAlKSBzY2FsZSgwLjgpO1xuICB9XG5gXG5cbmNvbnN0IERlY29DaXJjbGUgPSBzdHlsZWQuc3BhbmBcbiAgYm9yZGVyOiAxcHggIzcwNzA3MCBzb2xpZDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB3aWR0aDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC42KTtcbiAgaGVpZ2h0OiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjYpO1xuICB6LWluZGV4OiAyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC4yMCk7XG4gIGxlZnQ6OCU7XG4gIGFuaW1hdGlvbjogJHtjaXJjbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBAbWVkaWEob3JpZW50YXRpb246cG9ydHJhaXQpe1xuICAgIHdpZHRoOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuNCk7XG4gICAgaGVpZ2h0OiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuNCk7XG4gICAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuMjIpO1xuICB9XG5gXG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZURpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgICY6YWZ0ZXJ7XG4gICAgICBjb250ZW50OicnO1xuICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICB3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTtcbiAgICAgIHRvcDowOyBsZWZ0OjA7XG4gICAgICBiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC42KTtcbiAgICAgIG9wYWNpdHk6MDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgIH1cbmA7XG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZURpdkRhcmtlbiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgICY6YWZ0ZXJ7XG4gICAgICBjb250ZW50OicnO1xuICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICB3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTtcbiAgICAgIHRvcDowOyBsZWZ0OjA7XG4gICAgICBiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC42KTtcbiAgICAgIG9wYWNpdHk6MTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgIH1cbmA7XG5cblxuXG5jb25zdCBCYWNrZ3JvdW5kSW1hZ2UgPSBzdHlsZWQuaW1nYFxuICBtaW4td2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG5gO1xuXG5cbmNvbnN0IEZyb250SW1hZ2VEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICB0b3A6MDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG4vKi8vaHR0cHM6Ly9iZW5uZXR0ZmVlbHkuY29tL2NsaXBweS8qL1xuY29uc3QgdHJpYW5nbGVBbmltYXRpb24gPSBrZXlmcmFtZXNgXG4gIDMzJSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDUwJSAxNSUsIDMxJSA4OCUsIDc3JSA2MCUpO1xuICB9XG4gIDY2JSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDcyJSAxOSUsIDI5JSAzOSUsIDYwJSA5NCUpO1xuICB9XG5gXG5cbmNvbnN0IHRyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlID0ga2V5ZnJhbWVzYFxuICAzMyUge1xuICAgIGNsaXAtcGF0aDogcG9seWdvbig3MyUgMTMlLCA4JSA1OCUsIDk1JSA5MSUpO1xuICB9XG4gIDY2JSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDEwMCUgMTklLCAwIDM3JSwgNTklIDg2JSk7XG4gIH1cbmBcblxuY29uc3QgRnJvbnRJbWFnZVBvbHlnb25PdXREaXYgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBiYWNrZ3JvdW5kOiAjNzA3MDcwO1xuICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDYzJSAxMCUsIDI4JSA2NSUsIDcyJSA5MiUpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMzUlIDE4JSwgNCUgODklLCAxMjAlIDY2JSk7XG4gICAgYW5pbWF0aW9uOiAke3RyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlfSAxMjBzIGVhc2UgaW5maW5pdGU7XG4gICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG5cbi8qIHRyYW5zaXRpb246IDAuNHMgY3ViaWMtYmV6aWVyKDAsIDEsIDAuNjUsIDAuOTQpOyAqL1xuY29uc3QgRnJvbnRJbWFnZVBvbHlnb25EaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAzcHg7XG4gIHJpZ2h0OiAzcHg7XG4gIGJvdHRvbTogM3B4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDYzJSAxMCUsIDI4JSA2NSUsIDcyJSA5MiUpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMzUlIDE4JSwgNCUgODklLCAxMjAlIDY2JSk7XG4gICAgICAgIGFuaW1hdGlvbjogJHt0cmlhbmdsZUFuaW1hdGlvbk1vYmlsZX0gMTIwcyBlYXNlIGluZmluaXRlO1xuICB9XG5gO1xuXG5jb25zdCBGcm9udEltYWdlID0gc3R5bGVkLmltZ2BcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG5gO1xuXG4vKiAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7Ki9cbmNvbnN0IFN1Yk1lbnUgPSBzdHlsZWQuZGl2YFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNjBweDtcbiAgei1pbmRleDogMztcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIHBhZGRpbmc6IDEwcHggMTVweCAxMHB4IDE1cHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGZsZXgtZmxvdzpjb2x1bW47XG4gICAgaGVpZ2h0OiAxODBweDtcbiAgfVxuICB0cmFuc2l0aW9uOiBhbGwgMS4wcztcbmA7XG5cblxuY29uc3QgU3ViTWVudVRpdGxlRGl2ID0gc3R5bGVkLmRpdmBcbiAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gIHdpZHRoOjI1MHB4O1xuICAmOm50aC1vZi10eXBlKDEpe1xuICAgIHRleHQtYWxpZ246bGVmdDtcbiAgfVxuICAmOm50aC1vZi10eXBlKDMpe1xuICAgIHdpZHRoOjMwMHB4O1xuICB9XG4gICY6bnRoLW9mLXR5cGUoNSl7XG4gICAgdGV4dC1hbGlnbjpyaWdodDtcbiAgfVxuICB0ZXh0LXNoYWRvdzogLTFweCAtMXB4IDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMCksMXB4IC0xcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4wKSwtMXB4IDFweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjApLDFweCAxcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4yKTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgaGVpZ2h0OjM4cHg7XG4gICAgJjpudGgtb2YtdHlwZSgxKXtcbiAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIH1cbiAgICAmOm50aC1vZi10eXBlKDMpe1xuICAgICAgd2lkdGg6MjcwcHg7XG4gICAgfVxuICAgICY6bnRoLW9mLXR5cGUoNSl7XG4gICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IFRpdGxlRGl2SHIgPSBzdHlsZWQuZGl2YFxuICBmbGV4LWdyb3c6MTtcbiAgbWFyZ2luLXRvcDogLTIwcHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgYmxhY2s7XG4gICAgbGVmdDo1MCU7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuYDtcblxuY29uc3QgSHJMaW5lID0gc3R5bGVkLmhyYFxuICBib3JkZXI6IG5vbmU7XG4gIGhlaWdodDogMXB4O1xuICAvKiBTZXQgdGhlIGhyIGNvbG9yICovXG4gIGNvbG9yOiBibGFjazsgLyogb2xkIElFICovXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICB9XG5gO1xuXG5jb25zdCBUaXRsZUxpbmsgPSBzdHlsZWQoTGluaylgXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogJHtzdWJNZW51Rm9udFNpemV9O1xuICBmb250LXdlaWdodDo1MDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHBhZGRpbmc6NXB4IDQ1cHggMTVweCA0NXB4O1xuICAmOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuICAmOmFjdGl2ZXtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgcGFkZGluZzogMnB4IDE1cHggMHB4IDE1cHg7XG4gIH1cbmA7XG5cbmNvbnN0IEJsYWNrRGl2ID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZDpibGFjaztcbiAgd2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG5gO1xuXG5jb25zdCBXaGl0ZURpdiA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQ6d2hpdGU7XG4gIHdpZHRoOjEwMCU7XG4gIGhlaWdodDoxMDAlO1xuYDtcblxuY29uc3QgUG9zdFRpdGxlRGl2ID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6MTAwJTtcbiAgcGFkZGluZy1sZWZ0OiA0NXB4O1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIH1cbmA7XG5cbmNvbnN0IFBvc3RUaXRsZSA9IHN0eWxlZC5oMWBcbiAgcG9zaXRpb246YWJzb2x1dGU7XG4gIGJvdHRvbToxLjNlbTtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgZm9udC1zaXplOiAzLjVlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZm9udC1zaXplOiA4dnc7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgfVxuYDtcbmNvbnN0IFBvc3RUaXRsZUNoaW5lc2UgPSBzdHlsZWQuaDFgXG4gIHBvc2l0aW9uOmFic29sdXRlO1xuICBib3R0b206MDtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgZm9udC1zaXplOiAzLjFlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZm9udC1zaXplOiA4dnc7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgfVxuYDtcblxuXG5jb25zdCBWaWRlb1BsYXllck5hdGl2ZSA9IHN0eWxlZC52aWRlb2BcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtYXNwZWN0LXJhdGlvOiAxOTIwLzEwODApIHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLWFzcGVjdC1yYXRpbzogMTkyMC8xMDgwKSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgfVxuYDtcblxuXG5jb25zdCBJbWcgPSBzdHlsZWQuaW1nYFxuICBkaXNwbGF5OmJsb2NrO1xuICBtaW4td2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG4gIG9iamVjdC1maXQ6Y292ZXI7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OjEwMCU7XG4gIH1cbmBcbiJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});/*  mix-blend-mode: difference;*/const SubMenu=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy11\",label:\"SubMenu\"})( false?undefined:{name:\"2l7mm9\",styles:\"text-decoration:none;mix-blend-mode:normal;position:absolute;width:100%;height:60px;z-index:3;display:flex;justify-content:space-between;overflow:hidden;padding:10px 15px 10px 15px;@media(orientation: portrait){flex-flow:column;height:180px;}transition:all 1.0s\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const SubMenuTitleDiv=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy10\",label:\"SubMenuTitleDiv\"})( false?undefined:{name:\"4qjrd3\",styles:\"text-align:center;width:250px;&:nth-of-type(1){text-align:left;}&:nth-of-type(3){width:300px;}&:nth-of-type(5){text-align:right;}text-shadow:-1px -1px 0px rgba(255,255,255,0.0),1px -1px 0px rgba(255,255,255,0.0),-1px 1px 0px rgba(255,255,255,0.0),1px 1px 0px rgba(255,255,255,0.2);@media(orientation: portrait){margin:0 auto;height:38px;&:nth-of-type(1){text-align:center;}&:nth-of-type(3){width:270px;}&:nth-of-type(5){text-align:center;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const TitleDivHr=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy9\",label:\"TitleDivHr\"})( false?undefined:{name:\"fd7m1f\",styles:\"flex-grow:1;margin-top:-20px;@media(orientation: portrait){border-left:2px solid black;left:50%;position:relative;margin-top:10px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const HrLine=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"hr\", false?undefined:{target:\"e1649dpy8\",label:\"HrLine\"})( false?undefined:{name:\"ucd7j5\",styles:\"border:none;height:1px;color:black;background-color:black;@media(orientation: portrait){display:none;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const TitleLink=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(_link__WEBPACK_IMPORTED_MODULE_4__[\"default\"], false?undefined:{target:\"e1649dpy7\",label:\"TitleLink\"})(\"text-decoration:none;mix-blend-mode:normal;display:block;font-size:\",subMenuFontSize,\";font-weight:500;white-space:nowrap;padding:5px 45px 15px 45px;&:hover{text-decoration:underline;}&:active{color:white;}@media(orientation: portrait){padding:2px 15px 0px 15px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const BlackDiv=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy6\",label:\"BlackDiv\"})( false?undefined:{name:\"1pno64p\",styles:\"background:black;width:100%;height:100%\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const WhiteDiv=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy5\",label:\"WhiteDiv\"})( false?undefined:{name:\"1vjcoqe\",styles:\"background:white;width:100%;height:100%\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PostTitleDiv=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"e1649dpy4\",label:\"PostTitleDiv\"})( false?undefined:{name:\"zrgzuw\",styles:\"position:relative;height:100%;padding-left:45px;@media(orientation: portrait){padding-left:15px;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9yQitCIiwiZmlsZSI6IkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdCwgR2xvYmFsLCBjc3MsIHN0eWxlZCwga2V5ZnJhbWVzIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIi4uL2xpbmtcIjtcbmltcG9ydCBMb2FkaW5nIGZyb20gXCIuLi9sb2FkaW5nXCI7XG4vL2ltcG9ydCBUZXh0TG9vcCBmcm9tIFwicmVhY3QtdGV4dC1sb29wXCI7XG5pbXBvcnQgeyB1c2VXaW5kb3dTaXplIH0gZnJvbSAnLi4vLi4vaGVscGVycydcbmltcG9ydCB7QW5pbWF0ZWR9IGZyb20gXCJyZWFjdC1hbmltYXRlZC1jc3NcIjtcblxuLy9pbXBvcnQgeyBQbGF5ZXIsIENvbnRyb2xCYXIsIFNob3J0Y3V0IH0gZnJvbSAndmlkZW8tcmVhY3QnO1xuLy9pbXBvcnQgZXh0ZXJuYWxDU1MgZnJvbSBcIi4uL3N0eWxlcy92aWRlby1yZWFjdC5jc3NcIjsgLy8gaW1wb3J0IGNzc1xuLy9pbXBvcnQgeyBWaWRlb1BsYXllciB9IGZyb20gXCIuLi92aWRlby1wbGF5ZXJcIjtcblxuY29uc3Qgc2VjdGlvbkhlaWdodCA9ICdjYWxjKDEwMHZ3IC8gMi4yKSc7XG5jb25zdCBzZWN0aW9uSGVpZ2h0UG9ydHJhaXQgPSAnY2FsYygxMDB2dyAqIDEuNDIpJztcbmxldCBzdWJNZW51VG9wID0gJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKSc7XG5sZXQgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG5cbmxldCBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnYmxhY2snO1xubGV0IHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ2JsYWNrJztcbmxldCBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnYmxhY2snO1xuXG5sZXQgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ3doaXRlJztcbmxldCBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICd3aGl0ZSc7XG5sZXQgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ3doaXRlJztcblxubGV0IG5hbWVUZXh0U2hhZG93T24gPSAnLTFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSwxcHggLTFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksLTFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpOyc7XG5cblxubGV0IGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG5jb25zdCBzdWJNZW51Rm9udFNpemUgPSAnMjBweCc7XG5cbmNvbnN0IFRyaWFuZ2xlTGFuZGluZyA9ICh7IHN0YXRlLCBhY3Rpb25zIH0pID0+IHtcblxuICBsZXQgaXNCaW9QYWdlO1xuICBsZXQgaXNLaW5ldGljc1JvYm90aWNzUGFnZTtcbiAgbGV0IGlzSW50ZXJhY3RpdmVEaWdpdGFsUGFnZTtcbiAgbGV0IGlzVGVjaFJlc2VhcmNoUGFnZTtcbiAgbGV0IGlzUHJvamVjdHNQYWdlO1xuICBsZXQgaXNIb21lUGFnZTtcbiAgbGV0IGlzUG9zdDtcbiAgbGV0IGxhbmRpbmdEYXRhO1xuICBmdW5jdGlvbiBjaGFuZ2VQYWdlKGUpe1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBsYW5kaW5nRGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoZXh0cmFQb3N0TGluayk7XG4gIH1cblxuICBjb25zdCBzaXplID0gdXNlV2luZG93U2l6ZSgpO1xuICBjb25zdCBwID0gXCJsYW5kaW5ncy9cIjtcbiAgY29uc3QgZXh0cmFQb3N0TGluayA9IGAvJHtwfWA7XG4gIGxhbmRpbmdEYXRhID0gc3RhdGUuc291cmNlLmdldChleHRyYVBvc3RMaW5rKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChleHRyYVBvc3RMaW5rKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcblxuICBpc0Jpb1BhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvYmlvLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0tpbmV0aWNzUm9ib3RpY3NQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzL2tpbmV0aWNzLXJvYm90aWNzLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0ludGVyYWN0aXZlRGlnaXRhbFBhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMvaW50ZXJhY3RpdmUtZGlnaXRhbC8nKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNUZWNoUmVzZWFyY2hQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzL3RlY2gtcmVzZWFyY2gvJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzUHJvamVjdHNQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0hvbWVQYWdlID0gKGRhdGEuaXNIb21lKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNQb3N0ID0gKGRhdGEuaXNQb3N0KSA/IHRydWUgOiBmYWxzZTtcblxuICBsZXQgcG9zdFRpdGxlID0gXCJcIjtcbiAgbGV0IHBvc3RUaXRsZUNoaW5lc2UgPSBcIlwiO1xuICBsZXQgcG9zdE1lZGlhID0gXCJcIjtcbiAgbGV0IG1haW5OYW1lID0gXCJcIlxuICBsZXQgZm9yZWdyb3VuZE1lZGlhO1xuICBsZXQgYmFja2dyb3VuZE1lZGlhO1xuXG4gIGlmIChpc1Bvc3QgJiYgZGF0YS5pc1JlYWR5KSB7XG5cbiAgICBjb25zdCBwb3N0ID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gICAgbGV0IGZlYXR1cmVNZWRpYVVSTCA9IHBvc3QuamV0cGFja19mZWF0dXJlZF9tZWRpYV91cmw7XG4gICAgbGV0IG4gPSBmZWF0dXJlTWVkaWFVUkwuaW5kZXhPZignPycpO1xuICAgIGxldCBzcyA9IGZlYXR1cmVNZWRpYVVSTC5zdWJzdHJpbmcoMCwgbiAhPSAtMSA/IG4gOiBmZWF0dXJlTWVkaWFVUkwubGVuZ3RoKTtcbiAgICBwb3N0VGl0bGUgPSBwb3N0LnRpdGxlLnJlbmRlcmVkO1xuICAgIHBvc3RUaXRsZUNoaW5lc2UgPSBwb3N0LmNoaW5lc2VfdGl0bGU7XG4gICAgcG9zdE1lZGlhID0gcG9zdC5iYWNrZ3JvdW5kX21lZGlhLmd1aWQgPyBwb3N0LmJhY2tncm91bmRfbWVkaWEuZ3VpZCA6IHNzO1xuXG4gIH1cblxuXG4gIGlmIChsYW5kaW5nRGF0YS5pc1JlYWR5KSB7XG5cbiAgICBsZXQgbGFuZGluZ1VSTCwgaXRlbTtcbiAgICBpZiAoaXNCaW9QYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvYmlvL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNLaW5ldGljc1JvYm90aWNzUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2tpbmV0aWNzLXJvYm90aWNzL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaW50ZXJhY3RpdmUtZGlnaXRhbC9cIjtcbiAgICB9IGVsc2UgaWYgKGlzVGVjaFJlc2VhcmNoUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL3RlY2gtcmVzZWFyY2gvXCI7XG4gICAgfSBlbHNlIGlmIChpc1Byb2plY3RzUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2tpbmV0aWNzLXJvYm90aWNzL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNIb21lUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2hvbWUvXCI7XG4gICAgfSBlbHNlIGlmIChpc1Bvc3QpIHsgLy9IT01FXG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaG9tZS9cIjsgLy9UT0RPXG4gICAgfSBlbHNlIHtcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9ob21lL1wiOyAvL1RPRE9cbiAgICB9XG4gICAgY29uc29sZS5sb2cobGFuZGluZ1VSTClcbiAgICB2YXIgaXRlbXMgPSBsYW5kaW5nRGF0YS5pdGVtcy5tYXAoKHsgdHlwZSwgaWQsIGxpbmsgfSwgaW5kZXgpID0+IHtcbiAgICAgIGlmIChsaW5rID09PSBsYW5kaW5nVVJMKSB7XG4gICAgICAgIGl0ZW0gPSBzdGF0ZS5zb3VyY2VbdHlwZV1baWRdO1xuICAgICAgfVxuICAgIH0pXG5cbiAgICBjb25zdCBmb3JlZ3JvdW5kQmxhY2tEaXYgPSA8QmxhY2tEaXY+PC9CbGFja0Rpdj47XG4gICAgY29uc3QgYmFja2dyb3VuZFdoaXRlRGl2ID0gPEJhY2tncm91bmRJbWFnZURpdj48V2hpdGVEaXY+PC9XaGl0ZURpdj48L0JhY2tncm91bmRJbWFnZURpdj47XG5cbiAgICBjb25zdCBoYW5kbGVMb2FkZWREYXRhID0gKHR5cGUpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGAke3R5cGV9IHZpZGVvIGxvYWRlZGApO1xuICAgIH07XG4gICAgXG4gICAgY29uc3QgZm9yZWdyb3VuZFZpZGVvID0gaXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdICYmIChcbiAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkfT5cbiAgICAgICAgPFZpZGVvUGxheWVyTmF0aXZlXG4gICAgICAgICAgcGxheXNJbmxpbmVcbiAgICAgICAgICBhdXRvUGxheVxuICAgICAgICAgIG11dGVkXG4gICAgICAgICAgbG9vcFxuICAgICAgICAgIG9uTG9hZGVkRGF0YT17KCkgPT4gaGFuZGxlTG9hZGVkRGF0YShcIkZvcmVncm91bmRcIil9XG4gICAgICAgID5cbiAgICAgICAgICA8c291cmNlXG4gICAgICAgICAgICBzcmM9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkICsgXCIjdD0wLjFcIn1cbiAgICAgICAgICAgIHR5cGU9e1widmlkZW8vbXA0XCJ9XG4gICAgICAgICAgICBrZXk9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvVmlkZW9QbGF5ZXJOYXRpdmU+XG4gICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICk7XG4gICAgY29uc3QgYmFja2dyb3VuZFZpZGVvID0gaXRlbS5iYWNrZ3JvdW5kX21lZGlhWzBdICYmIChcbiAgICAgIDxCYWNrZ3JvdW5kSW1hZ2VEaXY+XG4gICAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkfT5cbiAgICAgICAgICA8VmlkZW9QbGF5ZXJOYXRpdmVcbiAgICAgICAgICAgIHBsYXlzSW5saW5lXG4gICAgICAgICAgICBhdXRvUGxheVxuICAgICAgICAgICAgbXV0ZWRcbiAgICAgICAgICAgIGxvb3BcbiAgICAgICAgICAgIG9uTG9hZGVkRGF0YT17KCkgPT4gaGFuZGxlTG9hZGVkRGF0YShcIkJhY2tncm91bmRcIil9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPHNvdXJjZVxuICAgICAgICAgICAgICBzcmM9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkICsgXCIjdD0wLjFcIn1cbiAgICAgICAgICAgICAgdHlwZT17XCJ2aWRlby9tcDRcIn1cbiAgICAgICAgICAgICAga2V5PXtpdGVtLmJhY2tncm91bmRfbWVkaWFbMF0uZ3VpZH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9WaWRlb1BsYXllck5hdGl2ZT5cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgIDwvQmFja2dyb3VuZEltYWdlRGl2PlxuICAgICk7XG5cbiAgICBpZiAoaXNCaW9QYWdlKSB7XG5cbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRCbGFja0RpdjtcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcblxuICAgICAgc3ViTWVudVRvcCA9ICctMTAwcHgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAwO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuICAgICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNIb21lUGFnZSkge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kVmlkZW87XG5cbiAgICAgIHN1Yk1lbnVUb3AgPSAoc2l6ZS53aWR0aCA8PSA5MDAgJiYgaXNIb21lUGFnZSA/ICctMTAwcHgnIDogJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKScpO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAoc2l6ZS53aWR0aCA8PSA5MDAgJiYgaXNIb21lUGFnZSA/IDAgOiAxLjApO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEFuaW1hdGVkIGFuaW1hdGlvbkluPVwiZmFkZUluXCIgYW5pbWF0aW9uSW5EdXJhdGlvbj17NTAwMH0gYW5pbWF0aW9uSW5EZWxheT17MH0gYW5pbWF0aW9uT3V0PVwiZmFkZU91dFwiIGlzVmlzaWJsZT17dHJ1ZX0+PEJnSDFTcGFuPlRISU5HUyBUSEFUIE1PVkU8L0JnSDFTcGFuPjwvQW5pbWF0ZWQ+PC9NeU5hbWU+O1xuXG4gICAgICAvKlxuICAgICAgICBjb25zdCBwbGF5ZXJPcHRpb25zID0ge1xuICAgICAgICBzb3VyY2VzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc3JjOiBpdGVtLmZvcmVncm91bmRfbWVkaWFbMF0uZ3VpZFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGxvb3A6IHRydWUsXG4gICAgICAgIHByZWxvYWQ6IFwiYXV0b1wiXG4gICAgICAgIH07XG4gICAgICAqL1xuXG4gICAgfSBlbHNlIGlmIChpc1Bvc3QpIHtcblxuICAgICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kQmxhY2tEaXY7XG5cbiAgICAgICAgdmFyIGltZ3MgPVtcImpwZ1wiLCBcImpwZWdcIiwgXCJnaWZcIiwgXCJ0aWZmXCIsIFwicG5nXCIsIFwid2VicFwiXTtcbiAgICAgICAgdmFyIHZpZHMgPSBbXCJtcDRcIiwgXCJ3ZWJtXCJdO1xuXG4gICAgICAgIGlmKCBpbWdzLmluZGV4T2YocG9zdE1lZGlhLnNwbGl0KCcuJykucG9wKCkpID49IDAgKVxuICAgICAgICB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kTWVkaWEgPSA8QmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjxJbWcgc3JjPXtwb3N0TWVkaWF9IGFsdD17cG9zdFRpdGxlfSAvPjwvQmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjtcbiAgICAgICAgfSBlbHNlIGlmICggdmlkcy5pbmRleE9mKHBvc3RNZWRpYS5zcGxpdCgnLicpLnBvcCgpKSA+PSAwIClcbiAgICAgICAge1xuICAgICAgICAgICAgYmFja2dyb3VuZE1lZGlhID0gPEJhY2tncm91bmRJbWFnZURpdkRhcmtlbj48UmVhY3QuRnJhZ21lbnQga2V5PXtwb3N0TWVkaWF9PjxWaWRlb1BsYXllck5hdGl2ZSBwbGF5c0lubGluZT17dHJ1ZX0gYXV0b1BsYXk9e3RydWV9IG11dGVkPXt0cnVlfSBsb29wPXt0cnVlfSA+XG4gICAgICAgICAgICAgIDxzb3VyY2Ugc3JjPXtwb3N0TWVkaWF9IHR5cGU9XCJ2aWRlby9tcDRcIiAvPlxuICAgICAgICAgICAgICA8L1ZpZGVvUGxheWVyTmF0aXZlPjwvUmVhY3QuRnJhZ21lbnQ+PC9CYWNrZ3JvdW5kSW1hZ2VEaXZEYXJrZW4+O1xuICAgICAgICB9XG5cbiAgICAvLyAgc3ViTWVudVRvcCA9ICctMTAwcHgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAwO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcbiAgICB9IGVsc2UgaWYgKGlzS2luZXRpY3NSb2JvdGljc1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ3doaXRlJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0VGVjaCA9ICdibGFjayc7XG4gICAgICBmcm9udEltYWdlT3BhY2l0eSA9IDEuMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3BhbiBjc3M9e2Nzc2Bjb2xvcjpCbGFjazt0ZXh0LXNoYWRvdzoke25hbWVUZXh0U2hhZG93T259YH0+UGh5c2ljYWw8L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcblxuICAgIH0gZWxzZSBpZiAoaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlKSB7XG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJzEwdmgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnd2hpdGUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT5EaWdpdGFsPC9CZ0gxU3Bhbj48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfSBlbHNlIGlmIChpc1RlY2hSZXNlYXJjaFBhZ2UpIHtcbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRWaWRlbztcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcbiAgICAgIHN1Yk1lbnVUb3AgPSAnMTB2aCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDEuMDtcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnd2hpdGUnO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4gY3NzPXtjc3NgY29sb3I6QmxhY2s7dGV4dC1zaGFkb3c6JHtuYW1lVGV4dFNoYWRvd09ufWB9PkFydCBhbmQgVGVjaG5vbG9neTwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNQcm9qZWN0c1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT48L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcblxuICAgIH1cbiAgICBlbHNlIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZEJsYWNrRGl2O1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICdjYWxjKCcgKyBzZWN0aW9uSGVpZ2h0ICsgJyAtIDh2aCknO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4+VEhJTkdTIFRIQVQgTU9WRTwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH1cblxuICB9XG5cbiAgcmV0dXJuICg8VHJpYW5nbGVTZWN0aW9uIGNsYXNzTmFtZT1cImNvbnRhaW5lclwiID5cblxuICAgIDxUZXh0TG9vcERpdj5cbiAgICAgICAgey8qPFRoaW5nc1RoYXRNb3ZlPlRISU5HUyBUSEFUIE1PVkU8L1RoaW5nc1RoYXRNb3ZlPiovfVxuICAgICAgICB7bWFpbk5hbWV9XG4gICAgPC9UZXh0TG9vcERpdj5cblxuICAgIDxQb3N0VGl0bGVEaXY+PFBvc3RUaXRsZT57cG9zdFRpdGxlfTwvUG9zdFRpdGxlPjxQb3N0VGl0bGVDaGluZXNlPntwb3N0VGl0bGVDaGluZXNlfTwvUG9zdFRpdGxlQ2hpbmVzZT48L1Bvc3RUaXRsZURpdj5cblxuICAgIDxOdW1iZXJzRGVjbyBjc3M9e2lzSG9tZVBhZ2UgfHwgaXNUZWNoUmVzZWFyY2hQYWdlID8gY3NzYG9wYWNpdHk6IDE7YDpjc3Ngb3BhY2l0eTogMDtgfT48c3Bhbj4wMTwvc3Bhbj48c3Bhbj4wMjwvc3Bhbj48c3Bhbj4wMzwvc3Bhbj48c3Bhbj4wNDwvc3Bhbj48c3Bhbj4wNTwvc3Bhbj48c3Bhbj4wNjwvc3Bhbj48c3Bhbj4wNzwvc3Bhbj48c3Bhbj4wODwvc3Bhbj48c3Bhbj4wOTwvc3Bhbj48c3Bhbj4xMDwvc3Bhbj48L051bWJlcnNEZWNvPlxuICAgIDxNeU5hbWVCb3R0b21MaW5lPjwvTXlOYW1lQm90dG9tTGluZT5cbiAgICA8RGVjb0NpcmNsZT48L0RlY29DaXJjbGU+XG4gICAgey8qY3NzPXtjc3NgYmFja2dyb3VuZDogJHtzdWJNZW51QWN0aXZlQmFja2dyb3VuZH07YH0qL31cblxuICAgIDxTdWJNZW51IGNzcz17Y3NzYHRvcDogJHtzdWJNZW51VG9wfTsgb3BhY2l0eTogJHtzdWJNZW51T3BhY2l0eX1gfT5cbiAgICAgIDxTdWJNZW51VGl0bGVEaXYgY3NzPXtjc3NgYmFja2dyb3VuZDogJHtzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmt9O2B9PjxUaXRsZUxpbmsgY3NzPXtjc3NgY29sb3I6ICR7c3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrfTtgfSBsaW5rPVwiL2NhdGVnb3J5L3Byb2plY3RzL2tpbmV0aWNzLXJvYm90aWNzXCIgb25DbGljaz17ZSA9PiBjaGFuZ2VQYWdlKGUpfT5LaW5ldGljcyBhbmQgUm9ib3RpY3M8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICAgIDxUaXRsZURpdkhyPjxIckxpbmU+PC9IckxpbmU+PC9UaXRsZURpdkhyPlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWdufTtgfT48VGl0bGVMaW5rIGNzcz17Y3NzYGNvbG9yOiAke3N1Yk1lbnVBY3RpdmVUZXh0RGVzaWdufTtgfSBsaW5rPVwiL2NhdGVnb3J5L3Byb2plY3RzL2ludGVyYWN0aXZlLWRpZ2l0YWxcIiBvbkNsaWNrPXtlID0+IGNoYW5nZVBhZ2UoZSl9PkludGVyYXRpdmUgYW5kIERpZ2l0YWw8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICAgIDxUaXRsZURpdkhyPjxIckxpbmU+PC9IckxpbmU+PC9UaXRsZURpdkhyPlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaH07YH0+PFRpdGxlTGluayBjc3M9e2Nzc2Bjb2xvcjogJHtzdWJNZW51QWN0aXZlVGV4dFRlY2h9O2B9IGxpbms9XCIvY2F0ZWdvcnkvcHJvamVjdHMvdGVjaC1yZXNlYXJjaFwiIG9uQ2xpY2s9e2UgPT4gY2hhbmdlUGFnZShlKX0+VGVjaCBhbmQgUmVzZWFyY2g8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICA8L1N1Yk1lbnU+XG4gICAgPEZyb250SW1hZ2VEaXYgY3NzPXtjc3Ngb3BhY2l0eTogJHtmcm9udEltYWdlT3BhY2l0eX07YH0+XG4gICAgICA8RnJvbnRJbWFnZVBvbHlnb25PdXREaXY+XG4gICAgICAgIDxBbmltYXRlZCBhbmltYXRpb25Jbj1cImZhZGVJblwiIGFuaW1hdGlvbkluRHVyYXRpb249ezQwMDB9IGFuaW1hdGlvbkluRGVsYXk9ezIwMDB9IGFuaW1hdGlvbk91dD1cImZhZGVPdXRcIiBpc1Zpc2libGU9e3RydWV9PlxuICAgICAgICA8RnJvbnRJbWFnZVBvbHlnb25EaXYgPlxuICAgICAgICAgIHtmb3JlZ3JvdW5kTWVkaWF9XG4gICAgICAgIDwvRnJvbnRJbWFnZVBvbHlnb25EaXY+XG4gICAgICAgIDwvQW5pbWF0ZWQ+XG4gICAgICA8L0Zyb250SW1hZ2VQb2x5Z29uT3V0RGl2PlxuICAgIDwvRnJvbnRJbWFnZURpdj5cbiAgICB7YmFja2dyb3VuZE1lZGlhfVxuICA8L1RyaWFuZ2xlU2VjdGlvbj5cbiAgKTtcblxufVxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFRyaWFuZ2xlTGFuZGluZyk7XG5cbmNvbnN0IFRyaWFuZ2xlU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICAgIGhlaWdodDogJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9O1xuICB9XG5gO1xuY29uc3QgVGV4dExvb3BEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICB0b3A6MDtcbiAgbGVmdDowO1xuICB3aWR0aDoxMDAlO1xuICB6LWluZGV4OjM7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbiAgJiBkaXZ7XG4gICAgJiBkaXZ7XG4gICAgICB3aWR0aDoxMDB2dztcbiAgICB9XG4gIH1cbmBcblxuLypcbnRleHQtc2hhZG93OlxuIC0xcHggLTFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksXG4gIDFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSxcbiAgLTFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLFxuICAgMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyk7XG4qL1xuXG5jb25zdCBNeU5hbWUgPSBzdHlsZWQuaDFgXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LWZhbWlseTogXCJBcmNoaXYgR3JvdGVza1wiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiSGVsdmV0aWNhIE5ldWVcIixcbiAgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDcuNXZ3O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHotaW5kZXg6MztcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3Z3O1xuICBtaXgtYmxlbmQtbW9kZTogbm9ybWFsO1xuICBkaXNwbGF5OmZsZXg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTUuNXZ3O1xuICAgIHBhZGRpbmctdG9wOjE1MHB4O1xuICB9XG5gO1xuXG5cblxuY29uc3QgQmdIMVNwYW4gPSBzdHlsZWQuZGl2YFxucGFkZGluZzogMCA1MHB4O1xudHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICBwYWRkaW5nOiAwIDA7XG4gIH1cbmBcblxuY29uc3QgTnVtYmVyc0RlY28gPSBzdHlsZWQuc3BhbmBcbiAgY29sb3I6IzcwNzA3MDtcbiAgd2lkdGg6MTAwJTtcbiAgei1pbmRleDoxO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC4yMik7XG4gIGRpc3BsYXk6ZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGZsZXgtd3JhcDogbm93cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMS4wcztcbiAgJiBzcGFue1xuICAgIGZvbnQtd2VpZ2h0OjIwMDtcbiAgfVxuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBkaXNwbGF5Om5vbmU7XG4gICAgICB0b3A6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC4zNSk7XG4gIH1cbmBcblxuY29uc3QgTXlOYW1lQm90dG9tTGluZSA9IHN0eWxlZC5zcGFuYFxuICBib3JkZXItYm90dG9tOiAxcHggIzcwNzA3MCBzb2xpZDtcbiAgd2lkdGg6MTAwJTtcbiAgei1pbmRleDoyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC43NSk7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgICAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuODApO1xuICB9XG5gXG5cbmNvbnN0IGNpcmNsZUFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMzMlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgyMCUsLTEwJSkgc2NhbGUoMS4yKTtcbiAgfVxuICA2NiUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0yMCUsMTAlKSBzY2FsZSgwLjgpO1xuICB9XG5gXG5cbmNvbnN0IERlY29DaXJjbGUgPSBzdHlsZWQuc3BhbmBcbiAgYm9yZGVyOiAxcHggIzcwNzA3MCBzb2xpZDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB3aWR0aDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC42KTtcbiAgaGVpZ2h0OiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjYpO1xuICB6LWluZGV4OiAyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC4yMCk7XG4gIGxlZnQ6OCU7XG4gIGFuaW1hdGlvbjogJHtjaXJjbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBAbWVkaWEob3JpZW50YXRpb246cG9ydHJhaXQpe1xuICAgIHdpZHRoOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuNCk7XG4gICAgaGVpZ2h0OiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuNCk7XG4gICAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuMjIpO1xuICB9XG5gXG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZURpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgICY6YWZ0ZXJ7XG4gICAgICBjb250ZW50OicnO1xuICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICB3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTtcbiAgICAgIHRvcDowOyBsZWZ0OjA7XG4gICAgICBiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC42KTtcbiAgICAgIG9wYWNpdHk6MDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgIH1cbmA7XG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZURpdkRhcmtlbiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgICY6YWZ0ZXJ7XG4gICAgICBjb250ZW50OicnO1xuICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICB3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTtcbiAgICAgIHRvcDowOyBsZWZ0OjA7XG4gICAgICBiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC42KTtcbiAgICAgIG9wYWNpdHk6MTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgIH1cbmA7XG5cblxuXG5jb25zdCBCYWNrZ3JvdW5kSW1hZ2UgPSBzdHlsZWQuaW1nYFxuICBtaW4td2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG5gO1xuXG5cbmNvbnN0IEZyb250SW1hZ2VEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICB0b3A6MDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG4vKi8vaHR0cHM6Ly9iZW5uZXR0ZmVlbHkuY29tL2NsaXBweS8qL1xuY29uc3QgdHJpYW5nbGVBbmltYXRpb24gPSBrZXlmcmFtZXNgXG4gIDMzJSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDUwJSAxNSUsIDMxJSA4OCUsIDc3JSA2MCUpO1xuICB9XG4gIDY2JSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDcyJSAxOSUsIDI5JSAzOSUsIDYwJSA5NCUpO1xuICB9XG5gXG5cbmNvbnN0IHRyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlID0ga2V5ZnJhbWVzYFxuICAzMyUge1xuICAgIGNsaXAtcGF0aDogcG9seWdvbig3MyUgMTMlLCA4JSA1OCUsIDk1JSA5MSUpO1xuICB9XG4gIDY2JSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDEwMCUgMTklLCAwIDM3JSwgNTklIDg2JSk7XG4gIH1cbmBcblxuY29uc3QgRnJvbnRJbWFnZVBvbHlnb25PdXREaXYgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBiYWNrZ3JvdW5kOiAjNzA3MDcwO1xuICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDYzJSAxMCUsIDI4JSA2NSUsIDcyJSA5MiUpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMzUlIDE4JSwgNCUgODklLCAxMjAlIDY2JSk7XG4gICAgYW5pbWF0aW9uOiAke3RyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlfSAxMjBzIGVhc2UgaW5maW5pdGU7XG4gICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG5cbi8qIHRyYW5zaXRpb246IDAuNHMgY3ViaWMtYmV6aWVyKDAsIDEsIDAuNjUsIDAuOTQpOyAqL1xuY29uc3QgRnJvbnRJbWFnZVBvbHlnb25EaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAzcHg7XG4gIHJpZ2h0OiAzcHg7XG4gIGJvdHRvbTogM3B4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDYzJSAxMCUsIDI4JSA2NSUsIDcyJSA5MiUpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMzUlIDE4JSwgNCUgODklLCAxMjAlIDY2JSk7XG4gICAgICAgIGFuaW1hdGlvbjogJHt0cmlhbmdsZUFuaW1hdGlvbk1vYmlsZX0gMTIwcyBlYXNlIGluZmluaXRlO1xuICB9XG5gO1xuXG5jb25zdCBGcm9udEltYWdlID0gc3R5bGVkLmltZ2BcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG5gO1xuXG4vKiAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7Ki9cbmNvbnN0IFN1Yk1lbnUgPSBzdHlsZWQuZGl2YFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNjBweDtcbiAgei1pbmRleDogMztcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIHBhZGRpbmc6IDEwcHggMTVweCAxMHB4IDE1cHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGZsZXgtZmxvdzpjb2x1bW47XG4gICAgaGVpZ2h0OiAxODBweDtcbiAgfVxuICB0cmFuc2l0aW9uOiBhbGwgMS4wcztcbmA7XG5cblxuY29uc3QgU3ViTWVudVRpdGxlRGl2ID0gc3R5bGVkLmRpdmBcbiAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gIHdpZHRoOjI1MHB4O1xuICAmOm50aC1vZi10eXBlKDEpe1xuICAgIHRleHQtYWxpZ246bGVmdDtcbiAgfVxuICAmOm50aC1vZi10eXBlKDMpe1xuICAgIHdpZHRoOjMwMHB4O1xuICB9XG4gICY6bnRoLW9mLXR5cGUoNSl7XG4gICAgdGV4dC1hbGlnbjpyaWdodDtcbiAgfVxuICB0ZXh0LXNoYWRvdzogLTFweCAtMXB4IDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMCksMXB4IC0xcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4wKSwtMXB4IDFweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjApLDFweCAxcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4yKTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgaGVpZ2h0OjM4cHg7XG4gICAgJjpudGgtb2YtdHlwZSgxKXtcbiAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIH1cbiAgICAmOm50aC1vZi10eXBlKDMpe1xuICAgICAgd2lkdGg6MjcwcHg7XG4gICAgfVxuICAgICY6bnRoLW9mLXR5cGUoNSl7XG4gICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IFRpdGxlRGl2SHIgPSBzdHlsZWQuZGl2YFxuICBmbGV4LWdyb3c6MTtcbiAgbWFyZ2luLXRvcDogLTIwcHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgYmxhY2s7XG4gICAgbGVmdDo1MCU7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuYDtcblxuY29uc3QgSHJMaW5lID0gc3R5bGVkLmhyYFxuICBib3JkZXI6IG5vbmU7XG4gIGhlaWdodDogMXB4O1xuICAvKiBTZXQgdGhlIGhyIGNvbG9yICovXG4gIGNvbG9yOiBibGFjazsgLyogb2xkIElFICovXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICB9XG5gO1xuXG5jb25zdCBUaXRsZUxpbmsgPSBzdHlsZWQoTGluaylgXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogJHtzdWJNZW51Rm9udFNpemV9O1xuICBmb250LXdlaWdodDo1MDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHBhZGRpbmc6NXB4IDQ1cHggMTVweCA0NXB4O1xuICAmOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuICAmOmFjdGl2ZXtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgcGFkZGluZzogMnB4IDE1cHggMHB4IDE1cHg7XG4gIH1cbmA7XG5cbmNvbnN0IEJsYWNrRGl2ID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZDpibGFjaztcbiAgd2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG5gO1xuXG5jb25zdCBXaGl0ZURpdiA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQ6d2hpdGU7XG4gIHdpZHRoOjEwMCU7XG4gIGhlaWdodDoxMDAlO1xuYDtcblxuY29uc3QgUG9zdFRpdGxlRGl2ID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6MTAwJTtcbiAgcGFkZGluZy1sZWZ0OiA0NXB4O1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIH1cbmA7XG5cbmNvbnN0IFBvc3RUaXRsZSA9IHN0eWxlZC5oMWBcbiAgcG9zaXRpb246YWJzb2x1dGU7XG4gIGJvdHRvbToxLjNlbTtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgZm9udC1zaXplOiAzLjVlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZm9udC1zaXplOiA4dnc7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgfVxuYDtcbmNvbnN0IFBvc3RUaXRsZUNoaW5lc2UgPSBzdHlsZWQuaDFgXG4gIHBvc2l0aW9uOmFic29sdXRlO1xuICBib3R0b206MDtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgZm9udC1zaXplOiAzLjFlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZm9udC1zaXplOiA4dnc7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgfVxuYDtcblxuXG5jb25zdCBWaWRlb1BsYXllck5hdGl2ZSA9IHN0eWxlZC52aWRlb2BcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtYXNwZWN0LXJhdGlvOiAxOTIwLzEwODApIHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLWFzcGVjdC1yYXRpbzogMTkyMC8xMDgwKSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgfVxuYDtcblxuXG5jb25zdCBJbWcgPSBzdHlsZWQuaW1nYFxuICBkaXNwbGF5OmJsb2NrO1xuICBtaW4td2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG4gIG9iamVjdC1maXQ6Y292ZXI7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OjEwMCU7XG4gIH1cbmBcbiJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PostTitle=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"h1\", false?undefined:{target:\"e1649dpy3\",label:\"PostTitle\"})( false?undefined:{name:\"1dx11mo\",styles:\"position:absolute;bottom:1.3em;color:white;text-transform:none;font-size:3.5em;letter-spacing:0.01em;@media(orientation: portrait){font-size:8vw;letter-spacing:0.01em;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PostTitleChinese=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"h1\", false?undefined:{target:\"e1649dpy2\",label:\"PostTitleChinese\"})( false?undefined:{name:\"w9qqt4\",styles:\"position:absolute;bottom:0;color:white;text-transform:none;font-size:3.1em;letter-spacing:0.01em;@media(orientation: portrait){font-size:8vw;letter-spacing:0.01em;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlzQmtDIiwiZmlsZSI6IkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdCwgR2xvYmFsLCBjc3MsIHN0eWxlZCwga2V5ZnJhbWVzIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIi4uL2xpbmtcIjtcbmltcG9ydCBMb2FkaW5nIGZyb20gXCIuLi9sb2FkaW5nXCI7XG4vL2ltcG9ydCBUZXh0TG9vcCBmcm9tIFwicmVhY3QtdGV4dC1sb29wXCI7XG5pbXBvcnQgeyB1c2VXaW5kb3dTaXplIH0gZnJvbSAnLi4vLi4vaGVscGVycydcbmltcG9ydCB7QW5pbWF0ZWR9IGZyb20gXCJyZWFjdC1hbmltYXRlZC1jc3NcIjtcblxuLy9pbXBvcnQgeyBQbGF5ZXIsIENvbnRyb2xCYXIsIFNob3J0Y3V0IH0gZnJvbSAndmlkZW8tcmVhY3QnO1xuLy9pbXBvcnQgZXh0ZXJuYWxDU1MgZnJvbSBcIi4uL3N0eWxlcy92aWRlby1yZWFjdC5jc3NcIjsgLy8gaW1wb3J0IGNzc1xuLy9pbXBvcnQgeyBWaWRlb1BsYXllciB9IGZyb20gXCIuLi92aWRlby1wbGF5ZXJcIjtcblxuY29uc3Qgc2VjdGlvbkhlaWdodCA9ICdjYWxjKDEwMHZ3IC8gMi4yKSc7XG5jb25zdCBzZWN0aW9uSGVpZ2h0UG9ydHJhaXQgPSAnY2FsYygxMDB2dyAqIDEuNDIpJztcbmxldCBzdWJNZW51VG9wID0gJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKSc7XG5sZXQgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG5cbmxldCBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnYmxhY2snO1xubGV0IHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ2JsYWNrJztcbmxldCBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnYmxhY2snO1xuXG5sZXQgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ3doaXRlJztcbmxldCBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICd3aGl0ZSc7XG5sZXQgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ3doaXRlJztcblxubGV0IG5hbWVUZXh0U2hhZG93T24gPSAnLTFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSwxcHggLTFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksLTFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpOyc7XG5cblxubGV0IGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG5jb25zdCBzdWJNZW51Rm9udFNpemUgPSAnMjBweCc7XG5cbmNvbnN0IFRyaWFuZ2xlTGFuZGluZyA9ICh7IHN0YXRlLCBhY3Rpb25zIH0pID0+IHtcblxuICBsZXQgaXNCaW9QYWdlO1xuICBsZXQgaXNLaW5ldGljc1JvYm90aWNzUGFnZTtcbiAgbGV0IGlzSW50ZXJhY3RpdmVEaWdpdGFsUGFnZTtcbiAgbGV0IGlzVGVjaFJlc2VhcmNoUGFnZTtcbiAgbGV0IGlzUHJvamVjdHNQYWdlO1xuICBsZXQgaXNIb21lUGFnZTtcbiAgbGV0IGlzUG9zdDtcbiAgbGV0IGxhbmRpbmdEYXRhO1xuICBmdW5jdGlvbiBjaGFuZ2VQYWdlKGUpe1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBsYW5kaW5nRGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoZXh0cmFQb3N0TGluayk7XG4gIH1cblxuICBjb25zdCBzaXplID0gdXNlV2luZG93U2l6ZSgpO1xuICBjb25zdCBwID0gXCJsYW5kaW5ncy9cIjtcbiAgY29uc3QgZXh0cmFQb3N0TGluayA9IGAvJHtwfWA7XG4gIGxhbmRpbmdEYXRhID0gc3RhdGUuc291cmNlLmdldChleHRyYVBvc3RMaW5rKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChleHRyYVBvc3RMaW5rKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcblxuICBpc0Jpb1BhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvYmlvLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0tpbmV0aWNzUm9ib3RpY3NQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzL2tpbmV0aWNzLXJvYm90aWNzLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0ludGVyYWN0aXZlRGlnaXRhbFBhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMvaW50ZXJhY3RpdmUtZGlnaXRhbC8nKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNUZWNoUmVzZWFyY2hQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzL3RlY2gtcmVzZWFyY2gvJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzUHJvamVjdHNQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0hvbWVQYWdlID0gKGRhdGEuaXNIb21lKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNQb3N0ID0gKGRhdGEuaXNQb3N0KSA/IHRydWUgOiBmYWxzZTtcblxuICBsZXQgcG9zdFRpdGxlID0gXCJcIjtcbiAgbGV0IHBvc3RUaXRsZUNoaW5lc2UgPSBcIlwiO1xuICBsZXQgcG9zdE1lZGlhID0gXCJcIjtcbiAgbGV0IG1haW5OYW1lID0gXCJcIlxuICBsZXQgZm9yZWdyb3VuZE1lZGlhO1xuICBsZXQgYmFja2dyb3VuZE1lZGlhO1xuXG4gIGlmIChpc1Bvc3QgJiYgZGF0YS5pc1JlYWR5KSB7XG5cbiAgICBjb25zdCBwb3N0ID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gICAgbGV0IGZlYXR1cmVNZWRpYVVSTCA9IHBvc3QuamV0cGFja19mZWF0dXJlZF9tZWRpYV91cmw7XG4gICAgbGV0IG4gPSBmZWF0dXJlTWVkaWFVUkwuaW5kZXhPZignPycpO1xuICAgIGxldCBzcyA9IGZlYXR1cmVNZWRpYVVSTC5zdWJzdHJpbmcoMCwgbiAhPSAtMSA/IG4gOiBmZWF0dXJlTWVkaWFVUkwubGVuZ3RoKTtcbiAgICBwb3N0VGl0bGUgPSBwb3N0LnRpdGxlLnJlbmRlcmVkO1xuICAgIHBvc3RUaXRsZUNoaW5lc2UgPSBwb3N0LmNoaW5lc2VfdGl0bGU7XG4gICAgcG9zdE1lZGlhID0gcG9zdC5iYWNrZ3JvdW5kX21lZGlhLmd1aWQgPyBwb3N0LmJhY2tncm91bmRfbWVkaWEuZ3VpZCA6IHNzO1xuXG4gIH1cblxuXG4gIGlmIChsYW5kaW5nRGF0YS5pc1JlYWR5KSB7XG5cbiAgICBsZXQgbGFuZGluZ1VSTCwgaXRlbTtcbiAgICBpZiAoaXNCaW9QYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvYmlvL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNLaW5ldGljc1JvYm90aWNzUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2tpbmV0aWNzLXJvYm90aWNzL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaW50ZXJhY3RpdmUtZGlnaXRhbC9cIjtcbiAgICB9IGVsc2UgaWYgKGlzVGVjaFJlc2VhcmNoUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL3RlY2gtcmVzZWFyY2gvXCI7XG4gICAgfSBlbHNlIGlmIChpc1Byb2plY3RzUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2tpbmV0aWNzLXJvYm90aWNzL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNIb21lUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2hvbWUvXCI7XG4gICAgfSBlbHNlIGlmIChpc1Bvc3QpIHsgLy9IT01FXG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaG9tZS9cIjsgLy9UT0RPXG4gICAgfSBlbHNlIHtcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9ob21lL1wiOyAvL1RPRE9cbiAgICB9XG4gICAgY29uc29sZS5sb2cobGFuZGluZ1VSTClcbiAgICB2YXIgaXRlbXMgPSBsYW5kaW5nRGF0YS5pdGVtcy5tYXAoKHsgdHlwZSwgaWQsIGxpbmsgfSwgaW5kZXgpID0+IHtcbiAgICAgIGlmIChsaW5rID09PSBsYW5kaW5nVVJMKSB7XG4gICAgICAgIGl0ZW0gPSBzdGF0ZS5zb3VyY2VbdHlwZV1baWRdO1xuICAgICAgfVxuICAgIH0pXG5cbiAgICBjb25zdCBmb3JlZ3JvdW5kQmxhY2tEaXYgPSA8QmxhY2tEaXY+PC9CbGFja0Rpdj47XG4gICAgY29uc3QgYmFja2dyb3VuZFdoaXRlRGl2ID0gPEJhY2tncm91bmRJbWFnZURpdj48V2hpdGVEaXY+PC9XaGl0ZURpdj48L0JhY2tncm91bmRJbWFnZURpdj47XG5cbiAgICBjb25zdCBoYW5kbGVMb2FkZWREYXRhID0gKHR5cGUpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGAke3R5cGV9IHZpZGVvIGxvYWRlZGApO1xuICAgIH07XG4gICAgXG4gICAgY29uc3QgZm9yZWdyb3VuZFZpZGVvID0gaXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdICYmIChcbiAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkfT5cbiAgICAgICAgPFZpZGVvUGxheWVyTmF0aXZlXG4gICAgICAgICAgcGxheXNJbmxpbmVcbiAgICAgICAgICBhdXRvUGxheVxuICAgICAgICAgIG11dGVkXG4gICAgICAgICAgbG9vcFxuICAgICAgICAgIG9uTG9hZGVkRGF0YT17KCkgPT4gaGFuZGxlTG9hZGVkRGF0YShcIkZvcmVncm91bmRcIil9XG4gICAgICAgID5cbiAgICAgICAgICA8c291cmNlXG4gICAgICAgICAgICBzcmM9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkICsgXCIjdD0wLjFcIn1cbiAgICAgICAgICAgIHR5cGU9e1widmlkZW8vbXA0XCJ9XG4gICAgICAgICAgICBrZXk9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvVmlkZW9QbGF5ZXJOYXRpdmU+XG4gICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICk7XG4gICAgY29uc3QgYmFja2dyb3VuZFZpZGVvID0gaXRlbS5iYWNrZ3JvdW5kX21lZGlhWzBdICYmIChcbiAgICAgIDxCYWNrZ3JvdW5kSW1hZ2VEaXY+XG4gICAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkfT5cbiAgICAgICAgICA8VmlkZW9QbGF5ZXJOYXRpdmVcbiAgICAgICAgICAgIHBsYXlzSW5saW5lXG4gICAgICAgICAgICBhdXRvUGxheVxuICAgICAgICAgICAgbXV0ZWRcbiAgICAgICAgICAgIGxvb3BcbiAgICAgICAgICAgIG9uTG9hZGVkRGF0YT17KCkgPT4gaGFuZGxlTG9hZGVkRGF0YShcIkJhY2tncm91bmRcIil9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPHNvdXJjZVxuICAgICAgICAgICAgICBzcmM9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkICsgXCIjdD0wLjFcIn1cbiAgICAgICAgICAgICAgdHlwZT17XCJ2aWRlby9tcDRcIn1cbiAgICAgICAgICAgICAga2V5PXtpdGVtLmJhY2tncm91bmRfbWVkaWFbMF0uZ3VpZH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9WaWRlb1BsYXllck5hdGl2ZT5cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgIDwvQmFja2dyb3VuZEltYWdlRGl2PlxuICAgICk7XG5cbiAgICBpZiAoaXNCaW9QYWdlKSB7XG5cbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRCbGFja0RpdjtcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcblxuICAgICAgc3ViTWVudVRvcCA9ICctMTAwcHgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAwO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuICAgICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNIb21lUGFnZSkge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kVmlkZW87XG5cbiAgICAgIHN1Yk1lbnVUb3AgPSAoc2l6ZS53aWR0aCA8PSA5MDAgJiYgaXNIb21lUGFnZSA/ICctMTAwcHgnIDogJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKScpO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAoc2l6ZS53aWR0aCA8PSA5MDAgJiYgaXNIb21lUGFnZSA/IDAgOiAxLjApO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEFuaW1hdGVkIGFuaW1hdGlvbkluPVwiZmFkZUluXCIgYW5pbWF0aW9uSW5EdXJhdGlvbj17NTAwMH0gYW5pbWF0aW9uSW5EZWxheT17MH0gYW5pbWF0aW9uT3V0PVwiZmFkZU91dFwiIGlzVmlzaWJsZT17dHJ1ZX0+PEJnSDFTcGFuPlRISU5HUyBUSEFUIE1PVkU8L0JnSDFTcGFuPjwvQW5pbWF0ZWQ+PC9NeU5hbWU+O1xuXG4gICAgICAvKlxuICAgICAgICBjb25zdCBwbGF5ZXJPcHRpb25zID0ge1xuICAgICAgICBzb3VyY2VzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc3JjOiBpdGVtLmZvcmVncm91bmRfbWVkaWFbMF0uZ3VpZFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGxvb3A6IHRydWUsXG4gICAgICAgIHByZWxvYWQ6IFwiYXV0b1wiXG4gICAgICAgIH07XG4gICAgICAqL1xuXG4gICAgfSBlbHNlIGlmIChpc1Bvc3QpIHtcblxuICAgICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kQmxhY2tEaXY7XG5cbiAgICAgICAgdmFyIGltZ3MgPVtcImpwZ1wiLCBcImpwZWdcIiwgXCJnaWZcIiwgXCJ0aWZmXCIsIFwicG5nXCIsIFwid2VicFwiXTtcbiAgICAgICAgdmFyIHZpZHMgPSBbXCJtcDRcIiwgXCJ3ZWJtXCJdO1xuXG4gICAgICAgIGlmKCBpbWdzLmluZGV4T2YocG9zdE1lZGlhLnNwbGl0KCcuJykucG9wKCkpID49IDAgKVxuICAgICAgICB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kTWVkaWEgPSA8QmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjxJbWcgc3JjPXtwb3N0TWVkaWF9IGFsdD17cG9zdFRpdGxlfSAvPjwvQmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjtcbiAgICAgICAgfSBlbHNlIGlmICggdmlkcy5pbmRleE9mKHBvc3RNZWRpYS5zcGxpdCgnLicpLnBvcCgpKSA+PSAwIClcbiAgICAgICAge1xuICAgICAgICAgICAgYmFja2dyb3VuZE1lZGlhID0gPEJhY2tncm91bmRJbWFnZURpdkRhcmtlbj48UmVhY3QuRnJhZ21lbnQga2V5PXtwb3N0TWVkaWF9PjxWaWRlb1BsYXllck5hdGl2ZSBwbGF5c0lubGluZT17dHJ1ZX0gYXV0b1BsYXk9e3RydWV9IG11dGVkPXt0cnVlfSBsb29wPXt0cnVlfSA+XG4gICAgICAgICAgICAgIDxzb3VyY2Ugc3JjPXtwb3N0TWVkaWF9IHR5cGU9XCJ2aWRlby9tcDRcIiAvPlxuICAgICAgICAgICAgICA8L1ZpZGVvUGxheWVyTmF0aXZlPjwvUmVhY3QuRnJhZ21lbnQ+PC9CYWNrZ3JvdW5kSW1hZ2VEaXZEYXJrZW4+O1xuICAgICAgICB9XG5cbiAgICAvLyAgc3ViTWVudVRvcCA9ICctMTAwcHgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAwO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcbiAgICB9IGVsc2UgaWYgKGlzS2luZXRpY3NSb2JvdGljc1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ3doaXRlJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0VGVjaCA9ICdibGFjayc7XG4gICAgICBmcm9udEltYWdlT3BhY2l0eSA9IDEuMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3BhbiBjc3M9e2Nzc2Bjb2xvcjpCbGFjazt0ZXh0LXNoYWRvdzoke25hbWVUZXh0U2hhZG93T259YH0+UGh5c2ljYWw8L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcblxuICAgIH0gZWxzZSBpZiAoaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlKSB7XG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJzEwdmgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnd2hpdGUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT5EaWdpdGFsPC9CZ0gxU3Bhbj48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfSBlbHNlIGlmIChpc1RlY2hSZXNlYXJjaFBhZ2UpIHtcbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRWaWRlbztcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcbiAgICAgIHN1Yk1lbnVUb3AgPSAnMTB2aCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDEuMDtcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnd2hpdGUnO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4gY3NzPXtjc3NgY29sb3I6QmxhY2s7dGV4dC1zaGFkb3c6JHtuYW1lVGV4dFNoYWRvd09ufWB9PkFydCBhbmQgVGVjaG5vbG9neTwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNQcm9qZWN0c1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT48L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcblxuICAgIH1cbiAgICBlbHNlIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZEJsYWNrRGl2O1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICdjYWxjKCcgKyBzZWN0aW9uSGVpZ2h0ICsgJyAtIDh2aCknO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4+VEhJTkdTIFRIQVQgTU9WRTwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH1cblxuICB9XG5cbiAgcmV0dXJuICg8VHJpYW5nbGVTZWN0aW9uIGNsYXNzTmFtZT1cImNvbnRhaW5lclwiID5cblxuICAgIDxUZXh0TG9vcERpdj5cbiAgICAgICAgey8qPFRoaW5nc1RoYXRNb3ZlPlRISU5HUyBUSEFUIE1PVkU8L1RoaW5nc1RoYXRNb3ZlPiovfVxuICAgICAgICB7bWFpbk5hbWV9XG4gICAgPC9UZXh0TG9vcERpdj5cblxuICAgIDxQb3N0VGl0bGVEaXY+PFBvc3RUaXRsZT57cG9zdFRpdGxlfTwvUG9zdFRpdGxlPjxQb3N0VGl0bGVDaGluZXNlPntwb3N0VGl0bGVDaGluZXNlfTwvUG9zdFRpdGxlQ2hpbmVzZT48L1Bvc3RUaXRsZURpdj5cblxuICAgIDxOdW1iZXJzRGVjbyBjc3M9e2lzSG9tZVBhZ2UgfHwgaXNUZWNoUmVzZWFyY2hQYWdlID8gY3NzYG9wYWNpdHk6IDE7YDpjc3Ngb3BhY2l0eTogMDtgfT48c3Bhbj4wMTwvc3Bhbj48c3Bhbj4wMjwvc3Bhbj48c3Bhbj4wMzwvc3Bhbj48c3Bhbj4wNDwvc3Bhbj48c3Bhbj4wNTwvc3Bhbj48c3Bhbj4wNjwvc3Bhbj48c3Bhbj4wNzwvc3Bhbj48c3Bhbj4wODwvc3Bhbj48c3Bhbj4wOTwvc3Bhbj48c3Bhbj4xMDwvc3Bhbj48L051bWJlcnNEZWNvPlxuICAgIDxNeU5hbWVCb3R0b21MaW5lPjwvTXlOYW1lQm90dG9tTGluZT5cbiAgICA8RGVjb0NpcmNsZT48L0RlY29DaXJjbGU+XG4gICAgey8qY3NzPXtjc3NgYmFja2dyb3VuZDogJHtzdWJNZW51QWN0aXZlQmFja2dyb3VuZH07YH0qL31cblxuICAgIDxTdWJNZW51IGNzcz17Y3NzYHRvcDogJHtzdWJNZW51VG9wfTsgb3BhY2l0eTogJHtzdWJNZW51T3BhY2l0eX1gfT5cbiAgICAgIDxTdWJNZW51VGl0bGVEaXYgY3NzPXtjc3NgYmFja2dyb3VuZDogJHtzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmt9O2B9PjxUaXRsZUxpbmsgY3NzPXtjc3NgY29sb3I6ICR7c3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrfTtgfSBsaW5rPVwiL2NhdGVnb3J5L3Byb2plY3RzL2tpbmV0aWNzLXJvYm90aWNzXCIgb25DbGljaz17ZSA9PiBjaGFuZ2VQYWdlKGUpfT5LaW5ldGljcyBhbmQgUm9ib3RpY3M8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICAgIDxUaXRsZURpdkhyPjxIckxpbmU+PC9IckxpbmU+PC9UaXRsZURpdkhyPlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWdufTtgfT48VGl0bGVMaW5rIGNzcz17Y3NzYGNvbG9yOiAke3N1Yk1lbnVBY3RpdmVUZXh0RGVzaWdufTtgfSBsaW5rPVwiL2NhdGVnb3J5L3Byb2plY3RzL2ludGVyYWN0aXZlLWRpZ2l0YWxcIiBvbkNsaWNrPXtlID0+IGNoYW5nZVBhZ2UoZSl9PkludGVyYXRpdmUgYW5kIERpZ2l0YWw8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICAgIDxUaXRsZURpdkhyPjxIckxpbmU+PC9IckxpbmU+PC9UaXRsZURpdkhyPlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaH07YH0+PFRpdGxlTGluayBjc3M9e2Nzc2Bjb2xvcjogJHtzdWJNZW51QWN0aXZlVGV4dFRlY2h9O2B9IGxpbms9XCIvY2F0ZWdvcnkvcHJvamVjdHMvdGVjaC1yZXNlYXJjaFwiIG9uQ2xpY2s9e2UgPT4gY2hhbmdlUGFnZShlKX0+VGVjaCBhbmQgUmVzZWFyY2g8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICA8L1N1Yk1lbnU+XG4gICAgPEZyb250SW1hZ2VEaXYgY3NzPXtjc3Ngb3BhY2l0eTogJHtmcm9udEltYWdlT3BhY2l0eX07YH0+XG4gICAgICA8RnJvbnRJbWFnZVBvbHlnb25PdXREaXY+XG4gICAgICAgIDxBbmltYXRlZCBhbmltYXRpb25Jbj1cImZhZGVJblwiIGFuaW1hdGlvbkluRHVyYXRpb249ezQwMDB9IGFuaW1hdGlvbkluRGVsYXk9ezIwMDB9IGFuaW1hdGlvbk91dD1cImZhZGVPdXRcIiBpc1Zpc2libGU9e3RydWV9PlxuICAgICAgICA8RnJvbnRJbWFnZVBvbHlnb25EaXYgPlxuICAgICAgICAgIHtmb3JlZ3JvdW5kTWVkaWF9XG4gICAgICAgIDwvRnJvbnRJbWFnZVBvbHlnb25EaXY+XG4gICAgICAgIDwvQW5pbWF0ZWQ+XG4gICAgICA8L0Zyb250SW1hZ2VQb2x5Z29uT3V0RGl2PlxuICAgIDwvRnJvbnRJbWFnZURpdj5cbiAgICB7YmFja2dyb3VuZE1lZGlhfVxuICA8L1RyaWFuZ2xlU2VjdGlvbj5cbiAgKTtcblxufVxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFRyaWFuZ2xlTGFuZGluZyk7XG5cbmNvbnN0IFRyaWFuZ2xlU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICAgIGhlaWdodDogJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9O1xuICB9XG5gO1xuY29uc3QgVGV4dExvb3BEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICB0b3A6MDtcbiAgbGVmdDowO1xuICB3aWR0aDoxMDAlO1xuICB6LWluZGV4OjM7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbiAgJiBkaXZ7XG4gICAgJiBkaXZ7XG4gICAgICB3aWR0aDoxMDB2dztcbiAgICB9XG4gIH1cbmBcblxuLypcbnRleHQtc2hhZG93OlxuIC0xcHggLTFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksXG4gIDFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSxcbiAgLTFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLFxuICAgMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyk7XG4qL1xuXG5jb25zdCBNeU5hbWUgPSBzdHlsZWQuaDFgXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LWZhbWlseTogXCJBcmNoaXYgR3JvdGVza1wiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiSGVsdmV0aWNhIE5ldWVcIixcbiAgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDcuNXZ3O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHotaW5kZXg6MztcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3Z3O1xuICBtaXgtYmxlbmQtbW9kZTogbm9ybWFsO1xuICBkaXNwbGF5OmZsZXg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTUuNXZ3O1xuICAgIHBhZGRpbmctdG9wOjE1MHB4O1xuICB9XG5gO1xuXG5cblxuY29uc3QgQmdIMVNwYW4gPSBzdHlsZWQuZGl2YFxucGFkZGluZzogMCA1MHB4O1xudHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICBwYWRkaW5nOiAwIDA7XG4gIH1cbmBcblxuY29uc3QgTnVtYmVyc0RlY28gPSBzdHlsZWQuc3BhbmBcbiAgY29sb3I6IzcwNzA3MDtcbiAgd2lkdGg6MTAwJTtcbiAgei1pbmRleDoxO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC4yMik7XG4gIGRpc3BsYXk6ZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGZsZXgtd3JhcDogbm93cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMS4wcztcbiAgJiBzcGFue1xuICAgIGZvbnQtd2VpZ2h0OjIwMDtcbiAgfVxuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBkaXNwbGF5Om5vbmU7XG4gICAgICB0b3A6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC4zNSk7XG4gIH1cbmBcblxuY29uc3QgTXlOYW1lQm90dG9tTGluZSA9IHN0eWxlZC5zcGFuYFxuICBib3JkZXItYm90dG9tOiAxcHggIzcwNzA3MCBzb2xpZDtcbiAgd2lkdGg6MTAwJTtcbiAgei1pbmRleDoyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC43NSk7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgICAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuODApO1xuICB9XG5gXG5cbmNvbnN0IGNpcmNsZUFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMzMlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgyMCUsLTEwJSkgc2NhbGUoMS4yKTtcbiAgfVxuICA2NiUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0yMCUsMTAlKSBzY2FsZSgwLjgpO1xuICB9XG5gXG5cbmNvbnN0IERlY29DaXJjbGUgPSBzdHlsZWQuc3BhbmBcbiAgYm9yZGVyOiAxcHggIzcwNzA3MCBzb2xpZDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB3aWR0aDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC42KTtcbiAgaGVpZ2h0OiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjYpO1xuICB6LWluZGV4OiAyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC4yMCk7XG4gIGxlZnQ6OCU7XG4gIGFuaW1hdGlvbjogJHtjaXJjbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBAbWVkaWEob3JpZW50YXRpb246cG9ydHJhaXQpe1xuICAgIHdpZHRoOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuNCk7XG4gICAgaGVpZ2h0OiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuNCk7XG4gICAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuMjIpO1xuICB9XG5gXG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZURpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgICY6YWZ0ZXJ7XG4gICAgICBjb250ZW50OicnO1xuICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICB3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTtcbiAgICAgIHRvcDowOyBsZWZ0OjA7XG4gICAgICBiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC42KTtcbiAgICAgIG9wYWNpdHk6MDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgIH1cbmA7XG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZURpdkRhcmtlbiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgICY6YWZ0ZXJ7XG4gICAgICBjb250ZW50OicnO1xuICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICB3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTtcbiAgICAgIHRvcDowOyBsZWZ0OjA7XG4gICAgICBiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC42KTtcbiAgICAgIG9wYWNpdHk6MTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgIH1cbmA7XG5cblxuXG5jb25zdCBCYWNrZ3JvdW5kSW1hZ2UgPSBzdHlsZWQuaW1nYFxuICBtaW4td2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG5gO1xuXG5cbmNvbnN0IEZyb250SW1hZ2VEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICB0b3A6MDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG4vKi8vaHR0cHM6Ly9iZW5uZXR0ZmVlbHkuY29tL2NsaXBweS8qL1xuY29uc3QgdHJpYW5nbGVBbmltYXRpb24gPSBrZXlmcmFtZXNgXG4gIDMzJSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDUwJSAxNSUsIDMxJSA4OCUsIDc3JSA2MCUpO1xuICB9XG4gIDY2JSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDcyJSAxOSUsIDI5JSAzOSUsIDYwJSA5NCUpO1xuICB9XG5gXG5cbmNvbnN0IHRyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlID0ga2V5ZnJhbWVzYFxuICAzMyUge1xuICAgIGNsaXAtcGF0aDogcG9seWdvbig3MyUgMTMlLCA4JSA1OCUsIDk1JSA5MSUpO1xuICB9XG4gIDY2JSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDEwMCUgMTklLCAwIDM3JSwgNTklIDg2JSk7XG4gIH1cbmBcblxuY29uc3QgRnJvbnRJbWFnZVBvbHlnb25PdXREaXYgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBiYWNrZ3JvdW5kOiAjNzA3MDcwO1xuICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDYzJSAxMCUsIDI4JSA2NSUsIDcyJSA5MiUpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMzUlIDE4JSwgNCUgODklLCAxMjAlIDY2JSk7XG4gICAgYW5pbWF0aW9uOiAke3RyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlfSAxMjBzIGVhc2UgaW5maW5pdGU7XG4gICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG5cbi8qIHRyYW5zaXRpb246IDAuNHMgY3ViaWMtYmV6aWVyKDAsIDEsIDAuNjUsIDAuOTQpOyAqL1xuY29uc3QgRnJvbnRJbWFnZVBvbHlnb25EaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAzcHg7XG4gIHJpZ2h0OiAzcHg7XG4gIGJvdHRvbTogM3B4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDYzJSAxMCUsIDI4JSA2NSUsIDcyJSA5MiUpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMzUlIDE4JSwgNCUgODklLCAxMjAlIDY2JSk7XG4gICAgICAgIGFuaW1hdGlvbjogJHt0cmlhbmdsZUFuaW1hdGlvbk1vYmlsZX0gMTIwcyBlYXNlIGluZmluaXRlO1xuICB9XG5gO1xuXG5jb25zdCBGcm9udEltYWdlID0gc3R5bGVkLmltZ2BcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG5gO1xuXG4vKiAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7Ki9cbmNvbnN0IFN1Yk1lbnUgPSBzdHlsZWQuZGl2YFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNjBweDtcbiAgei1pbmRleDogMztcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIHBhZGRpbmc6IDEwcHggMTVweCAxMHB4IDE1cHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGZsZXgtZmxvdzpjb2x1bW47XG4gICAgaGVpZ2h0OiAxODBweDtcbiAgfVxuICB0cmFuc2l0aW9uOiBhbGwgMS4wcztcbmA7XG5cblxuY29uc3QgU3ViTWVudVRpdGxlRGl2ID0gc3R5bGVkLmRpdmBcbiAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gIHdpZHRoOjI1MHB4O1xuICAmOm50aC1vZi10eXBlKDEpe1xuICAgIHRleHQtYWxpZ246bGVmdDtcbiAgfVxuICAmOm50aC1vZi10eXBlKDMpe1xuICAgIHdpZHRoOjMwMHB4O1xuICB9XG4gICY6bnRoLW9mLXR5cGUoNSl7XG4gICAgdGV4dC1hbGlnbjpyaWdodDtcbiAgfVxuICB0ZXh0LXNoYWRvdzogLTFweCAtMXB4IDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMCksMXB4IC0xcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4wKSwtMXB4IDFweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjApLDFweCAxcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4yKTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgaGVpZ2h0OjM4cHg7XG4gICAgJjpudGgtb2YtdHlwZSgxKXtcbiAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIH1cbiAgICAmOm50aC1vZi10eXBlKDMpe1xuICAgICAgd2lkdGg6MjcwcHg7XG4gICAgfVxuICAgICY6bnRoLW9mLXR5cGUoNSl7XG4gICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IFRpdGxlRGl2SHIgPSBzdHlsZWQuZGl2YFxuICBmbGV4LWdyb3c6MTtcbiAgbWFyZ2luLXRvcDogLTIwcHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgYmxhY2s7XG4gICAgbGVmdDo1MCU7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuYDtcblxuY29uc3QgSHJMaW5lID0gc3R5bGVkLmhyYFxuICBib3JkZXI6IG5vbmU7XG4gIGhlaWdodDogMXB4O1xuICAvKiBTZXQgdGhlIGhyIGNvbG9yICovXG4gIGNvbG9yOiBibGFjazsgLyogb2xkIElFICovXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICB9XG5gO1xuXG5jb25zdCBUaXRsZUxpbmsgPSBzdHlsZWQoTGluaylgXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogJHtzdWJNZW51Rm9udFNpemV9O1xuICBmb250LXdlaWdodDo1MDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHBhZGRpbmc6NXB4IDQ1cHggMTVweCA0NXB4O1xuICAmOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuICAmOmFjdGl2ZXtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgcGFkZGluZzogMnB4IDE1cHggMHB4IDE1cHg7XG4gIH1cbmA7XG5cbmNvbnN0IEJsYWNrRGl2ID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZDpibGFjaztcbiAgd2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG5gO1xuXG5jb25zdCBXaGl0ZURpdiA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQ6d2hpdGU7XG4gIHdpZHRoOjEwMCU7XG4gIGhlaWdodDoxMDAlO1xuYDtcblxuY29uc3QgUG9zdFRpdGxlRGl2ID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6MTAwJTtcbiAgcGFkZGluZy1sZWZ0OiA0NXB4O1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIH1cbmA7XG5cbmNvbnN0IFBvc3RUaXRsZSA9IHN0eWxlZC5oMWBcbiAgcG9zaXRpb246YWJzb2x1dGU7XG4gIGJvdHRvbToxLjNlbTtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgZm9udC1zaXplOiAzLjVlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZm9udC1zaXplOiA4dnc7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgfVxuYDtcbmNvbnN0IFBvc3RUaXRsZUNoaW5lc2UgPSBzdHlsZWQuaDFgXG4gIHBvc2l0aW9uOmFic29sdXRlO1xuICBib3R0b206MDtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgZm9udC1zaXplOiAzLjFlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZm9udC1zaXplOiA4dnc7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgfVxuYDtcblxuXG5jb25zdCBWaWRlb1BsYXllck5hdGl2ZSA9IHN0eWxlZC52aWRlb2BcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtYXNwZWN0LXJhdGlvOiAxOTIwLzEwODApIHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLWFzcGVjdC1yYXRpbzogMTkyMC8xMDgwKSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgfVxuYDtcblxuXG5jb25zdCBJbWcgPSBzdHlsZWQuaW1nYFxuICBkaXNwbGF5OmJsb2NrO1xuICBtaW4td2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG4gIG9iamVjdC1maXQ6Y292ZXI7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OjEwMCU7XG4gIH1cbmBcbiJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const VideoPlayerNative=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"video\", false?undefined:{target:\"e1649dpy1\",label:\"VideoPlayerNative\"})( false?undefined:{name:\"s6u704\",styles:\"display:block;position:absolute;left:50%;top:50%;transform:translate(-50%, -50%);overflow:hidden;object-fit:cover;@media screen and (max-aspect-ratio: 1920/1080){height:100%;}@media screen and (min-aspect-ratio: 1920/1080){width:100%;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXV0QnNDIiwiZmlsZSI6IkM6XFxHaXRodWJcXFRoaW5nc1RoYXRNb3ZlLnh5elxccGFja2FnZXNcXHR3ZW50eXR3ZW50eS10aGVtZVxcc3JjXFxjb21wb25lbnRzXFx0cmlhbmdsZS1sYW5kaW5nXFx0cmlhbmdsZS1sYW5kaW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdCwgR2xvYmFsLCBjc3MsIHN0eWxlZCwga2V5ZnJhbWVzIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIi4uL2xpbmtcIjtcbmltcG9ydCBMb2FkaW5nIGZyb20gXCIuLi9sb2FkaW5nXCI7XG4vL2ltcG9ydCBUZXh0TG9vcCBmcm9tIFwicmVhY3QtdGV4dC1sb29wXCI7XG5pbXBvcnQgeyB1c2VXaW5kb3dTaXplIH0gZnJvbSAnLi4vLi4vaGVscGVycydcbmltcG9ydCB7QW5pbWF0ZWR9IGZyb20gXCJyZWFjdC1hbmltYXRlZC1jc3NcIjtcblxuLy9pbXBvcnQgeyBQbGF5ZXIsIENvbnRyb2xCYXIsIFNob3J0Y3V0IH0gZnJvbSAndmlkZW8tcmVhY3QnO1xuLy9pbXBvcnQgZXh0ZXJuYWxDU1MgZnJvbSBcIi4uL3N0eWxlcy92aWRlby1yZWFjdC5jc3NcIjsgLy8gaW1wb3J0IGNzc1xuLy9pbXBvcnQgeyBWaWRlb1BsYXllciB9IGZyb20gXCIuLi92aWRlby1wbGF5ZXJcIjtcblxuY29uc3Qgc2VjdGlvbkhlaWdodCA9ICdjYWxjKDEwMHZ3IC8gMi4yKSc7XG5jb25zdCBzZWN0aW9uSGVpZ2h0UG9ydHJhaXQgPSAnY2FsYygxMDB2dyAqIDEuNDIpJztcbmxldCBzdWJNZW51VG9wID0gJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKSc7XG5sZXQgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG5cbmxldCBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnYmxhY2snO1xubGV0IHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ2JsYWNrJztcbmxldCBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnYmxhY2snO1xuXG5sZXQgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ3doaXRlJztcbmxldCBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICd3aGl0ZSc7XG5sZXQgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ3doaXRlJztcblxubGV0IG5hbWVUZXh0U2hhZG93T24gPSAnLTFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSwxcHggLTFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksLTFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpOyc7XG5cblxubGV0IGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG5jb25zdCBzdWJNZW51Rm9udFNpemUgPSAnMjBweCc7XG5cbmNvbnN0IFRyaWFuZ2xlTGFuZGluZyA9ICh7IHN0YXRlLCBhY3Rpb25zIH0pID0+IHtcblxuICBsZXQgaXNCaW9QYWdlO1xuICBsZXQgaXNLaW5ldGljc1JvYm90aWNzUGFnZTtcbiAgbGV0IGlzSW50ZXJhY3RpdmVEaWdpdGFsUGFnZTtcbiAgbGV0IGlzVGVjaFJlc2VhcmNoUGFnZTtcbiAgbGV0IGlzUHJvamVjdHNQYWdlO1xuICBsZXQgaXNIb21lUGFnZTtcbiAgbGV0IGlzUG9zdDtcbiAgbGV0IGxhbmRpbmdEYXRhO1xuICBmdW5jdGlvbiBjaGFuZ2VQYWdlKGUpe1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBsYW5kaW5nRGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoZXh0cmFQb3N0TGluayk7XG4gIH1cblxuICBjb25zdCBzaXplID0gdXNlV2luZG93U2l6ZSgpO1xuICBjb25zdCBwID0gXCJsYW5kaW5ncy9cIjtcbiAgY29uc3QgZXh0cmFQb3N0TGluayA9IGAvJHtwfWA7XG4gIGxhbmRpbmdEYXRhID0gc3RhdGUuc291cmNlLmdldChleHRyYVBvc3RMaW5rKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChleHRyYVBvc3RMaW5rKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcblxuICBpc0Jpb1BhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvYmlvLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0tpbmV0aWNzUm9ib3RpY3NQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzL2tpbmV0aWNzLXJvYm90aWNzLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0ludGVyYWN0aXZlRGlnaXRhbFBhZ2UgPSAoc3RhdGUucm91dGVyLmxpbmsgPT09ICcvY2F0ZWdvcnkvcHJvamVjdHMvaW50ZXJhY3RpdmUtZGlnaXRhbC8nKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNUZWNoUmVzZWFyY2hQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzL3RlY2gtcmVzZWFyY2gvJykgPyB0cnVlIDogZmFsc2U7XG4gIGlzUHJvamVjdHNQYWdlID0gKHN0YXRlLnJvdXRlci5saW5rID09PSAnL2NhdGVnb3J5L3Byb2plY3RzLycpID8gdHJ1ZSA6IGZhbHNlO1xuICBpc0hvbWVQYWdlID0gKGRhdGEuaXNIb21lKSA/IHRydWUgOiBmYWxzZTtcbiAgaXNQb3N0ID0gKGRhdGEuaXNQb3N0KSA/IHRydWUgOiBmYWxzZTtcblxuICBsZXQgcG9zdFRpdGxlID0gXCJcIjtcbiAgbGV0IHBvc3RUaXRsZUNoaW5lc2UgPSBcIlwiO1xuICBsZXQgcG9zdE1lZGlhID0gXCJcIjtcbiAgbGV0IG1haW5OYW1lID0gXCJcIlxuICBsZXQgZm9yZWdyb3VuZE1lZGlhO1xuICBsZXQgYmFja2dyb3VuZE1lZGlhO1xuXG4gIGlmIChpc1Bvc3QgJiYgZGF0YS5pc1JlYWR5KSB7XG5cbiAgICBjb25zdCBwb3N0ID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gICAgbGV0IGZlYXR1cmVNZWRpYVVSTCA9IHBvc3QuamV0cGFja19mZWF0dXJlZF9tZWRpYV91cmw7XG4gICAgbGV0IG4gPSBmZWF0dXJlTWVkaWFVUkwuaW5kZXhPZignPycpO1xuICAgIGxldCBzcyA9IGZlYXR1cmVNZWRpYVVSTC5zdWJzdHJpbmcoMCwgbiAhPSAtMSA/IG4gOiBmZWF0dXJlTWVkaWFVUkwubGVuZ3RoKTtcbiAgICBwb3N0VGl0bGUgPSBwb3N0LnRpdGxlLnJlbmRlcmVkO1xuICAgIHBvc3RUaXRsZUNoaW5lc2UgPSBwb3N0LmNoaW5lc2VfdGl0bGU7XG4gICAgcG9zdE1lZGlhID0gcG9zdC5iYWNrZ3JvdW5kX21lZGlhLmd1aWQgPyBwb3N0LmJhY2tncm91bmRfbWVkaWEuZ3VpZCA6IHNzO1xuXG4gIH1cblxuXG4gIGlmIChsYW5kaW5nRGF0YS5pc1JlYWR5KSB7XG5cbiAgICBsZXQgbGFuZGluZ1VSTCwgaXRlbTtcbiAgICBpZiAoaXNCaW9QYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvYmlvL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNLaW5ldGljc1JvYm90aWNzUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2tpbmV0aWNzLXJvYm90aWNzL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlKSB7XG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaW50ZXJhY3RpdmUtZGlnaXRhbC9cIjtcbiAgICB9IGVsc2UgaWYgKGlzVGVjaFJlc2VhcmNoUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL3RlY2gtcmVzZWFyY2gvXCI7XG4gICAgfSBlbHNlIGlmIChpc1Byb2plY3RzUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2tpbmV0aWNzLXJvYm90aWNzL1wiO1xuICAgIH0gZWxzZSBpZiAoaXNIb21lUGFnZSkge1xuICAgICAgbGFuZGluZ1VSTCA9IFwiL2xhbmRpbmdzL2hvbWUvXCI7XG4gICAgfSBlbHNlIGlmIChpc1Bvc3QpIHsgLy9IT01FXG4gICAgICBsYW5kaW5nVVJMID0gXCIvbGFuZGluZ3MvaG9tZS9cIjsgLy9UT0RPXG4gICAgfSBlbHNlIHtcbiAgICAgIGxhbmRpbmdVUkwgPSBcIi9sYW5kaW5ncy9ob21lL1wiOyAvL1RPRE9cbiAgICB9XG4gICAgY29uc29sZS5sb2cobGFuZGluZ1VSTClcbiAgICB2YXIgaXRlbXMgPSBsYW5kaW5nRGF0YS5pdGVtcy5tYXAoKHsgdHlwZSwgaWQsIGxpbmsgfSwgaW5kZXgpID0+IHtcbiAgICAgIGlmIChsaW5rID09PSBsYW5kaW5nVVJMKSB7XG4gICAgICAgIGl0ZW0gPSBzdGF0ZS5zb3VyY2VbdHlwZV1baWRdO1xuICAgICAgfVxuICAgIH0pXG5cbiAgICBjb25zdCBmb3JlZ3JvdW5kQmxhY2tEaXYgPSA8QmxhY2tEaXY+PC9CbGFja0Rpdj47XG4gICAgY29uc3QgYmFja2dyb3VuZFdoaXRlRGl2ID0gPEJhY2tncm91bmRJbWFnZURpdj48V2hpdGVEaXY+PC9XaGl0ZURpdj48L0JhY2tncm91bmRJbWFnZURpdj47XG5cbiAgICBjb25zdCBoYW5kbGVMb2FkZWREYXRhID0gKHR5cGUpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGAke3R5cGV9IHZpZGVvIGxvYWRlZGApO1xuICAgIH07XG4gICAgXG4gICAgY29uc3QgZm9yZWdyb3VuZFZpZGVvID0gaXRlbS5mb3JlZ3JvdW5kX21lZGlhWzBdICYmIChcbiAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkfT5cbiAgICAgICAgPFZpZGVvUGxheWVyTmF0aXZlXG4gICAgICAgICAgcGxheXNJbmxpbmVcbiAgICAgICAgICBhdXRvUGxheVxuICAgICAgICAgIG11dGVkXG4gICAgICAgICAgbG9vcFxuICAgICAgICAgIG9uTG9hZGVkRGF0YT17KCkgPT4gaGFuZGxlTG9hZGVkRGF0YShcIkZvcmVncm91bmRcIil9XG4gICAgICAgID5cbiAgICAgICAgICA8c291cmNlXG4gICAgICAgICAgICBzcmM9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkICsgXCIjdD0wLjFcIn1cbiAgICAgICAgICAgIHR5cGU9e1widmlkZW8vbXA0XCJ9XG4gICAgICAgICAgICBrZXk9e2l0ZW0uZm9yZWdyb3VuZF9tZWRpYVswXS5ndWlkfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvVmlkZW9QbGF5ZXJOYXRpdmU+XG4gICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICk7XG4gICAgY29uc3QgYmFja2dyb3VuZFZpZGVvID0gaXRlbS5iYWNrZ3JvdW5kX21lZGlhWzBdICYmIChcbiAgICAgIDxCYWNrZ3JvdW5kSW1hZ2VEaXY+XG4gICAgICAgIDxSZWFjdC5GcmFnbWVudCBrZXk9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkfT5cbiAgICAgICAgICA8VmlkZW9QbGF5ZXJOYXRpdmVcbiAgICAgICAgICAgIHBsYXlzSW5saW5lXG4gICAgICAgICAgICBhdXRvUGxheVxuICAgICAgICAgICAgbXV0ZWRcbiAgICAgICAgICAgIGxvb3BcbiAgICAgICAgICAgIG9uTG9hZGVkRGF0YT17KCkgPT4gaGFuZGxlTG9hZGVkRGF0YShcIkJhY2tncm91bmRcIil9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPHNvdXJjZVxuICAgICAgICAgICAgICBzcmM9e2l0ZW0uYmFja2dyb3VuZF9tZWRpYVswXS5ndWlkICsgXCIjdD0wLjFcIn1cbiAgICAgICAgICAgICAgdHlwZT17XCJ2aWRlby9tcDRcIn1cbiAgICAgICAgICAgICAga2V5PXtpdGVtLmJhY2tncm91bmRfbWVkaWFbMF0uZ3VpZH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9WaWRlb1BsYXllck5hdGl2ZT5cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgIDwvQmFja2dyb3VuZEltYWdlRGl2PlxuICAgICk7XG5cbiAgICBpZiAoaXNCaW9QYWdlKSB7XG5cbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRCbGFja0RpdjtcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcblxuICAgICAgc3ViTWVudVRvcCA9ICctMTAwcHgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAwO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuICAgICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNIb21lUGFnZSkge1xuXG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kVmlkZW87XG5cbiAgICAgIHN1Yk1lbnVUb3AgPSAoc2l6ZS53aWR0aCA8PSA5MDAgJiYgaXNIb21lUGFnZSA/ICctMTAwcHgnIDogJ2NhbGMoJyArIHNlY3Rpb25IZWlnaHQgKyAnIC0gOHZoKScpO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAoc2l6ZS53aWR0aCA8PSA5MDAgJiYgaXNIb21lUGFnZSA/IDAgOiAxLjApO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEFuaW1hdGVkIGFuaW1hdGlvbkluPVwiZmFkZUluXCIgYW5pbWF0aW9uSW5EdXJhdGlvbj17NTAwMH0gYW5pbWF0aW9uSW5EZWxheT17MH0gYW5pbWF0aW9uT3V0PVwiZmFkZU91dFwiIGlzVmlzaWJsZT17dHJ1ZX0+PEJnSDFTcGFuPlRISU5HUyBUSEFUIE1PVkU8L0JnSDFTcGFuPjwvQW5pbWF0ZWQ+PC9NeU5hbWU+O1xuXG4gICAgICAvKlxuICAgICAgICBjb25zdCBwbGF5ZXJPcHRpb25zID0ge1xuICAgICAgICBzb3VyY2VzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc3JjOiBpdGVtLmZvcmVncm91bmRfbWVkaWFbMF0uZ3VpZFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGxvb3A6IHRydWUsXG4gICAgICAgIHByZWxvYWQ6IFwiYXV0b1wiXG4gICAgICAgIH07XG4gICAgICAqL1xuXG4gICAgfSBlbHNlIGlmIChpc1Bvc3QpIHtcblxuICAgICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kQmxhY2tEaXY7XG5cbiAgICAgICAgdmFyIGltZ3MgPVtcImpwZ1wiLCBcImpwZWdcIiwgXCJnaWZcIiwgXCJ0aWZmXCIsIFwicG5nXCIsIFwid2VicFwiXTtcbiAgICAgICAgdmFyIHZpZHMgPSBbXCJtcDRcIiwgXCJ3ZWJtXCJdO1xuXG4gICAgICAgIGlmKCBpbWdzLmluZGV4T2YocG9zdE1lZGlhLnNwbGl0KCcuJykucG9wKCkpID49IDAgKVxuICAgICAgICB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kTWVkaWEgPSA8QmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjxJbWcgc3JjPXtwb3N0TWVkaWF9IGFsdD17cG9zdFRpdGxlfSAvPjwvQmFja2dyb3VuZEltYWdlRGl2RGFya2VuPjtcbiAgICAgICAgfSBlbHNlIGlmICggdmlkcy5pbmRleE9mKHBvc3RNZWRpYS5zcGxpdCgnLicpLnBvcCgpKSA+PSAwIClcbiAgICAgICAge1xuICAgICAgICAgICAgYmFja2dyb3VuZE1lZGlhID0gPEJhY2tncm91bmRJbWFnZURpdkRhcmtlbj48UmVhY3QuRnJhZ21lbnQga2V5PXtwb3N0TWVkaWF9PjxWaWRlb1BsYXllck5hdGl2ZSBwbGF5c0lubGluZT17dHJ1ZX0gYXV0b1BsYXk9e3RydWV9IG11dGVkPXt0cnVlfSBsb29wPXt0cnVlfSA+XG4gICAgICAgICAgICAgIDxzb3VyY2Ugc3JjPXtwb3N0TWVkaWF9IHR5cGU9XCJ2aWRlby9tcDRcIiAvPlxuICAgICAgICAgICAgICA8L1ZpZGVvUGxheWVyTmF0aXZlPjwvUmVhY3QuRnJhZ21lbnQ+PC9CYWNrZ3JvdW5kSW1hZ2VEaXZEYXJrZW4+O1xuICAgICAgICB9XG5cbiAgICAvLyAgc3ViTWVudVRvcCA9ICctMTAwcHgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAwO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcbiAgICB9IGVsc2UgaWYgKGlzS2luZXRpY3NSb2JvdGljc1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrID0gJ3doaXRlJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0RGVzaWduID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0VGVjaCA9ICdibGFjayc7XG4gICAgICBmcm9udEltYWdlT3BhY2l0eSA9IDEuMDtcblxuICAgICAgbWFpbk5hbWUgPSA8TXlOYW1lPjxCZ0gxU3BhbiBjc3M9e2Nzc2Bjb2xvcjpCbGFjazt0ZXh0LXNoYWRvdzoke25hbWVUZXh0U2hhZG93T259YH0+UGh5c2ljYWw8L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcblxuICAgIH0gZWxzZSBpZiAoaXNJbnRlcmFjdGl2ZURpZ2l0YWxQYWdlKSB7XG4gICAgICBmb3JlZ3JvdW5kTWVkaWEgPSBmb3JlZ3JvdW5kVmlkZW87XG4gICAgICBiYWNrZ3JvdW5kTWVkaWEgPSBiYWNrZ3JvdW5kV2hpdGVEaXY7XG4gICAgICBzdWJNZW51VG9wID0gJzEwdmgnO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnd2hpdGUnO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT5EaWdpdGFsPC9CZ0gxU3Bhbj48QmdIMVNwYW4+PC9CZ0gxU3Bhbj48L015TmFtZT47XG4gICAgfSBlbHNlIGlmIChpc1RlY2hSZXNlYXJjaFBhZ2UpIHtcbiAgICAgIGZvcmVncm91bmRNZWRpYSA9IGZvcmVncm91bmRWaWRlbztcbiAgICAgIGJhY2tncm91bmRNZWRpYSA9IGJhY2tncm91bmRXaGl0ZURpdjtcbiAgICAgIHN1Yk1lbnVUb3AgPSAnMTB2aCc7XG4gICAgICBzdWJNZW51T3BhY2l0eSA9IDEuMDtcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kQXJ0d29yayA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWduID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRUZWNoID0gJ2JsYWNrJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnd2hpdGUnO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4gY3NzPXtjc3NgY29sb3I6QmxhY2s7dGV4dC1zaGFkb3c6JHtuYW1lVGV4dFNoYWRvd09ufWB9PkFydCBhbmQgVGVjaG5vbG9neTwvQmdIMVNwYW4+PEJnSDFTcGFuPjwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH0gZWxzZSBpZiAoaXNQcm9qZWN0c1BhZ2UpIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZFZpZGVvO1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICcxMHZoJztcbiAgICAgIHN1Yk1lbnVPcGFjaXR5ID0gMS4wO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmRBcnR3b3JrID0gJ25vbmUnO1xuICAgICAgc3ViTWVudUFjdGl2ZUJhY2tncm91bmREZXNpZ24gPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZFRlY2ggPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dEFydHdvcmsgPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHREZXNpZ24gPSAnYmxhY2snO1xuICAgICAgc3ViTWVudUFjdGl2ZVRleHRUZWNoID0gJ2JsYWNrJztcbiAgICAgIGZyb250SW1hZ2VPcGFjaXR5ID0gMS4wO1xuXG4gICAgICBtYWluTmFtZSA9IDxNeU5hbWU+PEJnSDFTcGFuIGNzcz17Y3NzYGNvbG9yOkJsYWNrO3RleHQtc2hhZG93OiR7bmFtZVRleHRTaGFkb3dPbn1gfT48L0JnSDFTcGFuPjxCZ0gxU3Bhbj48L0JnSDFTcGFuPjwvTXlOYW1lPjtcblxuICAgIH1cbiAgICBlbHNlIHtcblxuICAgICAgZm9yZWdyb3VuZE1lZGlhID0gZm9yZWdyb3VuZEJsYWNrRGl2O1xuICAgICAgYmFja2dyb3VuZE1lZGlhID0gYmFja2dyb3VuZFdoaXRlRGl2O1xuICAgICAgc3ViTWVudVRvcCA9ICdjYWxjKCcgKyBzZWN0aW9uSGVpZ2h0ICsgJyAtIDh2aCknO1xuICAgICAgc3ViTWVudU9wYWNpdHkgPSAxLjA7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmsgPSAnbm9uZSc7XG4gICAgICBzdWJNZW51QWN0aXZlQmFja2dyb3VuZERlc2lnbiA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaCA9ICdub25lJztcbiAgICAgIHN1Yk1lbnVBY3RpdmVUZXh0QXJ0d29yayA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dERlc2lnbiA9ICdibGFjayc7XG4gICAgICBzdWJNZW51QWN0aXZlVGV4dFRlY2ggPSAnYmxhY2snO1xuICAgICAgZnJvbnRJbWFnZU9wYWNpdHkgPSAxLjA7XG5cbiAgICAgIG1haW5OYW1lID0gPE15TmFtZT48QmdIMVNwYW4+VEhJTkdTIFRIQVQgTU9WRTwvQmdIMVNwYW4+PC9NeU5hbWU+O1xuICAgIH1cblxuICB9XG5cbiAgcmV0dXJuICg8VHJpYW5nbGVTZWN0aW9uIGNsYXNzTmFtZT1cImNvbnRhaW5lclwiID5cblxuICAgIDxUZXh0TG9vcERpdj5cbiAgICAgICAgey8qPFRoaW5nc1RoYXRNb3ZlPlRISU5HUyBUSEFUIE1PVkU8L1RoaW5nc1RoYXRNb3ZlPiovfVxuICAgICAgICB7bWFpbk5hbWV9XG4gICAgPC9UZXh0TG9vcERpdj5cblxuICAgIDxQb3N0VGl0bGVEaXY+PFBvc3RUaXRsZT57cG9zdFRpdGxlfTwvUG9zdFRpdGxlPjxQb3N0VGl0bGVDaGluZXNlPntwb3N0VGl0bGVDaGluZXNlfTwvUG9zdFRpdGxlQ2hpbmVzZT48L1Bvc3RUaXRsZURpdj5cblxuICAgIDxOdW1iZXJzRGVjbyBjc3M9e2lzSG9tZVBhZ2UgfHwgaXNUZWNoUmVzZWFyY2hQYWdlID8gY3NzYG9wYWNpdHk6IDE7YDpjc3Ngb3BhY2l0eTogMDtgfT48c3Bhbj4wMTwvc3Bhbj48c3Bhbj4wMjwvc3Bhbj48c3Bhbj4wMzwvc3Bhbj48c3Bhbj4wNDwvc3Bhbj48c3Bhbj4wNTwvc3Bhbj48c3Bhbj4wNjwvc3Bhbj48c3Bhbj4wNzwvc3Bhbj48c3Bhbj4wODwvc3Bhbj48c3Bhbj4wOTwvc3Bhbj48c3Bhbj4xMDwvc3Bhbj48L051bWJlcnNEZWNvPlxuICAgIDxNeU5hbWVCb3R0b21MaW5lPjwvTXlOYW1lQm90dG9tTGluZT5cbiAgICA8RGVjb0NpcmNsZT48L0RlY29DaXJjbGU+XG4gICAgey8qY3NzPXtjc3NgYmFja2dyb3VuZDogJHtzdWJNZW51QWN0aXZlQmFja2dyb3VuZH07YH0qL31cblxuICAgIDxTdWJNZW51IGNzcz17Y3NzYHRvcDogJHtzdWJNZW51VG9wfTsgb3BhY2l0eTogJHtzdWJNZW51T3BhY2l0eX1gfT5cbiAgICAgIDxTdWJNZW51VGl0bGVEaXYgY3NzPXtjc3NgYmFja2dyb3VuZDogJHtzdWJNZW51QWN0aXZlQmFja2dyb3VuZEFydHdvcmt9O2B9PjxUaXRsZUxpbmsgY3NzPXtjc3NgY29sb3I6ICR7c3ViTWVudUFjdGl2ZVRleHRBcnR3b3JrfTtgfSBsaW5rPVwiL2NhdGVnb3J5L3Byb2plY3RzL2tpbmV0aWNzLXJvYm90aWNzXCIgb25DbGljaz17ZSA9PiBjaGFuZ2VQYWdlKGUpfT5LaW5ldGljcyBhbmQgUm9ib3RpY3M8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICAgIDxUaXRsZURpdkhyPjxIckxpbmU+PC9IckxpbmU+PC9UaXRsZURpdkhyPlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kRGVzaWdufTtgfT48VGl0bGVMaW5rIGNzcz17Y3NzYGNvbG9yOiAke3N1Yk1lbnVBY3RpdmVUZXh0RGVzaWdufTtgfSBsaW5rPVwiL2NhdGVnb3J5L3Byb2plY3RzL2ludGVyYWN0aXZlLWRpZ2l0YWxcIiBvbkNsaWNrPXtlID0+IGNoYW5nZVBhZ2UoZSl9PkludGVyYXRpdmUgYW5kIERpZ2l0YWw8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICAgIDxUaXRsZURpdkhyPjxIckxpbmU+PC9IckxpbmU+PC9UaXRsZURpdkhyPlxuICAgICAgPFN1Yk1lbnVUaXRsZURpdiBjc3M9e2Nzc2BiYWNrZ3JvdW5kOiAke3N1Yk1lbnVBY3RpdmVCYWNrZ3JvdW5kVGVjaH07YH0+PFRpdGxlTGluayBjc3M9e2Nzc2Bjb2xvcjogJHtzdWJNZW51QWN0aXZlVGV4dFRlY2h9O2B9IGxpbms9XCIvY2F0ZWdvcnkvcHJvamVjdHMvdGVjaC1yZXNlYXJjaFwiIG9uQ2xpY2s9e2UgPT4gY2hhbmdlUGFnZShlKX0+VGVjaCBhbmQgUmVzZWFyY2g8L1RpdGxlTGluaz48L1N1Yk1lbnVUaXRsZURpdj5cbiAgICA8L1N1Yk1lbnU+XG4gICAgPEZyb250SW1hZ2VEaXYgY3NzPXtjc3Ngb3BhY2l0eTogJHtmcm9udEltYWdlT3BhY2l0eX07YH0+XG4gICAgICA8RnJvbnRJbWFnZVBvbHlnb25PdXREaXY+XG4gICAgICAgIDxBbmltYXRlZCBhbmltYXRpb25Jbj1cImZhZGVJblwiIGFuaW1hdGlvbkluRHVyYXRpb249ezQwMDB9IGFuaW1hdGlvbkluRGVsYXk9ezIwMDB9IGFuaW1hdGlvbk91dD1cImZhZGVPdXRcIiBpc1Zpc2libGU9e3RydWV9PlxuICAgICAgICA8RnJvbnRJbWFnZVBvbHlnb25EaXYgPlxuICAgICAgICAgIHtmb3JlZ3JvdW5kTWVkaWF9XG4gICAgICAgIDwvRnJvbnRJbWFnZVBvbHlnb25EaXY+XG4gICAgICAgIDwvQW5pbWF0ZWQ+XG4gICAgICA8L0Zyb250SW1hZ2VQb2x5Z29uT3V0RGl2PlxuICAgIDwvRnJvbnRJbWFnZURpdj5cbiAgICB7YmFja2dyb3VuZE1lZGlhfVxuICA8L1RyaWFuZ2xlU2VjdGlvbj5cbiAgKTtcblxufVxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFRyaWFuZ2xlTGFuZGluZyk7XG5cbmNvbnN0IFRyaWFuZ2xlU2VjdGlvbiA9IHN0eWxlZC5zZWN0aW9uYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICAgIGhlaWdodDogJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9O1xuICB9XG5gO1xuY29uc3QgVGV4dExvb3BEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICB0b3A6MDtcbiAgbGVmdDowO1xuICB3aWR0aDoxMDAlO1xuICB6LWluZGV4OjM7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbiAgJiBkaXZ7XG4gICAgJiBkaXZ7XG4gICAgICB3aWR0aDoxMDB2dztcbiAgICB9XG4gIH1cbmBcblxuLypcbnRleHQtc2hhZG93OlxuIC0xcHggLTFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksXG4gIDFweCAtMXB4IDEwMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSxcbiAgLTFweCAxcHggMTAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLFxuICAgMXB4IDFweCAxMDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMyk7XG4qL1xuXG5jb25zdCBNeU5hbWUgPSBzdHlsZWQuaDFgXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LWZhbWlseTogXCJBcmNoaXYgR3JvdGVza1wiLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiSGVsdmV0aWNhIE5ldWVcIixcbiAgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDcuNXZ3O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHotaW5kZXg6MztcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3Z3O1xuICBtaXgtYmxlbmQtbW9kZTogbm9ybWFsO1xuICBkaXNwbGF5OmZsZXg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTUuNXZ3O1xuICAgIHBhZGRpbmctdG9wOjE1MHB4O1xuICB9XG5gO1xuXG5cblxuY29uc3QgQmdIMVNwYW4gPSBzdHlsZWQuZGl2YFxucGFkZGluZzogMCA1MHB4O1xudHJhbnNpdGlvbjogYWxsIDEuMHM7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICBwYWRkaW5nOiAwIDA7XG4gIH1cbmBcblxuY29uc3QgTnVtYmVyc0RlY28gPSBzdHlsZWQuc3BhbmBcbiAgY29sb3I6IzcwNzA3MDtcbiAgd2lkdGg6MTAwJTtcbiAgei1pbmRleDoxO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC4yMik7XG4gIGRpc3BsYXk6ZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGZsZXgtd3JhcDogbm93cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMS4wcztcbiAgJiBzcGFue1xuICAgIGZvbnQtd2VpZ2h0OjIwMDtcbiAgfVxuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBkaXNwbGF5Om5vbmU7XG4gICAgICB0b3A6IGNhbGMoJHtzZWN0aW9uSGVpZ2h0UG9ydHJhaXR9ICogMC4zNSk7XG4gIH1cbmBcblxuY29uc3QgTXlOYW1lQm90dG9tTGluZSA9IHN0eWxlZC5zcGFuYFxuICBib3JkZXItYm90dG9tOiAxcHggIzcwNzA3MCBzb2xpZDtcbiAgd2lkdGg6MTAwJTtcbiAgei1pbmRleDoyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC43NSk7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgICAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuODApO1xuICB9XG5gXG5cbmNvbnN0IGNpcmNsZUFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMzMlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgyMCUsLTEwJSkgc2NhbGUoMS4yKTtcbiAgfVxuICA2NiUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0yMCUsMTAlKSBzY2FsZSgwLjgpO1xuICB9XG5gXG5cbmNvbnN0IERlY29DaXJjbGUgPSBzdHlsZWQuc3BhbmBcbiAgYm9yZGVyOiAxcHggIzcwNzA3MCBzb2xpZDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB3aWR0aDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC42KTtcbiAgaGVpZ2h0OiBjYWxjKCR7c2VjdGlvbkhlaWdodH0gKiAwLjYpO1xuICB6LWluZGV4OiAyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygke3NlY3Rpb25IZWlnaHR9ICogMC4yMCk7XG4gIGxlZnQ6OCU7XG4gIGFuaW1hdGlvbjogJHtjaXJjbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgb3ZlcmZsb3c6aGlkZGVuO1xuICBAbWVkaWEob3JpZW50YXRpb246cG9ydHJhaXQpe1xuICAgIHdpZHRoOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuNCk7XG4gICAgaGVpZ2h0OiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuNCk7XG4gICAgdG9wOiBjYWxjKCR7c2VjdGlvbkhlaWdodFBvcnRyYWl0fSAqIDAuMjIpO1xuICB9XG5gXG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZURpdiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgICY6YWZ0ZXJ7XG4gICAgICBjb250ZW50OicnO1xuICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICB3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTtcbiAgICAgIHRvcDowOyBsZWZ0OjA7XG4gICAgICBiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC42KTtcbiAgICAgIG9wYWNpdHk6MDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgIH1cbmA7XG5cbmNvbnN0IEJhY2tncm91bmRJbWFnZURpdkRhcmtlbiA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgICY6YWZ0ZXJ7XG4gICAgICBjb250ZW50OicnO1xuICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICB3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTtcbiAgICAgIHRvcDowOyBsZWZ0OjA7XG4gICAgICBiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsMC42KTtcbiAgICAgIG9wYWNpdHk6MTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICAgIH1cbmA7XG5cblxuXG5jb25zdCBCYWNrZ3JvdW5kSW1hZ2UgPSBzdHlsZWQuaW1nYFxuICBtaW4td2lkdGg6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG5gO1xuXG5cbmNvbnN0IEZyb250SW1hZ2VEaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIHRyYW5zaXRpb246IGFsbCAxLjBzO1xuICB0b3A6MDtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xuICAgICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG4vKi8vaHR0cHM6Ly9iZW5uZXR0ZmVlbHkuY29tL2NsaXBweS8qL1xuY29uc3QgdHJpYW5nbGVBbmltYXRpb24gPSBrZXlmcmFtZXNgXG4gIDMzJSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDUwJSAxNSUsIDMxJSA4OCUsIDc3JSA2MCUpO1xuICB9XG4gIDY2JSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDcyJSAxOSUsIDI5JSAzOSUsIDYwJSA5NCUpO1xuICB9XG5gXG5cbmNvbnN0IHRyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlID0ga2V5ZnJhbWVzYFxuICAzMyUge1xuICAgIGNsaXAtcGF0aDogcG9seWdvbig3MyUgMTMlLCA4JSA1OCUsIDk1JSA5MSUpO1xuICB9XG4gIDY2JSB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDEwMCUgMTklLCAwIDM3JSwgNTklIDg2JSk7XG4gIH1cbmBcblxuY29uc3QgRnJvbnRJbWFnZVBvbHlnb25PdXREaXYgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHR9O1xuICBiYWNrZ3JvdW5kOiAjNzA3MDcwO1xuICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDYzJSAxMCUsIDI4JSA2NSUsIDcyJSA5MiUpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMzUlIDE4JSwgNCUgODklLCAxMjAlIDY2JSk7XG4gICAgYW5pbWF0aW9uOiAke3RyaWFuZ2xlQW5pbWF0aW9uTW9iaWxlfSAxMjBzIGVhc2UgaW5maW5pdGU7XG4gICAgaGVpZ2h0OiAke3NlY3Rpb25IZWlnaHRQb3J0cmFpdH07XG4gIH1cbmA7XG5cbi8qIHRyYW5zaXRpb246IDAuNHMgY3ViaWMtYmV6aWVyKDAsIDEsIDAuNjUsIDAuOTQpOyAqL1xuY29uc3QgRnJvbnRJbWFnZVBvbHlnb25EaXYgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogM3B4O1xuICBsZWZ0OiAzcHg7XG4gIHJpZ2h0OiAzcHg7XG4gIGJvdHRvbTogM3B4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBhbmltYXRpb246ICR7dHJpYW5nbGVBbmltYXRpb259IDEyMHMgZWFzZSBpbmZpbml0ZTtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDYzJSAxMCUsIDI4JSA2NSUsIDcyJSA5MiUpO1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMzUlIDE4JSwgNCUgODklLCAxMjAlIDY2JSk7XG4gICAgICAgIGFuaW1hdGlvbjogJHt0cmlhbmdsZUFuaW1hdGlvbk1vYmlsZX0gMTIwcyBlYXNlIGluZmluaXRlO1xuICB9XG5gO1xuXG5jb25zdCBGcm9udEltYWdlID0gc3R5bGVkLmltZ2BcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG5gO1xuXG4vKiAgbWl4LWJsZW5kLW1vZGU6IGRpZmZlcmVuY2U7Ki9cbmNvbnN0IFN1Yk1lbnUgPSBzdHlsZWQuZGl2YFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIG1peC1ibGVuZC1tb2RlOiBub3JtYWw7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNjBweDtcbiAgei1pbmRleDogMztcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBvdmVyZmxvdzpoaWRkZW47XG4gIHBhZGRpbmc6IDEwcHggMTVweCAxMHB4IDE1cHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGZsZXgtZmxvdzpjb2x1bW47XG4gICAgaGVpZ2h0OiAxODBweDtcbiAgfVxuICB0cmFuc2l0aW9uOiBhbGwgMS4wcztcbmA7XG5cblxuY29uc3QgU3ViTWVudVRpdGxlRGl2ID0gc3R5bGVkLmRpdmBcbiAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gIHdpZHRoOjI1MHB4O1xuICAmOm50aC1vZi10eXBlKDEpe1xuICAgIHRleHQtYWxpZ246bGVmdDtcbiAgfVxuICAmOm50aC1vZi10eXBlKDMpe1xuICAgIHdpZHRoOjMwMHB4O1xuICB9XG4gICY6bnRoLW9mLXR5cGUoNSl7XG4gICAgdGV4dC1hbGlnbjpyaWdodDtcbiAgfVxuICB0ZXh0LXNoYWRvdzogLTFweCAtMXB4IDBweCByZ2JhKDI1NSwyNTUsMjU1LDAuMCksMXB4IC0xcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4wKSwtMXB4IDFweCAwcHggcmdiYSgyNTUsMjU1LDI1NSwwLjApLDFweCAxcHggMHB4IHJnYmEoMjU1LDI1NSwyNTUsMC4yKTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgaGVpZ2h0OjM4cHg7XG4gICAgJjpudGgtb2YtdHlwZSgxKXtcbiAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIH1cbiAgICAmOm50aC1vZi10eXBlKDMpe1xuICAgICAgd2lkdGg6MjcwcHg7XG4gICAgfVxuICAgICY6bnRoLW9mLXR5cGUoNSl7XG4gICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IFRpdGxlRGl2SHIgPSBzdHlsZWQuZGl2YFxuICBmbGV4LWdyb3c6MTtcbiAgbWFyZ2luLXRvcDogLTIwcHg7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgYmxhY2s7XG4gICAgbGVmdDo1MCU7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgfVxuYDtcblxuY29uc3QgSHJMaW5lID0gc3R5bGVkLmhyYFxuICBib3JkZXI6IG5vbmU7XG4gIGhlaWdodDogMXB4O1xuICAvKiBTZXQgdGhlIGhyIGNvbG9yICovXG4gIGNvbG9yOiBibGFjazsgLyogb2xkIElFICovXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICB9XG5gO1xuXG5jb25zdCBUaXRsZUxpbmsgPSBzdHlsZWQoTGluaylgXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogJHtzdWJNZW51Rm9udFNpemV9O1xuICBmb250LXdlaWdodDo1MDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHBhZGRpbmc6NXB4IDQ1cHggMTVweCA0NXB4O1xuICAmOmhvdmVyIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuICAmOmFjdGl2ZXtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgcGFkZGluZzogMnB4IDE1cHggMHB4IDE1cHg7XG4gIH1cbmA7XG5cbmNvbnN0IEJsYWNrRGl2ID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZDpibGFjaztcbiAgd2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG5gO1xuXG5jb25zdCBXaGl0ZURpdiA9IHN0eWxlZC5kaXZgXG4gIGJhY2tncm91bmQ6d2hpdGU7XG4gIHdpZHRoOjEwMCU7XG4gIGhlaWdodDoxMDAlO1xuYDtcblxuY29uc3QgUG9zdFRpdGxlRGl2ID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6MTAwJTtcbiAgcGFkZGluZy1sZWZ0OiA0NXB4O1xuICBAbWVkaWEob3JpZW50YXRpb246IHBvcnRyYWl0KXtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIH1cbmA7XG5cbmNvbnN0IFBvc3RUaXRsZSA9IHN0eWxlZC5oMWBcbiAgcG9zaXRpb246YWJzb2x1dGU7XG4gIGJvdHRvbToxLjNlbTtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgZm9udC1zaXplOiAzLjVlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZm9udC1zaXplOiA4dnc7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgfVxuYDtcbmNvbnN0IFBvc3RUaXRsZUNoaW5lc2UgPSBzdHlsZWQuaDFgXG4gIHBvc2l0aW9uOmFic29sdXRlO1xuICBib3R0b206MDtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgZm9udC1zaXplOiAzLjFlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgQG1lZGlhKG9yaWVudGF0aW9uOiBwb3J0cmFpdCl7XG4gICAgZm9udC1zaXplOiA4dnc7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgfVxuYDtcblxuXG5jb25zdCBWaWRlb1BsYXllck5hdGl2ZSA9IHN0eWxlZC52aWRlb2BcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIG92ZXJmbG93OmhpZGRlbjtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtYXNwZWN0LXJhdGlvOiAxOTIwLzEwODApIHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLWFzcGVjdC1yYXRpbzogMTkyMC8xMDgwKSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgfVxuYDtcblxuXG5jb25zdCBJbWcgPSBzdHlsZWQuaW1nYFxuICBkaXNwbGF5OmJsb2NrO1xuICBtaW4td2lkdGg6MTAwJTtcbiAgaGVpZ2h0OjEwMCU7XG4gIG9iamVjdC1maXQ6Y292ZXI7XG4gIEBtZWRpYShvcmllbnRhdGlvbjogcG9ydHJhaXQpe1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OjEwMCU7XG4gIH1cbmBcbiJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Img=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"img\", false?undefined:{target:\"e1649dpy0\",label:\"Img\"})( false?undefined:{name:\"xx9kuk\",styles:\"display:block;min-width:100%;height:100%;object-fit:cover;@media(orientation: portrait){width:100%;height:100%;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/triangle-landing/triangle-landing.js\n");

/***/ }),

/***/ "./packages/twentytwenty-theme/src/helpers/index.js":
/*!**********************************************************!*\
  !*** ./packages/twentytwenty-theme/src/helpers/index.js ***!
  \**********************************************************/
/*! exports provided: getPostsFromCategory, getPostsGroupedByCategory, createMarkupObject, getRandomColor, buildUrl, isUrl, getUrlData, getMediaAttributes, getTaxonomies, getPostAuthor, getPostData, formatPostData, useWindowSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPostsFromCategory\", function() { return getPostsFromCategory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPostsGroupedByCategory\", function() { return getPostsGroupedByCategory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMarkupObject\", function() { return createMarkupObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRandomColor\", function() { return getRandomColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildUrl\", function() { return buildUrl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUrl\", function() { return isUrl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUrlData\", function() { return getUrlData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMediaAttributes\", function() { return getMediaAttributes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTaxonomies\", function() { return getTaxonomies; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPostAuthor\", function() { return getPostAuthor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPostData\", function() { return getPostData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatPostData\", function() { return formatPostData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useWindowSize\", function() { return useWindowSize; });\n/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.includes.js */ \"./node_modules/core-js/modules/es.string.includes.js\");\n/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.reduce.js */ \"./node_modules/core-js/modules/es.array.reduce.js\");\n/* harmony import */ var core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_reduce_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ \"./node_modules/core-js/modules/es.array.iterator.js\");\n/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ \"./node_modules/core-js/modules/web.dom-collections.iterator.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../config */ \"./packages/twentytwenty-theme/src/config.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\nfunction ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}// export const getCategoriesIds = categories => Object.keys(categories)\n// export const getCategoriesValues = categories => Object.keys(categories)\nconst getPostsFromCategory=({post},categoryId)=>Object.keys(post).map(postID=>post[postID]).filter(({categories})=>categories.includes(+categoryId));const getPostsGroupedByCategory=source=>{return Object.keys(_config__WEBPACK_IMPORTED_MODULE_5__[\"categoriesWidgetsHome\"]).reduce((acc,categoryId)=>{const posts=getPostsFromCategory(source,categoryId).slice(0,5);const category=source.category[categoryId];return[{posts,category},...acc];},[]);};const createMarkupObject=renderedHtml=>({__html:renderedHtml});const getRandomColor=()=>'#'+new Array(6).fill(0).map(digit=>'0123456789ABCDEF'[Math.floor(Math.random()*16)]).join('');//Copy From https://github.com/alexadark/frontity-starter-project/blob/master/packages/frontity-starter-theme/src/helpers/index.js\nconst buildUrl=(libraries,path,page,query)=>libraries.source.stringify({path,page,query});function isUrl(str){var regexp=/(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!-/]))?/;return regexp.test(str);}const getUrlData=state=>state.source.get(state.router.link);function getSrcSet(media){const srcset=Object.values(media.media_details.sizes)// Get the url and width of each size.\n.map(item=>[item.source_url,item.width])// Recude them to a string with the format required by `srcset`.\n.reduce((final,current,index,array)=>final.concat(`${current.join(\" \")}w${index!==array.length-1?\", \":\"\"}`),\"\")||null;return srcset;}function getMediaAttributes(state,id){const media=state.source.attachment[id];if(!media)return{};const srcSet=getSrcSet(media);return{id,alt:media.title.rendered,src:media.source_url,srcSet};}function getTaxonomies(state,post,taxonomy,taxonomies){const allTaxonomies=state.source[taxonomy];const taxs=post[taxonomies]&&post[taxonomies].map(itemId=>allTaxonomies[itemId]);return taxs?taxs.filter(Boolean):[];}function getPostAuthor(state,post){return state.source.author[post.author];}function getPostData(state){const data=state.source.get(state.router.link);const post=state.source[data.type][data.id];return _objectSpread(_objectSpread({},post),{},{isReady:data.isReady,isPage:data.isPage});}function formatPostData(state,post){return{id:post.id,author:getPostAuthor(state,post),publishDate:post.date,title:post.title&&post.title.rendered,categories:getTaxonomies(state,post,\"category\",\"categories\"),tags:getTaxonomies(state,post,\"tag\",\"tags\"),link:post.link,featured_media:getMediaAttributes(state,post.featured_media),content:post.content&&post.content.rendered,excerpt:post.excerpt&&post.excerpt.rendered,acf:post.acf};}// Hook\nfunction useWindowSize(){const isClient=typeof window==='object';function getSize(){return{width:isClient?window.innerWidth:undefined,height:isClient?window.innerHeight:undefined};}const[windowSize,setWindowSize]=Object(react__WEBPACK_IMPORTED_MODULE_6__[\"useState\"])(getSize);Object(react__WEBPACK_IMPORTED_MODULE_6__[\"useEffect\"])(()=>{if(!isClient){return false;}function handleResize(){setWindowSize(getSize());}window.addEventListener('resize',handleResize);return()=>window.removeEventListener('resize',handleResize);},[]);// Empty array ensures that effect is only run on mount and unmount\nreturn windowSize;}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/helpers/index.js\n");

/***/ })

}]);